
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND BOOL_TYPE COMMA DIVIDE DOUBLEDOT DOUBLE_TYPE ELSE EQUAL EQUALEQUAL FALSE FLOAT FLOAT_TYPE FUNCTION GREATERTHAN GREATERTHANOREQUAL IDK IF INPUTFLOAT INPUTINT INPUTSTRING INT INT_TYPE LBRACKET LCURLY LESSTHAN LESSTHANOREQUAL LPARENTHESIS MINUS MODULUS NAME NOTEQUAL OR OWO PLUS PRINT RBRACKET RCURLY RETURN RPARENTHESIS SEMICOLON STRING STRING_TYPE TIMES TRUE VOID WHILEn_seen_type : n_open_new_scope : n_open_new_scope_function : n_close_scope : n_variable_reference : n_variable_instantiate : n_variable_instantiate_param : n_math_expression_1_int : n_math_expression_1_float : n_math_expression_1_string : n_math_expression_1_bool : n_math_expression_1_name : n_math_expression_2 : n_math_expression_3 : n_math_expression_4 : n_math_expression_5 : n_math_expression_6 : n_math_expression_7 : n_math_expression_8 : n_math_expression_9 : n_math_expression_10 : n_math_expression_11 : n_math_expression_12 : n_two_way_conditional_1 : n_two_way_conditional_2 : n_two_way_conditional_3 : p_n_pre_condition_loop_1 : p_n_pre_condition_loop_2 : p_n_pre_condition_loop_3 : n_seen_equal_op : n_before_function_definition : n_function_block_start : n_function_block_end : n_function_type : n_function_call_1 : n_function_call_2 : n_function_call_3 : n_function_call_4 : n_function_call_5 : n_function_call_6 : n_return : n_return_void : n_print : n_input_string : n_input_int : n_input_float : n_arr_reference : n_matrix_reference : n_arr_instantiate_name : n_arr_reference_name : n_arr_instantiate_size : n_arr_instantiate : n_matrix_instantiate : n_end : \n    empty :\n    \n    program : program_aux codeblock n_end\n    \n    program_aux : IDK\n    | OWO\n    \n    type : INT_TYPE n_seen_type\n    | STRING_TYPE n_seen_type\n    | DOUBLE_TYPE n_seen_type\n    | FLOAT_TYPE n_seen_type\n    | BOOL_TYPE n_seen_type\n    \n    relational_operator : GREATERTHAN n_math_expression_8\n    | LESSTHAN n_math_expression_8\n    | EQUALEQUAL n_math_expression_8\n    | LESSTHANOREQUAL n_math_expression_8\n    | GREATERTHANOREQUAL n_math_expression_8\n    | NOTEQUAL n_math_expression_8\n    \n    literal : FLOAT n_math_expression_1_float\n    | INT n_math_expression_1_int\n    | STRING n_math_expression_1_string\n    | TRUE n_math_expression_1_bool\n    | FALSE n_math_expression_1_bool\n    \n    function_type : VOID n_function_type\n    | INT_TYPE n_function_type\n    | STRING_TYPE n_function_type\n    | DOUBLE_TYPE n_function_type\n    | FLOAT_TYPE n_function_type\n    | BOOL_TYPE n_function_type\n    \n    function_definition : n_before_function_definition FUNCTION NAME n_open_new_scope_function parameter_list DOUBLEDOT function_type LCURLY n_function_block_start codeblock RCURLY n_close_scope n_function_block_end\n    \n    return : RETURN expression n_return SEMICOLON\n    | RETURN n_return_void SEMICOLON\n    \n    function_call : NAME n_function_call_1                   LPARENTHESIS n_function_call_2 arg_list RPARENTHESIS                   n_function_call_5 n_function_call_6\n                  | NAME n_function_call_1                   LPARENTHESIS RPARENTHESIS                   n_function_call_6\n    \n    arg_list : arg\n    | arg COMMA n_function_call_4 arg_list\n    \n    parameter_list : empty\n    | parameter\n    | parameter COMMA parameter_list\n    \n    arg : expression n_function_call_3\n    \n    parameter : type NAME n_variable_instantiate_param\n    \n    expression : expression_or\n    | expression_or AND n_math_expression_10 expression n_math_expression_11\n    \n    expression_or : expression_rel\n    | expression_rel OR n_math_expression_10 expression_or n_math_expression_12\n    \n    expression_rel : exp\n    | exp relational_operator exp n_math_expression_9\n    \n    exp : termino n_math_expression_4\n    | termino n_math_expression_4 PLUS n_math_expression_2 exp\n    | termino n_math_expression_4 MINUS n_math_expression_2 exp\n    \n    termino : factor n_math_expression_5\n    | factor n_math_expression_5 TIMES n_math_expression_3 termino\n    | factor n_math_expression_5 DIVIDE n_math_expression_3 termino\n    | factor n_math_expression_5 MODULUS n_math_expression_3 termino\n    \n    factor : LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7\n    | PLUS value\n    | MINUS value\n    | value\n    \n    input : INPUTSTRING LPARENTHESIS RPARENTHESIS n_input_string\n    | INPUTINT LPARENTHESIS RPARENTHESIS n_input_int\n    | INPUTFLOAT LPARENTHESIS RPARENTHESIS n_input_float\n    \n    value : function_call\n    | literal\n    | reference\n    | input\n    \n        reference : NAME n_variable_reference n_math_expression_1_name\n        | arr_reference\n    \n        arr_reference :\n        | NAME n_arr_reference_name LBRACKET expression RBRACKET n_arr_reference\n        | NAME n_arr_reference_name LBRACKET expression RBRACKET LBRACKET expression RBRACKET n_matrix_reference\n    \n    declare : type NAME n_variable_instantiate\n    | type NAME n_arr_instantiate_name LBRACKET INT n_arr_instantiate_size RBRACKET n_arr_instantiate\n    | type NAME n_arr_instantiate_name LBRACKET INT n_arr_instantiate_size RBRACKET LBRACKET INT n_arr_instantiate_size RBRACKET n_matrix_instantiate\n    \n    assign : type NAME n_variable_instantiate n_math_expression_1_name EQUAL n_seen_equal_op expression\n    | reference EQUAL n_seen_equal_op expression\n    \n    print : PRINT LPARENTHESIS expression n_print RPARENTHESIS\n    \n    statement : statement_aux SEMICOLON\n    \n    statement_aux : assign\n    | declare\n    | function_call\n    | print\n    \n    codeblock : empty\n    | codeblock_aux codeblock\n    \n    codeblock_aux : statement\n    | function_definition\n    | condition_if\n    | loop\n    | return\n    \n    loop : whileloop\n    \n    whileloop : WHILE p_n_pre_condition_loop_1 LPARENTHESIS expression RPARENTHESIS p_n_pre_condition_loop_2 LCURLY n_open_new_scope codeblock RCURLY p_n_pre_condition_loop_3 n_close_scope\n    \n    condition_if : IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2\n    \n    condition_else : ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    | empty\n    '
    
_lr_action_items = {'IDK':([0,],[3,]),'OWO':([0,],[4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,17,33,34,35,79,112,214,218,219,221,222,224,225,227,228,230,232,236,237,],[0,-55,-57,-58,-54,-133,-55,-135,-136,-137,-138,-139,-140,-56,-134,-128,-83,-82,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-4,-143,]),'IF':([2,3,4,7,8,9,10,11,12,17,35,79,112,145,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[16,-57,-58,16,-135,-136,-137,-138,-139,-140,-128,-83,-82,-24,-2,16,-2,-32,16,16,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,16,-4,-143,]),'RETURN':([2,3,4,7,8,9,10,11,12,17,35,79,112,145,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[18,-57,-58,18,-135,-136,-137,-138,-139,-140,-128,-83,-82,-24,-2,18,-2,-32,18,18,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,18,-4,-143,]),'FUNCTION':([2,3,4,7,8,9,10,11,12,14,17,35,79,112,145,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[-31,-57,-58,-31,-135,-136,-137,-138,-139,36,-140,-128,-83,-82,-24,-2,-31,-2,-32,-31,-31,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,-31,-4,-143,]),'WHILE':([2,3,4,7,8,9,10,11,12,17,35,79,112,145,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[23,-57,-58,23,-135,-136,-137,-138,-139,-140,-128,-83,-82,-24,-2,23,-2,-32,23,23,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,23,-4,-143,]),'NAME':([2,3,4,7,8,9,10,11,12,17,18,24,27,28,29,30,31,35,36,40,47,48,50,66,67,68,69,70,71,72,74,76,79,80,81,82,83,84,85,86,87,88,93,102,105,108,112,113,114,116,117,118,119,120,121,122,123,124,125,126,139,145,149,150,151,152,153,159,166,168,170,180,192,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[15,-57,-58,15,-135,-136,-137,-138,-139,-140,15,65,-1,-1,-1,-1,-1,-128,73,15,15,15,-17,-30,15,-59,-60,-61,-62,-63,-36,15,-83,-21,-21,15,-19,-19,-19,-19,-19,-19,15,15,15,15,-82,15,15,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,164,-24,15,15,15,15,15,-30,-38,15,-2,15,15,15,-2,-32,15,15,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,15,-4,-143,]),'PRINT':([2,3,4,7,8,9,10,11,12,17,35,79,112,145,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[26,-57,-58,26,-135,-136,-137,-138,-139,-140,-128,-83,-82,-24,-2,26,-2,-32,26,26,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,26,-4,-143,]),'INT_TYPE':([2,3,4,7,8,9,10,11,12,17,35,73,79,107,112,145,162,163,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[27,-57,-58,27,-135,-136,-137,-138,-139,-140,-128,-3,-83,27,-82,-24,184,27,-2,27,-2,-32,27,27,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,27,-4,-143,]),'STRING_TYPE':([2,3,4,7,8,9,10,11,12,17,35,73,79,107,112,145,162,163,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[28,-57,-58,28,-135,-136,-137,-138,-139,-140,-128,-3,-83,28,-82,-24,185,28,-2,28,-2,-32,28,28,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,28,-4,-143,]),'DOUBLE_TYPE':([2,3,4,7,8,9,10,11,12,17,35,73,79,107,112,145,162,163,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[29,-57,-58,29,-135,-136,-137,-138,-139,-140,-128,-3,-83,29,-82,-24,186,29,-2,29,-2,-32,29,29,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,29,-4,-143,]),'FLOAT_TYPE':([2,3,4,7,8,9,10,11,12,17,35,73,79,107,112,145,162,163,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[30,-57,-58,30,-135,-136,-137,-138,-139,-140,-128,-3,-83,30,-82,-24,187,30,-2,30,-2,-32,30,30,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,30,-4,-143,]),'BOOL_TYPE':([2,3,4,7,8,9,10,11,12,17,35,73,79,107,112,145,162,163,170,194,195,198,209,212,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[31,-57,-58,31,-135,-136,-137,-138,-139,-140,-128,-3,-83,31,-82,-24,188,31,-2,31,-2,-32,31,31,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,31,-4,-143,]),'EQUAL':([2,3,4,7,8,9,10,11,12,15,17,25,32,35,38,65,75,79,103,112,132,144,145,169,170,194,195,198,207,209,212,213,214,218,219,221,222,224,225,227,228,230,232,233,234,236,237,],[-119,-57,-58,-119,-135,-136,-137,-138,-139,-5,-140,66,-118,-128,-12,-6,-117,-83,-12,-82,159,-47,-24,-120,-2,-119,-2,-32,-48,-119,-119,-121,-4,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,-119,-4,-143,]),'RCURLY':([6,7,8,9,10,11,12,17,34,35,79,112,145,170,194,195,198,208,209,212,214,215,217,218,219,221,222,224,225,227,228,230,232,233,234,235,236,237,],[-133,-55,-135,-136,-137,-138,-139,-140,-134,-128,-83,-82,-24,-2,-55,-2,-32,214,-55,-55,-4,219,221,-55,-29,-4,-25,-144,-4,-33,-142,-141,-81,-2,-55,236,-4,-143,]),'SEMICOLON':([13,15,18,19,20,21,22,32,38,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,65,66,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,103,105,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,134,143,144,146,147,148,149,150,151,152,153,154,155,156,157,159,161,165,169,171,172,173,174,175,176,177,178,180,191,196,197,205,207,211,213,226,231,],[35,-5,-42,-129,-130,-131,-132,-118,-12,-41,79,-93,-95,-97,-15,-119,-119,-16,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-6,-30,-117,112,-21,-21,-119,-19,-19,-19,-19,-19,-19,-99,-107,-108,-102,-70,-71,-72,-73,-74,-122,-119,-40,-119,-119,-20,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-126,-85,-47,-22,-23,-98,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-127,-39,-120,-94,-96,-100,-101,-103,-104,-105,-106,-119,-40,-125,-52,-84,-48,-123,-121,-53,-124,]),'LPARENTHESIS':([15,16,18,23,26,37,40,50,61,62,63,64,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[-35,40,50,-27,67,74,50,-17,99,100,101,102,-30,50,-36,50,-21,-21,50,-19,-19,-19,-19,-19,-19,50,50,50,50,50,50,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,50,50,50,50,50,-30,-38,50,50,50,]),'TIMES':([15,18,32,38,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-119,-19,-19,-19,-19,-19,-19,-107,-108,124,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-106,-119,-40,-119,-84,-48,-121,]),'DIVIDE':([15,18,32,38,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-119,-19,-19,-19,-19,-19,-19,-107,-108,125,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-106,-119,-40,-119,-84,-48,-121,]),'MODULUS':([15,18,32,38,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-119,-19,-19,-19,-19,-19,-19,-107,-108,126,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-106,-119,-40,-119,-84,-48,-121,]),'PLUS':([15,18,32,38,40,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,175,176,177,178,180,191,192,205,207,213,],[-5,47,-118,-12,47,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,47,-36,-117,47,-21,-21,47,-19,-19,-19,-19,-19,-19,122,-107,-108,-102,47,-70,-71,-72,-73,-74,47,47,47,-40,47,47,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,47,47,47,47,47,-18,-110,-111,-112,-30,-39,-38,47,-120,-103,-104,-105,-106,47,-40,47,-84,-48,-121,]),'MINUS':([15,18,32,38,40,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,175,176,177,178,180,191,192,205,207,213,],[-5,48,-118,-12,48,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,48,-36,-117,48,-21,-21,48,-19,-19,-19,-19,-19,-19,123,-107,-108,-102,48,-70,-71,-72,-73,-74,48,48,48,-40,48,48,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,48,48,48,48,48,-18,-110,-111,-112,-30,-39,-38,48,-120,-103,-104,-105,-106,48,-40,48,-84,-48,-121,]),'GREATERTHAN':([15,18,32,38,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,83,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'LESSTHAN':([15,18,32,38,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,84,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'EQUALEQUAL':([15,18,32,38,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,85,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'LESSTHANOREQUAL':([15,18,32,38,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,86,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'GREATERTHANOREQUAL':([15,18,32,38,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,87,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'NOTEQUAL':([15,18,32,38,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,122,123,124,125,126,128,129,130,143,144,149,150,151,152,153,154,155,156,157,159,165,166,168,169,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,88,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'OR':([15,18,32,38,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,148,149,150,151,152,153,154,155,156,157,159,165,166,168,169,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,81,-97,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-119,-19,-19,-19,-19,-19,-19,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-20,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-98,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'AND':([15,18,32,38,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,74,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,102,105,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,147,148,149,150,151,152,153,154,155,156,157,159,165,166,168,169,172,173,174,175,176,177,178,180,191,192,205,207,213,],[-5,-119,-118,-12,-119,80,-95,-97,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-30,-119,-36,-117,-119,-21,-21,-119,-19,-19,-19,-19,-19,-19,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,-119,-119,-119,-40,-119,-119,-20,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-23,-98,-119,-119,-119,-119,-119,-18,-110,-111,-112,-30,-39,-38,-119,-120,-96,-100,-101,-103,-104,-105,-106,-119,-40,-119,-84,-48,-121,]),'RPARENTHESIS':([15,32,38,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,67,74,75,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,165,166,167,169,171,172,173,174,175,176,177,178,191,192,205,206,207,213,],[-5,-118,-12,-119,-93,-95,-97,-15,-119,-119,-16,-17,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-119,109,-117,111,-21,-21,-119,-19,-19,-19,-19,-19,-19,-99,-107,-108,-102,-119,-70,-71,-72,-73,-74,128,129,130,-119,-43,-119,-40,-119,-119,-20,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,154,-44,-45,-46,158,161,165,-86,-37,-85,-47,-22,-23,-98,-119,-119,-119,-119,-119,-18,-110,-111,-112,-39,-38,-91,-120,-94,-96,-100,-101,-103,-104,-105,-106,-40,-119,-84,-87,-48,-121,]),'RBRACKET':([15,32,38,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,143,144,146,147,148,149,150,151,152,153,154,155,156,157,160,165,168,169,171,172,173,174,175,176,177,178,181,191,193,205,207,213,216,220,],[-5,-118,-12,-93,-95,-97,-15,-119,-119,-16,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-117,-119,-21,-21,-119,-19,-19,-19,-19,-19,-19,-99,-107,-108,-102,-70,-71,-72,-73,-74,-40,144,-119,-119,-20,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,-85,-47,-22,-23,-98,-119,-119,-119,-119,-119,-18,-110,-111,-112,-51,-39,-119,-120,-94,-96,-100,-101,-103,-104,-105,-106,197,-40,207,-84,-48,-121,-51,226,]),'COMMA':([15,32,38,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,74,75,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,108,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,138,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,164,165,166,167,169,171,172,173,174,175,176,177,178,190,191,192,205,207,213,],[-5,-118,-12,-93,-95,-97,-15,-119,-119,-16,-109,-113,-114,-115,-116,-9,-8,-10,-11,-11,-36,-117,-21,-21,-119,-19,-19,-19,-19,-19,-19,-99,-107,-108,-102,-70,-71,-72,-73,-74,-119,-40,-119,-119,-20,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,-44,-45,-46,163,166,-37,-85,-47,-22,-23,-98,-119,-119,-119,-119,-119,-18,-110,-111,-112,-7,-39,-38,-91,-120,-94,-96,-100,-101,-103,-104,-105,-106,-92,-40,-119,-84,-48,-121,]),'LBRACKET':([15,39,65,104,144,197,],[-50,76,-49,133,168,210,]),'FLOAT':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[56,56,56,56,-17,-30,56,-36,56,-21,-21,56,-19,-19,-19,-19,-19,-19,56,56,56,56,56,56,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,56,56,56,56,56,-30,-38,56,56,56,]),'INT':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,133,149,150,151,152,153,159,166,168,180,192,210,],[57,57,57,57,-17,-30,57,-36,57,-21,-21,57,-19,-19,-19,-19,-19,-19,57,57,57,57,57,57,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,160,57,57,57,57,57,-30,-38,57,57,57,216,]),'STRING':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[58,58,58,58,-17,-30,58,-36,58,-21,-21,58,-19,-19,-19,-19,-19,-19,58,58,58,58,58,58,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,58,58,58,58,58,-30,-38,58,58,58,]),'TRUE':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[59,59,59,59,-17,-30,59,-36,59,-21,-21,59,-19,-19,-19,-19,-19,-19,59,59,59,59,59,59,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,59,59,59,59,59,-30,-38,59,59,59,]),'FALSE':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[60,60,60,60,-17,-30,60,-36,60,-21,-21,60,-19,-19,-19,-19,-19,-19,60,60,60,60,60,60,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,60,60,60,60,60,-30,-38,60,60,60,]),'INPUTSTRING':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[61,61,61,61,-17,-30,61,-36,61,-21,-21,61,-19,-19,-19,-19,-19,-19,61,61,61,61,61,61,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,61,61,61,61,61,-30,-38,61,61,61,]),'INPUTINT':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[62,62,62,62,-17,-30,62,-36,62,-21,-21,62,-19,-19,-19,-19,-19,-19,62,62,62,62,62,62,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,62,62,62,62,62,-30,-38,62,62,62,]),'INPUTFLOAT':([18,40,47,48,50,66,67,74,76,80,81,82,83,84,85,86,87,88,93,102,105,108,113,114,116,117,118,119,120,121,122,123,124,125,126,149,150,151,152,153,159,166,168,180,192,],[63,63,63,63,-17,-30,63,-36,63,-21,-21,63,-19,-19,-19,-19,-19,-19,63,63,63,63,63,63,-64,-65,-66,-67,-68,-69,-13,-13,-14,-14,-14,63,63,63,63,63,-30,-38,63,63,63,]),'DOUBLEDOT':([73,107,136,137,138,163,164,189,190,],[-3,-55,162,-88,-89,-55,-7,-90,-92,]),'LCURLY':([111,158,179,182,183,184,185,186,187,188,199,200,201,202,203,204,223,229,],[145,-28,195,198,-34,-34,-34,-34,-34,-34,-75,-76,-77,-78,-79,-80,-26,233,]),'VOID':([162,],[183,]),'ELSE':([214,218,],[-4,223,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'codeblock':([2,7,194,209,212,234,],[5,34,208,215,217,235,]),'empty':([2,7,107,163,194,209,212,218,234,],[6,6,137,137,6,6,6,224,6,]),'codeblock_aux':([2,7,194,209,212,234,],[7,7,7,7,7,7,]),'statement':([2,7,194,209,212,234,],[8,8,8,8,8,8,]),'function_definition':([2,7,194,209,212,234,],[9,9,9,9,9,9,]),'condition_if':([2,7,194,209,212,234,],[10,10,10,10,10,10,]),'loop':([2,7,194,209,212,234,],[11,11,11,11,11,11,]),'return':([2,7,194,209,212,234,],[12,12,12,12,12,12,]),'statement_aux':([2,7,194,209,212,234,],[13,13,13,13,13,13,]),'n_before_function_definition':([2,7,194,209,212,234,],[14,14,14,14,14,14,]),'whileloop':([2,7,194,209,212,234,],[17,17,17,17,17,17,]),'assign':([2,7,194,209,212,234,],[19,19,19,19,19,19,]),'declare':([2,7,194,209,212,234,],[20,20,20,20,20,20,]),'function_call':([2,7,18,40,47,48,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,194,209,212,234,],[21,21,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,21,21,21,21,]),'print':([2,7,194,209,212,234,],[22,22,22,22,22,22,]),'type':([2,7,107,163,194,209,212,234,],[24,24,139,139,24,24,24,24,]),'reference':([2,7,18,40,47,48,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,194,209,212,234,],[25,25,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,25,25,25,25,]),'arr_reference':([2,7,18,40,47,48,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,194,209,212,234,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'n_end':([5,],[33,]),'n_function_call_1':([15,],[37,]),'n_variable_reference':([15,],[38,]),'n_arr_reference_name':([15,],[39,]),'expression':([18,40,67,76,93,102,105,108,113,168,180,192,],[41,77,106,110,127,131,134,142,146,193,196,142,]),'n_return_void':([18,],[42,]),'expression_or':([18,40,67,76,93,102,105,108,113,114,168,180,192,],[43,43,43,43,43,43,43,43,43,147,43,43,43,]),'expression_rel':([18,40,67,76,93,102,105,108,113,114,168,180,192,],[44,44,44,44,44,44,44,44,44,44,44,44,44,]),'exp':([18,40,67,76,82,93,102,105,108,113,114,149,150,168,180,192,],[45,45,45,45,115,45,45,45,45,45,45,173,174,45,45,45,]),'termino':([18,40,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,],[46,46,46,46,46,46,46,46,46,46,46,46,46,175,176,177,46,46,46,]),'factor':([18,40,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'value':([18,40,47,48,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,],[51,51,90,91,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'literal':([18,40,47,48,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'input':([18,40,47,48,67,76,82,93,102,105,108,113,114,149,150,151,152,153,168,180,192,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'p_n_pre_condition_loop_1':([23,],[64,]),'n_seen_type':([27,28,29,30,31,],[68,69,70,71,72,]),'n_math_expression_1_name':([38,103,],[75,132,]),'n_return':([41,],[78,]),'relational_operator':([45,],[82,]),'n_math_expression_4':([46,],[89,]),'n_math_expression_5':([49,],[92,]),'n_math_expression_6':([50,],[93,]),'n_math_expression_1_float':([56,],[94,]),'n_math_expression_1_int':([57,],[95,]),'n_math_expression_1_string':([58,],[96,]),'n_math_expression_1_bool':([59,60,],[97,98,]),'n_variable_instantiate':([65,],[103,]),'n_arr_instantiate_name':([65,],[104,]),'n_seen_equal_op':([66,159,],[105,180,]),'n_open_new_scope_function':([73,],[107,]),'n_function_call_2':([74,],[108,]),'n_math_expression_10':([80,81,],[113,114,]),'n_math_expression_8':([83,84,85,86,87,88,],[116,117,118,119,120,121,]),'n_print':([106,],[135,]),'parameter_list':([107,163,],[136,189,]),'parameter':([107,163,],[138,138,]),'arg_list':([108,192,],[140,206,]),'arg':([108,192,],[141,141,]),'n_function_call_6':([109,191,],[143,205,]),'n_math_expression_9':([115,],[148,]),'n_math_expression_2':([122,123,],[149,150,]),'n_math_expression_3':([124,125,126,],[151,152,153,]),'n_input_string':([128,],[155,]),'n_input_int':([129,],[156,]),'n_input_float':([130,],[157,]),'n_function_call_3':([142,],[167,]),'n_arr_reference':([144,],[169,]),'n_two_way_conditional_1':([145,],[170,]),'n_math_expression_11':([146,],[171,]),'n_math_expression_12':([147,],[172,]),'n_math_expression_7':([154,],[178,]),'p_n_pre_condition_loop_2':([158,],[179,]),'n_arr_instantiate_size':([160,216,],[181,220,]),'function_type':([162,],[182,]),'n_variable_instantiate_param':([164,],[190,]),'n_function_call_5':([165,],[191,]),'n_function_call_4':([166,],[192,]),'n_open_new_scope':([170,195,233,],[194,209,234,]),'n_function_type':([183,184,185,186,187,188,],[199,200,201,202,203,204,]),'n_arr_instantiate':([197,],[211,]),'n_function_block_start':([198,],[212,]),'n_matrix_reference':([207,],[213,]),'n_close_scope':([214,221,225,236,],[218,227,230,237,]),'condition_else':([218,],[222,]),'p_n_pre_condition_loop_3':([219,],[225,]),'n_two_way_conditional_2':([222,],[228,]),'n_two_way_conditional_3':([223,],[229,]),'n_matrix_instantiate':([226,],[231,]),'n_function_block_end':([227,],[232,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','scanner.py',223),
  ('n_open_new_scope -> <empty>','n_open_new_scope',0,'p_n_open_new_scope','scanner.py',230),
  ('n_open_new_scope_function -> <empty>','n_open_new_scope_function',0,'p_n_open_new_scope_function','scanner.py',239),
  ('n_close_scope -> <empty>','n_close_scope',0,'p_n_close_scope','scanner.py',259),
  ('n_variable_reference -> <empty>','n_variable_reference',0,'p_n_variable_reference','scanner.py',266),
  ('n_variable_instantiate -> <empty>','n_variable_instantiate',0,'p_n_variable_instantiate','scanner.py',282),
  ('n_variable_instantiate_param -> <empty>','n_variable_instantiate_param',0,'p_n_variable_instantiate_param','scanner.py',290),
  ('n_math_expression_1_int -> <empty>','n_math_expression_1_int',0,'p_n_math_expression_1_int','scanner.py',306),
  ('n_math_expression_1_float -> <empty>','n_math_expression_1_float',0,'p_n_math_expression_1_float','scanner.py',313),
  ('n_math_expression_1_string -> <empty>','n_math_expression_1_string',0,'p_n_math_expression_1_string','scanner.py',320),
  ('n_math_expression_1_bool -> <empty>','n_math_expression_1_bool',0,'p_n_math_expression_1_bool','scanner.py',328),
  ('n_math_expression_1_name -> <empty>','n_math_expression_1_name',0,'p_n_math_expression_1_name','scanner.py',334),
  ('n_math_expression_2 -> <empty>','n_math_expression_2',0,'p_n_math_expression_2','scanner.py',345),
  ('n_math_expression_3 -> <empty>','n_math_expression_3',0,'p_n_math_expression_3','scanner.py',350),
  ('n_math_expression_4 -> <empty>','n_math_expression_4',0,'p_n_math_expression_4','scanner.py',355),
  ('n_math_expression_5 -> <empty>','n_math_expression_5',0,'p_n_math_expression_5','scanner.py',362),
  ('n_math_expression_6 -> <empty>','n_math_expression_6',0,'p_n_math_expression_6','scanner.py',369),
  ('n_math_expression_7 -> <empty>','n_math_expression_7',0,'p_n_math_expression_7','scanner.py',374),
  ('n_math_expression_8 -> <empty>','n_math_expression_8',0,'p_n_math_expression_8','scanner.py',379),
  ('n_math_expression_9 -> <empty>','n_math_expression_9',0,'p_n_math_expression_9','scanner.py',384),
  ('n_math_expression_10 -> <empty>','n_math_expression_10',0,'p_n_math_expression_10','scanner.py',400),
  ('n_math_expression_11 -> <empty>','n_math_expression_11',0,'p_n_math_expression_11','scanner.py',406),
  ('n_math_expression_12 -> <empty>','n_math_expression_12',0,'p_n_math_expression_12','scanner.py',414),
  ('n_two_way_conditional_1 -> <empty>','n_two_way_conditional_1',0,'p_n_two_way_conditional_1','scanner.py',451),
  ('n_two_way_conditional_2 -> <empty>','n_two_way_conditional_2',0,'p_n_two_way_conditional_2','scanner.py',468),
  ('n_two_way_conditional_3 -> <empty>','n_two_way_conditional_3',0,'p_n_two_way_conditional_3','scanner.py',478),
  ('p_n_pre_condition_loop_1 -> <empty>','p_n_pre_condition_loop_1',0,'p_n_pre_condition_loop_1','scanner.py',496),
  ('p_n_pre_condition_loop_2 -> <empty>','p_n_pre_condition_loop_2',0,'p_n_pre_condition_loop_2','scanner.py',502),
  ('p_n_pre_condition_loop_3 -> <empty>','p_n_pre_condition_loop_3',0,'p_n_pre_condition_loop_3','scanner.py',520),
  ('n_seen_equal_op -> <empty>','n_seen_equal_op',0,'p_n_seen_equal_op','scanner.py',538),
  ('n_before_function_definition -> <empty>','n_before_function_definition',0,'p_n_before_function_definition','scanner.py',567),
  ('n_function_block_start -> <empty>','n_function_block_start',0,'p_n_function_block_start','scanner.py',576),
  ('n_function_block_end -> <empty>','n_function_block_end',0,'p_n_function_block_end','scanner.py',581),
  ('n_function_type -> <empty>','n_function_type',0,'p_n_function_type','scanner.py',595),
  ('n_function_call_1 -> <empty>','n_function_call_1',0,'p_n_function_call_1','scanner.py',603),
  ('n_function_call_2 -> <empty>','n_function_call_2',0,'p_n_function_call_2','scanner.py',627),
  ('n_function_call_3 -> <empty>','n_function_call_3',0,'p_n_function_call_3','scanner.py',634),
  ('n_function_call_4 -> <empty>','n_function_call_4',0,'p_n_function_call_4','scanner.py',666),
  ('n_function_call_5 -> <empty>','n_function_call_5',0,'p_n_function_call_5','scanner.py',672),
  ('n_function_call_6 -> <empty>','n_function_call_6',0,'p_n_function_call_6','scanner.py',693),
  ('n_return -> <empty>','n_return',0,'p_n_return','scanner.py',734),
  ('n_return_void -> <empty>','n_return_void',0,'p_n_return_void','scanner.py',776),
  ('n_print -> <empty>','n_print',0,'p_n_print','scanner.py',783),
  ('n_input_string -> <empty>','n_input_string',0,'p_n_input_string','scanner.py',795),
  ('n_input_int -> <empty>','n_input_int',0,'p_n_input_int','scanner.py',800),
  ('n_input_float -> <empty>','n_input_float',0,'p_n_input_float','scanner.py',805),
  ('n_arr_reference -> <empty>','n_arr_reference',0,'p_n_arr_reference','scanner.py',826),
  ('n_matrix_reference -> <empty>','n_matrix_reference',0,'p_n_matrix_reference','scanner.py',876),
  ('n_arr_instantiate_name -> <empty>','n_arr_instantiate_name',0,'p_n_arr_instantiate_name','scanner.py',954),
  ('n_arr_reference_name -> <empty>','n_arr_reference_name',0,'p_n_arr_reference_name','scanner.py',967),
  ('n_arr_instantiate_size -> <empty>','n_arr_instantiate_size',0,'p_n_arr_instantiate_size','scanner.py',975),
  ('n_arr_instantiate -> <empty>','n_arr_instantiate',0,'p_n_arr_instantiate','scanner.py',1002),
  ('n_matrix_instantiate -> <empty>','n_matrix_instantiate',0,'p_n_matrix_instantiate','scanner.py',1013),
  ('n_end -> <empty>','n_end',0,'p_n_end','scanner.py',1027),
  ('empty -> <empty>','empty',0,'p_empty','scanner.py',1050),
  ('program -> program_aux codeblock n_end','program',3,'p_program','scanner.py',1056),
  ('program_aux -> IDK','program_aux',1,'p_program_aux','scanner.py',1062),
  ('program_aux -> OWO','program_aux',1,'p_program_aux','scanner.py',1063),
  ('type -> INT_TYPE n_seen_type','type',2,'p_type','scanner.py',1069),
  ('type -> STRING_TYPE n_seen_type','type',2,'p_type','scanner.py',1070),
  ('type -> DOUBLE_TYPE n_seen_type','type',2,'p_type','scanner.py',1071),
  ('type -> FLOAT_TYPE n_seen_type','type',2,'p_type','scanner.py',1072),
  ('type -> BOOL_TYPE n_seen_type','type',2,'p_type','scanner.py',1073),
  ('relational_operator -> GREATERTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','scanner.py',1079),
  ('relational_operator -> LESSTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','scanner.py',1080),
  ('relational_operator -> EQUALEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','scanner.py',1081),
  ('relational_operator -> LESSTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','scanner.py',1082),
  ('relational_operator -> GREATERTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','scanner.py',1083),
  ('relational_operator -> NOTEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','scanner.py',1084),
  ('literal -> FLOAT n_math_expression_1_float','literal',2,'p_literal','scanner.py',1090),
  ('literal -> INT n_math_expression_1_int','literal',2,'p_literal','scanner.py',1091),
  ('literal -> STRING n_math_expression_1_string','literal',2,'p_literal','scanner.py',1092),
  ('literal -> TRUE n_math_expression_1_bool','literal',2,'p_literal','scanner.py',1093),
  ('literal -> FALSE n_math_expression_1_bool','literal',2,'p_literal','scanner.py',1094),
  ('function_type -> VOID n_function_type','function_type',2,'p_function_type','scanner.py',1100),
  ('function_type -> INT_TYPE n_function_type','function_type',2,'p_function_type','scanner.py',1101),
  ('function_type -> STRING_TYPE n_function_type','function_type',2,'p_function_type','scanner.py',1102),
  ('function_type -> DOUBLE_TYPE n_function_type','function_type',2,'p_function_type','scanner.py',1103),
  ('function_type -> FLOAT_TYPE n_function_type','function_type',2,'p_function_type','scanner.py',1104),
  ('function_type -> BOOL_TYPE n_function_type','function_type',2,'p_function_type','scanner.py',1105),
  ('function_definition -> n_before_function_definition FUNCTION NAME n_open_new_scope_function parameter_list DOUBLEDOT function_type LCURLY n_function_block_start codeblock RCURLY n_close_scope n_function_block_end','function_definition',13,'p_function_definition','scanner.py',1111),
  ('return -> RETURN expression n_return SEMICOLON','return',4,'p_return','scanner.py',1117),
  ('return -> RETURN n_return_void SEMICOLON','return',3,'p_return','scanner.py',1118),
  ('function_call -> NAME n_function_call_1 LPARENTHESIS n_function_call_2 arg_list RPARENTHESIS n_function_call_5 n_function_call_6','function_call',8,'p_function_call','scanner.py',1124),
  ('function_call -> NAME n_function_call_1 LPARENTHESIS RPARENTHESIS n_function_call_6','function_call',5,'p_function_call','scanner.py',1125),
  ('arg_list -> arg','arg_list',1,'p_arg_list','scanner.py',1135),
  ('arg_list -> arg COMMA n_function_call_4 arg_list','arg_list',4,'p_arg_list','scanner.py',1136),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','scanner.py',1142),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','scanner.py',1143),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','scanner.py',1144),
  ('arg -> expression n_function_call_3','arg',2,'p_arg','scanner.py',1150),
  ('parameter -> type NAME n_variable_instantiate_param','parameter',3,'p_parameter','scanner.py',1156),
  ('expression -> expression_or','expression',1,'p_expression','scanner.py',1162),
  ('expression -> expression_or AND n_math_expression_10 expression n_math_expression_11','expression',5,'p_expression','scanner.py',1163),
  ('expression_or -> expression_rel','expression_or',1,'p_expression_or','scanner.py',1169),
  ('expression_or -> expression_rel OR n_math_expression_10 expression_or n_math_expression_12','expression_or',5,'p_expression_or','scanner.py',1170),
  ('expression_rel -> exp','expression_rel',1,'p_expression_rel','scanner.py',1176),
  ('expression_rel -> exp relational_operator exp n_math_expression_9','expression_rel',4,'p_expression_rel','scanner.py',1177),
  ('exp -> termino n_math_expression_4','exp',2,'p_exp','scanner.py',1183),
  ('exp -> termino n_math_expression_4 PLUS n_math_expression_2 exp','exp',5,'p_exp','scanner.py',1184),
  ('exp -> termino n_math_expression_4 MINUS n_math_expression_2 exp','exp',5,'p_exp','scanner.py',1185),
  ('termino -> factor n_math_expression_5','termino',2,'p_termino','scanner.py',1191),
  ('termino -> factor n_math_expression_5 TIMES n_math_expression_3 termino','termino',5,'p_termino','scanner.py',1192),
  ('termino -> factor n_math_expression_5 DIVIDE n_math_expression_3 termino','termino',5,'p_termino','scanner.py',1193),
  ('termino -> factor n_math_expression_5 MODULUS n_math_expression_3 termino','termino',5,'p_termino','scanner.py',1194),
  ('factor -> LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7','factor',5,'p_factor','scanner.py',1200),
  ('factor -> PLUS value','factor',2,'p_factor','scanner.py',1201),
  ('factor -> MINUS value','factor',2,'p_factor','scanner.py',1202),
  ('factor -> value','factor',1,'p_factor','scanner.py',1203),
  ('input -> INPUTSTRING LPARENTHESIS RPARENTHESIS n_input_string','input',4,'p_input','scanner.py',1209),
  ('input -> INPUTINT LPARENTHESIS RPARENTHESIS n_input_int','input',4,'p_input','scanner.py',1210),
  ('input -> INPUTFLOAT LPARENTHESIS RPARENTHESIS n_input_float','input',4,'p_input','scanner.py',1211),
  ('value -> function_call','value',1,'p_value','scanner.py',1217),
  ('value -> literal','value',1,'p_value','scanner.py',1218),
  ('value -> reference','value',1,'p_value','scanner.py',1219),
  ('value -> input','value',1,'p_value','scanner.py',1220),
  ('reference -> NAME n_variable_reference n_math_expression_1_name','reference',3,'p_reference','scanner.py',1227),
  ('reference -> arr_reference','reference',1,'p_reference','scanner.py',1228),
  ('arr_reference -> <empty>','arr_reference',0,'p_arr_reference','scanner.py',1235),
  ('arr_reference -> NAME n_arr_reference_name LBRACKET expression RBRACKET n_arr_reference','arr_reference',6,'p_arr_reference','scanner.py',1236),
  ('arr_reference -> NAME n_arr_reference_name LBRACKET expression RBRACKET LBRACKET expression RBRACKET n_matrix_reference','arr_reference',9,'p_arr_reference','scanner.py',1237),
  ('declare -> type NAME n_variable_instantiate','declare',3,'p_declare','scanner.py',1244),
  ('declare -> type NAME n_arr_instantiate_name LBRACKET INT n_arr_instantiate_size RBRACKET n_arr_instantiate','declare',8,'p_declare','scanner.py',1245),
  ('declare -> type NAME n_arr_instantiate_name LBRACKET INT n_arr_instantiate_size RBRACKET LBRACKET INT n_arr_instantiate_size RBRACKET n_matrix_instantiate','declare',12,'p_declare','scanner.py',1246),
  ('assign -> type NAME n_variable_instantiate n_math_expression_1_name EQUAL n_seen_equal_op expression','assign',7,'p_assign','scanner.py',1253),
  ('assign -> reference EQUAL n_seen_equal_op expression','assign',4,'p_assign','scanner.py',1254),
  ('print -> PRINT LPARENTHESIS expression n_print RPARENTHESIS','print',5,'p_print','scanner.py',1263),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','scanner.py',1269),
  ('statement_aux -> assign','statement_aux',1,'p_statement_aux','scanner.py',1275),
  ('statement_aux -> declare','statement_aux',1,'p_statement_aux','scanner.py',1276),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','scanner.py',1277),
  ('statement_aux -> print','statement_aux',1,'p_statement_aux','scanner.py',1278),
  ('codeblock -> empty','codeblock',1,'p_codeblock','scanner.py',1285),
  ('codeblock -> codeblock_aux codeblock','codeblock',2,'p_codeblock','scanner.py',1286),
  ('codeblock_aux -> statement','codeblock_aux',1,'p_codeblock_aux','scanner.py',1292),
  ('codeblock_aux -> function_definition','codeblock_aux',1,'p_codeblock_aux','scanner.py',1293),
  ('codeblock_aux -> condition_if','codeblock_aux',1,'p_codeblock_aux','scanner.py',1294),
  ('codeblock_aux -> loop','codeblock_aux',1,'p_codeblock_aux','scanner.py',1295),
  ('codeblock_aux -> return','codeblock_aux',1,'p_codeblock_aux','scanner.py',1296),
  ('loop -> whileloop','loop',1,'p_loop','scanner.py',1302),
  ('whileloop -> WHILE p_n_pre_condition_loop_1 LPARENTHESIS expression RPARENTHESIS p_n_pre_condition_loop_2 LCURLY n_open_new_scope codeblock RCURLY p_n_pre_condition_loop_3 n_close_scope','whileloop',12,'p_whileloop','scanner.py',1308),
  ('condition_if -> IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2','condition_if',12,'p_condition_if','scanner.py',1321),
  ('condition_else -> ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope','condition_else',7,'p_condition_else','scanner.py',1327),
  ('condition_else -> empty','condition_else',1,'p_condition_else','scanner.py',1328),
]
