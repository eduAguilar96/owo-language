
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND BOOL_TYPE COMMA DIVIDE DOT DOUBLEDOT DOUBLE_TYPE ELSE EQUAL EQUALEQUAL FLOAT FLOAT_TYPE FOR FUNCTION GREATERTHAN GREATERTHANOREQUAL IDK IF INT INT_TYPE LBRACKET LCURLY LESSTHAN LESSTHANOREQUAL LPARENTHESIS MINUS MODULUS NAME NOT NOTEQUAL OR OWO PLUS RBRACKET RCURLY RPARENTHESIS SEMICOLON STRING STRING_TYPE TIMES VOID WHILEn_seen_type : n_open_new_scope : n_close_scope : n_name : n_math_expression_1 : n_math_expression_2 : n_math_expression_3 : n_math_expression_4 : n_math_expression_5 : n_math_expression_6 : n_math_expression_7 : n_math_expression_8 : n_math_expression_9 : \n    empty :\n    \n    program : program_aux codeblock\n    \n    program_aux : IDK\n    | OWO\n    \n    type : INT_TYPE n_seen_type\n    | STRING_TYPE n_seen_type\n    | DOUBLE_TYPE n_seen_type\n    | FLOAT_TYPE n_seen_type\n    | BOOL_TYPE n_seen_type\n    \n    relational_operator : GREATERTHAN n_math_expression_8\n    | LESSTHAN n_math_expression_8\n    | EQUALEQUAL n_math_expression_8\n    | LESSTHANOREQUAL n_math_expression_8\n    | GREATERTHANOREQUAL n_math_expression_8\n    | NOTEQUAL n_math_expression_8\n    \n    logical_operator : AND\n    | OR\n    | NOT\n    \n    arithmetic_operator : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | MODULUS\n    \n    literal : FLOAT n_math_expression_1\n    | INT n_math_expression_1\n    | STRING n_math_expression_1\n    \n    function_type : type\n    | VOID\n    \n    function_definition : FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope\n    \n    function_call : NAME LPARENTHESIS parameter_list RPARENTHESIS\n    \n    parameter_list : empty\n    | parameter\n    | parameter COMMA parameter_list\n    \n    parameter : type NAME n_name\n    | assign\n    \n    expression : expression_or\n    | expression_or AND expression\n    \n    expression_or : expression_rel\n    | expression_rel OR expression_or\n    \n    expression_rel : exp\n    | exp relational_operator exp n_math_expression_9\n    \n    exp : termino n_math_expression_4\n    | termino n_math_expression_4 PLUS n_math_expression_2 exp\n    | termino n_math_expression_4 MINUS n_math_expression_2 exp\n    \n    termino : factor n_math_expression_5\n    | factor n_math_expression_5 TIMES n_math_expression_3 termino\n    | factor n_math_expression_5 DIVIDE n_math_expression_3 termino\n    \n    factor : LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7\n    | PLUS value\n    | MINUS value\n    | value\n    \n    value : function_call\n    | literal\n    | NAME n_math_expression_1\n    \n    assign : type NAME n_name EQUAL expression\n    | NAME n_name EQUAL expression\n    \n    statement : statement_aux SEMICOLON\n    \n    statement_aux : assign\n    | function_call\n    \n    codeblock : empty\n    | codeblock_aux codeblock\n    \n    codeblock_aux : statement\n    | function_definition\n    | condition_if\n    | loop\n    \n    loop : forloop\n    | whileloop\n    \n    whileloop : WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    \n    forloop : FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope\n    \n    condition_if : IF LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope condition_else\n    \n    condition_else : ELSE LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    | empty\n    '
    
_lr_action_items = {'IDK':([0,],[3,]),'OWO':([0,],[4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,16,17,28,29,139,141,142,143,145,146,147,149,154,156,157,158,],[0,-14,-16,-17,-15,-73,-14,-75,-76,-77,-78,-79,-80,-74,-70,-3,-3,-3,-14,-81,-42,-83,-85,-3,-82,-3,-84,]),'FUNCTION':([2,3,4,7,8,9,10,11,16,17,29,100,115,121,128,129,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[13,-16,-17,13,-75,-76,-77,-78,-79,-80,-70,-2,-2,13,13,13,-3,-3,-3,-14,-81,-42,-83,-85,13,-2,13,-3,-82,-3,-84,]),'IF':([2,3,4,7,8,9,10,11,16,17,29,100,115,121,128,129,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[15,-16,-17,15,-75,-76,-77,-78,-79,-80,-70,-2,-2,15,15,15,-3,-3,-3,-14,-81,-42,-83,-85,15,-2,15,-3,-82,-3,-84,]),'FOR':([2,3,4,7,8,9,10,11,16,17,29,100,115,121,128,129,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[20,-16,-17,20,-75,-76,-77,-78,-79,-80,-70,-2,-2,20,20,20,-3,-3,-3,-14,-81,-42,-83,-85,20,-2,20,-3,-82,-3,-84,]),'WHILE':([2,3,4,7,8,9,10,11,16,17,29,100,115,121,128,129,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[21,-16,-17,21,-75,-76,-77,-78,-79,-80,-70,-2,-2,21,21,21,-3,-3,-3,-14,-81,-42,-83,-85,21,-2,21,-3,-82,-3,-84,]),'NAME':([2,3,4,7,8,9,10,11,13,16,17,22,23,24,25,26,27,29,30,32,33,34,35,37,38,39,40,41,42,43,48,50,56,57,66,72,74,76,77,78,79,80,81,82,83,84,95,100,104,105,106,107,108,109,110,111,112,113,114,115,121,123,124,125,126,128,129,136,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[14,-16,-17,14,-75,-76,-77,-78,30,-79,-80,36,-1,-1,-1,-1,-1,-70,-2,44,62,-2,62,-18,-19,-20,-21,-22,44,62,73,-10,62,62,44,44,62,62,62,62,-12,-12,-12,-12,-12,-12,62,-2,-23,-24,-25,-26,-27,-28,-6,-6,-7,-7,62,-2,14,62,62,62,62,14,14,44,-3,-3,-3,-14,-81,-42,-83,-85,14,-2,14,-3,-82,-3,-84,]),'INT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,115,121,128,129,136,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[23,-16,-17,23,-75,-76,-77,-78,-79,-80,-70,-2,23,-2,23,23,23,23,-2,-2,23,23,23,23,-3,-3,-3,-14,-81,-42,-83,-85,23,-2,23,-3,-82,-3,-84,]),'STRING_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,115,121,128,129,136,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[24,-16,-17,24,-75,-76,-77,-78,-79,-80,-70,-2,24,-2,24,24,24,24,-2,-2,24,24,24,24,-3,-3,-3,-14,-81,-42,-83,-85,24,-2,24,-3,-82,-3,-84,]),'DOUBLE_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,115,121,128,129,136,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[25,-16,-17,25,-75,-76,-77,-78,-79,-80,-70,-2,25,-2,25,25,25,25,-2,-2,25,25,25,25,-3,-3,-3,-14,-81,-42,-83,-85,25,-2,25,-3,-82,-3,-84,]),'FLOAT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,115,121,128,129,136,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[26,-16,-17,26,-75,-76,-77,-78,-79,-80,-70,-2,26,-2,26,26,26,26,-2,-2,26,26,26,26,-3,-3,-3,-14,-81,-42,-83,-85,26,-2,26,-3,-82,-3,-84,]),'BOOL_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,115,121,128,129,136,139,141,142,143,145,146,147,149,150,151,153,154,156,157,158,],[27,-16,-17,27,-75,-76,-77,-78,-79,-80,-70,-2,27,-2,27,27,27,27,-2,-2,27,27,27,27,-3,-3,-3,-14,-81,-42,-83,-85,27,-2,27,-3,-82,-3,-84,]),'RCURLY':([6,7,8,9,10,11,16,17,28,29,100,115,121,128,129,131,137,138,139,141,142,143,145,146,147,149,150,151,152,153,154,155,156,157,158,],[-73,-14,-75,-76,-77,-78,-79,-80,-74,-70,-2,-2,-14,-14,-14,139,141,142,-3,-3,-3,-14,-81,-42,-83,-85,-14,-2,154,-14,-3,157,-82,-3,-84,]),'SEMICOLON':([12,18,19,52,53,54,55,58,59,60,61,62,63,64,65,70,71,85,86,87,88,89,90,91,92,101,102,103,116,120,122,130,132,133,134,135,],[29,-71,-72,-49,-51,-53,-8,-9,-64,-65,-66,-5,-5,-5,-5,-69,-43,-55,-62,-63,-58,-67,-37,-38,-39,-50,-52,-13,-68,-11,-54,-61,-56,-57,-59,-60,]),'LPARENTHESIS':([14,15,20,21,33,35,43,50,62,74,76,77,78,79,80,81,82,83,84,95,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,],[32,33,34,35,50,50,50,-10,32,50,50,50,50,-12,-12,-12,-12,-12,-12,50,-23,-24,-25,-26,-27,-28,-6,-6,-7,-7,50,50,50,50,50,]),'EQUAL':([14,31,36,44,68,73,98,],[-4,43,-4,-4,95,-4,95,]),'LCURLY':([23,24,25,26,27,37,38,39,40,41,75,94,117,118,119,144,148,],[-1,-1,-1,-1,-1,-18,-19,-20,-21,-22,100,115,129,-40,-41,150,151,]),'DOUBLEDOT':([30,42,46,47,49,52,53,54,55,58,59,60,61,62,63,64,65,69,70,71,72,73,85,86,87,88,89,90,91,92,93,97,98,101,102,103,116,120,122,127,130,132,133,134,135,],[-2,-14,-44,-45,-48,-49,-51,-53,-8,-9,-64,-65,-66,-5,-5,-5,-5,96,-69,-43,-14,-4,-55,-62,-63,-58,-67,-37,-38,-39,114,-46,-47,-50,-52,-13,-68,-11,-54,136,-61,-56,-57,-59,-60,]),'RPARENTHESIS':([32,45,46,47,49,51,52,53,54,55,58,59,60,61,62,63,64,65,67,70,71,72,73,85,86,87,88,89,90,91,92,97,98,99,101,102,103,116,120,122,130,132,133,134,135,140,],[-14,71,-44,-45,-48,75,-49,-51,-53,-8,-9,-64,-65,-66,-5,-5,-5,-5,94,-69,-43,-14,-4,-55,-62,-63,-58,-67,-37,-38,-39,-46,-47,120,-50,-52,-13,-68,-11,-54,-61,-56,-57,-59,-60,144,]),'PLUS':([33,35,43,50,55,58,59,60,61,62,63,64,65,71,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,104,105,106,107,108,109,110,111,112,113,114,120,123,124,125,126,130,134,135,],[56,56,56,-10,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,56,56,56,56,-12,-12,-12,-12,-12,-12,110,-62,-63,-58,-67,-37,-38,-39,56,-23,-24,-25,-26,-27,-28,-6,-6,-7,-7,56,-11,56,56,56,56,-61,-59,-60,]),'MINUS':([33,35,43,50,55,58,59,60,61,62,63,64,65,71,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,104,105,106,107,108,109,110,111,112,113,114,120,123,124,125,126,130,134,135,],[57,57,57,-10,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,57,57,57,57,-12,-12,-12,-12,-12,-12,111,-62,-63,-58,-67,-37,-38,-39,57,-23,-24,-25,-26,-27,-28,-6,-6,-7,-7,57,-11,57,57,57,57,-61,-59,-60,]),'FLOAT':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,],[63,63,63,-10,63,63,63,63,63,63,-12,-12,-12,-12,-12,-12,63,-23,-24,-25,-26,-27,-28,-6,-6,-7,-7,63,63,63,63,63,]),'INT':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,],[64,64,64,-10,64,64,64,64,64,64,-12,-12,-12,-12,-12,-12,64,-23,-24,-25,-26,-27,-28,-6,-6,-7,-7,64,64,64,64,64,]),'STRING':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,],[65,65,65,-10,65,65,65,65,65,65,-12,-12,-12,-12,-12,-12,65,-23,-24,-25,-26,-27,-28,-6,-6,-7,-7,65,65,65,65,65,]),'COMMA':([47,49,52,53,54,55,58,59,60,61,62,63,64,65,70,71,73,85,86,87,88,89,90,91,92,98,101,102,103,116,120,122,130,132,133,134,135,],[72,-48,-49,-51,-53,-8,-9,-64,-65,-66,-5,-5,-5,-5,-69,-43,-4,-55,-62,-63,-58,-67,-37,-38,-39,-47,-50,-52,-13,-68,-11,-54,-61,-56,-57,-59,-60,]),'AND':([52,53,54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,102,103,120,122,130,132,133,134,135,],[76,-51,-53,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-52,-13,-11,-54,-61,-56,-57,-59,-60,]),'OR':([53,54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,103,120,122,130,132,133,134,135,],[77,-53,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-13,-11,-54,-61,-56,-57,-59,-60,]),'GREATERTHAN':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,120,130,132,133,134,135,],[79,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-11,-61,-56,-57,-59,-60,]),'LESSTHAN':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,120,130,132,133,134,135,],[80,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-11,-61,-56,-57,-59,-60,]),'EQUALEQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,120,130,132,133,134,135,],[81,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-11,-61,-56,-57,-59,-60,]),'LESSTHANOREQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,120,130,132,133,134,135,],[82,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-11,-61,-56,-57,-59,-60,]),'GREATERTHANOREQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,120,130,132,133,134,135,],[83,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-11,-61,-56,-57,-59,-60,]),'NOTEQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,120,130,132,133,134,135,],[84,-8,-9,-64,-65,-66,-5,-5,-5,-5,-43,-55,-62,-63,-58,-67,-37,-38,-39,-11,-61,-56,-57,-59,-60,]),'TIMES':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,120,130,],[-9,-64,-65,-66,-5,-5,-5,-5,-43,-62,-63,112,-67,-37,-38,-39,-11,-61,]),'DIVIDE':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,120,130,],[-9,-64,-65,-66,-5,-5,-5,-5,-43,-62,-63,113,-67,-37,-38,-39,-11,-61,]),'VOID':([96,],[119,]),'ELSE':([139,143,],[-3,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'codeblock':([2,7,121,128,129,150,153,],[5,28,131,137,138,152,155,]),'empty':([2,7,32,42,72,121,128,129,143,150,153,],[6,6,46,46,46,6,6,6,149,6,6,]),'codeblock_aux':([2,7,121,128,129,150,153,],[7,7,7,7,7,7,7,]),'statement':([2,7,121,128,129,150,153,],[8,8,8,8,8,8,8,]),'function_definition':([2,7,121,128,129,150,153,],[9,9,9,9,9,9,9,]),'condition_if':([2,7,121,128,129,150,153,],[10,10,10,10,10,10,10,]),'loop':([2,7,121,128,129,150,153,],[11,11,11,11,11,11,11,]),'statement_aux':([2,7,121,128,129,150,153,],[12,12,12,12,12,12,12,]),'forloop':([2,7,121,128,129,150,153,],[16,16,16,16,16,16,16,]),'whileloop':([2,7,121,128,129,150,153,],[17,17,17,17,17,17,17,]),'assign':([2,7,32,42,66,72,121,128,129,136,150,153,],[18,18,49,49,93,49,18,18,18,140,18,18,]),'function_call':([2,7,33,35,43,56,57,74,76,77,78,95,114,121,123,124,125,126,128,129,150,153,],[19,19,60,60,60,60,60,60,60,60,60,60,60,19,60,60,60,60,19,19,19,19,]),'type':([2,7,32,42,66,72,96,121,128,129,136,150,153,],[22,22,48,48,22,48,118,22,22,22,22,22,22,]),'n_name':([14,36,44,73,],[31,68,31,98,]),'n_seen_type':([23,24,25,26,27,],[37,38,39,40,41,]),'n_open_new_scope':([30,34,100,115,151,],[42,66,121,128,153,]),'parameter_list':([32,42,72,],[45,69,97,]),'parameter':([32,42,72,],[47,47,47,]),'expression':([33,35,43,74,76,95,114,],[51,67,70,99,101,116,127,]),'expression_or':([33,35,43,74,76,77,95,114,],[52,52,52,52,52,102,52,52,]),'expression_rel':([33,35,43,74,76,77,95,114,],[53,53,53,53,53,53,53,53,]),'exp':([33,35,43,74,76,77,78,95,114,123,124,],[54,54,54,54,54,54,103,54,54,132,133,]),'termino':([33,35,43,74,76,77,78,95,114,123,124,125,126,],[55,55,55,55,55,55,55,55,55,55,55,134,135,]),'factor':([33,35,43,74,76,77,78,95,114,123,124,125,126,],[58,58,58,58,58,58,58,58,58,58,58,58,58,]),'value':([33,35,43,56,57,74,76,77,78,95,114,123,124,125,126,],[59,59,59,86,87,59,59,59,59,59,59,59,59,59,59,]),'literal':([33,35,43,56,57,74,76,77,78,95,114,123,124,125,126,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'n_math_expression_6':([50,],[74,]),'relational_operator':([54,],[78,]),'n_math_expression_4':([55,],[85,]),'n_math_expression_5':([58,],[88,]),'n_math_expression_1':([62,63,64,65,],[89,90,91,92,]),'n_math_expression_8':([79,80,81,82,83,84,],[104,105,106,107,108,109,]),'function_type':([96,],[117,]),'n_math_expression_9':([103,],[122,]),'n_math_expression_2':([110,111,],[123,124,]),'n_math_expression_3':([112,113,],[125,126,]),'n_math_expression_7':([120,],[130,]),'n_close_scope':([139,141,142,154,157,],[143,145,146,156,158,]),'condition_else':([143,],[147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','lang.py',112),
  ('n_open_new_scope -> <empty>','n_open_new_scope',0,'p_n_open_new_scope','lang.py',119),
  ('n_close_scope -> <empty>','n_close_scope',0,'p_n_close_scope','lang.py',128),
  ('n_name -> <empty>','n_name',0,'p_n_name','lang.py',135),
  ('n_math_expression_1 -> <empty>','n_math_expression_1',0,'p_n_math_expression_1','lang.py',140),
  ('n_math_expression_2 -> <empty>','n_math_expression_2',0,'p_n_math_expression_2','lang.py',145),
  ('n_math_expression_3 -> <empty>','n_math_expression_3',0,'p_n_math_expression_3','lang.py',150),
  ('n_math_expression_4 -> <empty>','n_math_expression_4',0,'p_n_math_expression_4','lang.py',155),
  ('n_math_expression_5 -> <empty>','n_math_expression_5',0,'p_n_math_expression_5','lang.py',160),
  ('n_math_expression_6 -> <empty>','n_math_expression_6',0,'p_n_math_expression_6','lang.py',165),
  ('n_math_expression_7 -> <empty>','n_math_expression_7',0,'p_n_math_expression_7','lang.py',170),
  ('n_math_expression_8 -> <empty>','n_math_expression_8',0,'p_n_math_expression_8','lang.py',175),
  ('n_math_expression_9 -> <empty>','n_math_expression_9',0,'p_n_math_expression_9','lang.py',180),
  ('empty -> <empty>','empty',0,'p_empty','lang.py',193),
  ('program -> program_aux codeblock','program',2,'p_program','lang.py',199),
  ('program_aux -> IDK','program_aux',1,'p_program_aux','lang.py',205),
  ('program_aux -> OWO','program_aux',1,'p_program_aux','lang.py',206),
  ('type -> INT_TYPE n_seen_type','type',2,'p_type','lang.py',212),
  ('type -> STRING_TYPE n_seen_type','type',2,'p_type','lang.py',213),
  ('type -> DOUBLE_TYPE n_seen_type','type',2,'p_type','lang.py',214),
  ('type -> FLOAT_TYPE n_seen_type','type',2,'p_type','lang.py',215),
  ('type -> BOOL_TYPE n_seen_type','type',2,'p_type','lang.py',216),
  ('relational_operator -> GREATERTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',222),
  ('relational_operator -> LESSTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',223),
  ('relational_operator -> EQUALEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',224),
  ('relational_operator -> LESSTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',225),
  ('relational_operator -> GREATERTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',226),
  ('relational_operator -> NOTEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',227),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','lang.py',234),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','lang.py',235),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','lang.py',236),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','lang.py',242),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','lang.py',243),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','lang.py',244),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','lang.py',245),
  ('arithmetic_operator -> MODULUS','arithmetic_operator',1,'p_arithmetic_operator','lang.py',246),
  ('literal -> FLOAT n_math_expression_1','literal',2,'p_literal','lang.py',252),
  ('literal -> INT n_math_expression_1','literal',2,'p_literal','lang.py',253),
  ('literal -> STRING n_math_expression_1','literal',2,'p_literal','lang.py',254),
  ('function_type -> type','function_type',1,'p_function_type','lang.py',260),
  ('function_type -> VOID','function_type',1,'p_function_type','lang.py',261),
  ('function_definition -> FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope','function_definition',10,'p_function_definition','lang.py',267),
  ('function_call -> NAME LPARENTHESIS parameter_list RPARENTHESIS','function_call',4,'p_function_call','lang.py',273),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','lang.py',279),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lang.py',280),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lang.py',281),
  ('parameter -> type NAME n_name','parameter',3,'p_parameter','lang.py',287),
  ('parameter -> assign','parameter',1,'p_parameter','lang.py',288),
  ('expression -> expression_or','expression',1,'p_expression','lang.py',296),
  ('expression -> expression_or AND expression','expression',3,'p_expression','lang.py',297),
  ('expression_or -> expression_rel','expression_or',1,'p_expression_or','lang.py',305),
  ('expression_or -> expression_rel OR expression_or','expression_or',3,'p_expression_or','lang.py',306),
  ('expression_rel -> exp','expression_rel',1,'p_expression_rel','lang.py',314),
  ('expression_rel -> exp relational_operator exp n_math_expression_9','expression_rel',4,'p_expression_rel','lang.py',315),
  ('exp -> termino n_math_expression_4','exp',2,'p_exp','lang.py',323),
  ('exp -> termino n_math_expression_4 PLUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',324),
  ('exp -> termino n_math_expression_4 MINUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',325),
  ('termino -> factor n_math_expression_5','termino',2,'p_termino','lang.py',331),
  ('termino -> factor n_math_expression_5 TIMES n_math_expression_3 termino','termino',5,'p_termino','lang.py',332),
  ('termino -> factor n_math_expression_5 DIVIDE n_math_expression_3 termino','termino',5,'p_termino','lang.py',333),
  ('factor -> LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7','factor',5,'p_factor','lang.py',339),
  ('factor -> PLUS value','factor',2,'p_factor','lang.py',340),
  ('factor -> MINUS value','factor',2,'p_factor','lang.py',341),
  ('factor -> value','factor',1,'p_factor','lang.py',342),
  ('value -> function_call','value',1,'p_value','lang.py',349),
  ('value -> literal','value',1,'p_value','lang.py',350),
  ('value -> NAME n_math_expression_1','value',2,'p_value','lang.py',351),
  ('assign -> type NAME n_name EQUAL expression','assign',5,'p_assign','lang.py',357),
  ('assign -> NAME n_name EQUAL expression','assign',4,'p_assign','lang.py',358),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','lang.py',364),
  ('statement_aux -> assign','statement_aux',1,'p_statement_aux','lang.py',370),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','lang.py',371),
  ('codeblock -> empty','codeblock',1,'p_codeblock','lang.py',378),
  ('codeblock -> codeblock_aux codeblock','codeblock',2,'p_codeblock','lang.py',379),
  ('codeblock_aux -> statement','codeblock_aux',1,'p_codeblock_aux','lang.py',385),
  ('codeblock_aux -> function_definition','codeblock_aux',1,'p_codeblock_aux','lang.py',386),
  ('codeblock_aux -> condition_if','codeblock_aux',1,'p_codeblock_aux','lang.py',387),
  ('codeblock_aux -> loop','codeblock_aux',1,'p_codeblock_aux','lang.py',388),
  ('loop -> forloop','loop',1,'p_loop','lang.py',394),
  ('loop -> whileloop','loop',1,'p_loop','lang.py',395),
  ('whileloop -> WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope','whileloop',9,'p_whileloop','lang.py',401),
  ('forloop -> FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope','forloop',13,'p_forloop','lang.py',407),
  ('condition_if -> IF LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope condition_else','condition_if',10,'p_condition_if','lang.py',413),
  ('condition_else -> ELSE LCURLY n_open_new_scope codeblock RCURLY n_close_scope','condition_else',6,'p_condition_else','lang.py',419),
  ('condition_else -> empty','condition_else',1,'p_condition_else','lang.py',420),
]
