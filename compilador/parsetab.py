
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND BOOL_TYPE COMMA DIVIDE DOT DOUBLEDOT DOUBLE_TYPE ELSE EQUAL EQUALEQUAL FLOAT FLOAT_TYPE FOR FUNCTION GREATERTHAN GREATERTHANOREQUAL IDK IF INT INT_TYPE LBRACKET LCURLY LESSTHAN LESSTHANOREQUAL LPARENTHESIS MINUS MODULUS NAME NOT NOTEQUAL OR OWO PLUS RBRACKET RCURLY RPARENTHESIS SEMICOLON STRING STRING_TYPE TIMES VOID WHILEn_seen_type : n_open_new_scope : n_open_new_scope_function : n_close_scope : n_variable_reference : n_variable_instantiate : n_variable_instantiate_param : n_math_expression_1_int : n_math_expression_1_float : n_math_expression_1_string : n_math_expression_1_name : n_math_expression_2 : n_math_expression_3 : n_math_expression_4 : n_math_expression_5 : n_math_expression_6 : n_math_expression_7 : n_math_expression_8 : n_math_expression_9 : n_math_expression_10 : n_math_expression_11 : n_math_expression_12 : n_two_way_conditional_1 : n_two_way_conditional_2 : n_two_way_conditional_3 : p_n_pre_condition_loop_1 : p_n_pre_condition_loop_2 : p_n_pre_condition_loop_3 : n_seen_equal_op : \n    empty :\n    \n    program : program_aux codeblock\n    \n    program_aux : IDK\n    | OWO\n    \n    type : INT_TYPE n_seen_type\n    | STRING_TYPE n_seen_type\n    | DOUBLE_TYPE n_seen_type\n    | FLOAT_TYPE n_seen_type\n    | BOOL_TYPE n_seen_type\n    \n    relational_operator : GREATERTHAN n_math_expression_8\n    | LESSTHAN n_math_expression_8\n    | EQUALEQUAL n_math_expression_8\n    | LESSTHANOREQUAL n_math_expression_8\n    | GREATERTHANOREQUAL n_math_expression_8\n    | NOTEQUAL n_math_expression_8\n    \n    literal : FLOAT n_math_expression_1_float\n    | INT n_math_expression_1_int\n    | STRING n_math_expression_1_string\n    \n    function_type : type\n    | VOID\n    n_before_function_definition : n_function_block_start : n_function_block_end : \n    function_definition : n_before_function_definition FUNCTION NAME n_open_new_scope_function parameter_list DOUBLEDOT function_type LCURLY n_function_block_start codeblock RCURLY n_close_scope n_function_block_end\n    \n    function_call : NAME LPARENTHESIS arg_list RPARENTHESIS\n    \n    arg_list : empty\n    | arg\n    | arg COMMA arg_list\n    \n    parameter_list : empty\n    | parameter\n    | parameter COMMA parameter_list\n    \n    arg : expression\n    \n    parameter : type NAME n_variable_instantiate_param\n    \n    expression : expression_or\n    | expression_or AND n_math_expression_10 expression n_math_expression_11\n    \n    expression_or : expression_rel\n    | expression_rel OR n_math_expression_10 expression_or n_math_expression_12\n    \n    expression_rel : exp\n    | exp relational_operator exp n_math_expression_9\n    \n    exp : termino n_math_expression_4\n    | termino n_math_expression_4 PLUS n_math_expression_2 exp\n    | termino n_math_expression_4 MINUS n_math_expression_2 exp\n    \n    termino : factor n_math_expression_5\n    | factor n_math_expression_5 TIMES n_math_expression_3 termino\n    | factor n_math_expression_5 DIVIDE n_math_expression_3 termino\n    | factor n_math_expression_5 MODULUS n_math_expression_3 termino\n    \n    factor : LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7\n    | PLUS value\n    | MINUS value\n    | value\n    \n    value : function_call\n    | literal\n    | NAME n_variable_reference n_math_expression_1_name\n    \n    assign : type NAME n_variable_instantiate n_math_expression_1_name EQUAL n_seen_equal_op expression\n    | NAME n_variable_reference n_math_expression_1_name EQUAL n_seen_equal_op expression\n    \n    statement : statement_aux SEMICOLON\n    \n    statement_aux : assign\n    | function_call\n    \n    codeblock : empty\n    | codeblock_aux codeblock\n    \n    codeblock_aux : statement\n    | function_definition\n    | condition_if\n    | loop\n    \n    loop : forloop\n    | whileloop\n    \n    whileloop : WHILE p_n_pre_condition_loop_1 LPARENTHESIS expression RPARENTHESIS p_n_pre_condition_loop_2 LCURLY n_open_new_scope codeblock RCURLY p_n_pre_condition_loop_3 n_close_scope\n    \n    forloop : FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope\n    \n    condition_if : IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2\n    \n    condition_else : ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    | empty\n    '
    
_lr_action_items = {'IDK':([0,],[3,]),'OWO':([0,],[4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,16,17,28,29,159,163,165,166,167,169,171,172,173,175,176,177,179,182,183,],[0,-30,-32,-33,-31,-88,-30,-90,-91,-92,-93,-94,-95,-89,-85,-4,-30,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-97,-4,-99,]),'IF':([2,3,4,7,8,9,10,11,16,17,29,116,133,150,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[15,-32,-33,15,-90,-91,-92,-93,-94,-95,-85,-23,-2,15,-2,-51,15,15,-4,-30,15,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,15,-4,-99,]),'FUNCTION':([2,3,4,7,8,9,10,11,13,16,17,29,116,133,150,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[-50,-32,-33,-50,-90,-91,-92,-93,30,-94,-95,-85,-23,-2,-50,-2,-51,-50,-50,-4,-30,-50,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,-50,-4,-99,]),'FOR':([2,3,4,7,8,9,10,11,16,17,29,116,133,150,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[20,-32,-33,20,-90,-91,-92,-93,-94,-95,-85,-23,-2,20,-2,-51,20,20,-4,-30,20,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,20,-4,-99,]),'WHILE':([2,3,4,7,8,9,10,11,16,17,29,116,133,150,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[21,-32,-33,21,-90,-91,-92,-93,-94,-95,-85,-23,-2,21,-2,-51,21,21,-4,-30,21,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,21,-4,-99,]),'NAME':([2,3,4,7,8,9,10,11,16,17,22,23,24,25,26,27,29,30,32,33,34,37,38,39,40,41,45,54,55,64,65,68,70,72,73,74,75,76,77,78,79,80,81,97,98,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,128,129,130,131,132,133,136,150,151,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[14,-32,-33,14,-90,-91,-92,-93,-94,-95,36,-1,-1,-1,-1,-1,-85,42,44,44,-2,-34,-35,-36,-37,-38,-16,44,44,91,44,-29,44,44,-20,-20,44,-18,-18,-18,-18,-18,-18,122,44,44,44,-39,-40,-41,-42,-43,-44,-12,-12,-13,-13,-13,-23,44,-29,44,44,44,44,44,-2,44,14,91,-2,-51,14,14,-4,-30,14,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,14,-4,-99,]),'INT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,34,42,64,67,116,120,121,133,150,151,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[23,-32,-33,23,-90,-91,-92,-93,-94,-95,-85,-2,-3,23,23,-23,23,23,-2,23,23,-2,-51,23,23,-4,-30,23,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,23,-4,-99,]),'STRING_TYPE':([2,3,4,7,8,9,10,11,16,17,29,34,42,64,67,116,120,121,133,150,151,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[24,-32,-33,24,-90,-91,-92,-93,-94,-95,-85,-2,-3,24,24,-23,24,24,-2,24,24,-2,-51,24,24,-4,-30,24,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,24,-4,-99,]),'DOUBLE_TYPE':([2,3,4,7,8,9,10,11,16,17,29,34,42,64,67,116,120,121,133,150,151,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[25,-32,-33,25,-90,-91,-92,-93,-94,-95,-85,-2,-3,25,25,-23,25,25,-2,25,25,-2,-51,25,25,-4,-30,25,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,25,-4,-99,]),'FLOAT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,34,42,64,67,116,120,121,133,150,151,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[26,-32,-33,26,-90,-91,-92,-93,-94,-95,-85,-2,-3,26,26,-23,26,26,-2,26,26,-2,-51,26,26,-4,-30,26,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,26,-4,-99,]),'BOOL_TYPE':([2,3,4,7,8,9,10,11,16,17,29,34,42,64,67,116,120,121,133,150,151,152,154,157,158,159,163,164,165,166,167,169,171,172,173,175,176,177,178,179,180,182,183,],[27,-32,-33,27,-90,-91,-92,-93,-94,-95,-85,-2,-3,27,27,-23,27,27,-2,27,27,-2,-51,27,27,-4,-30,27,-28,-4,-24,-100,-4,-52,-98,-4,-96,-53,-2,-97,27,-4,-99,]),'RCURLY':([6,7,8,9,10,11,16,17,28,29,116,133,150,152,154,155,157,158,159,161,162,163,164,165,166,167,169,170,171,172,173,175,176,177,178,179,180,181,182,183,],[-88,-30,-90,-91,-92,-93,-94,-95,-89,-85,-23,-2,-30,-2,-51,159,-30,-30,-4,165,166,-30,-30,-28,-4,-24,-100,175,-4,-52,-98,-4,-96,-53,-2,-97,-30,182,-4,-99,]),'SEMICOLON':([12,18,19,44,50,51,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,104,123,124,125,126,127,142,143,144,145,146,147,148,149,153,],[29,-86,-87,-5,-63,-65,-67,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-19,-84,-17,-21,-22,-68,-76,-64,-66,-70,-71,-73,-74,-75,-83,]),'LPARENTHESIS':([14,15,20,21,32,33,35,44,45,65,68,70,72,73,74,75,76,77,78,79,80,81,98,102,103,105,106,107,108,109,110,111,112,113,114,115,117,119,128,129,130,131,132,136,],[32,33,34,-26,45,45,65,32,-16,45,-29,45,45,-20,-20,45,-18,-18,-18,-18,-18,-18,45,45,45,-39,-40,-41,-42,-43,-44,-12,-12,-13,-13,-13,45,-29,45,45,45,45,45,45,]),'EQUAL':([14,31,36,43,66,91,93,],[-5,-11,-6,68,-11,-5,119,]),'LCURLY':([23,24,25,26,27,37,38,39,40,41,89,118,135,137,138,139,160,168,174,],[-1,-1,-1,-1,-1,-34,-35,-36,-37,-38,116,-27,152,154,-48,-49,164,-25,178,]),'RPARENTHESIS':([32,44,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,69,71,72,82,83,84,85,86,87,88,92,99,100,101,104,123,124,125,126,127,142,143,144,145,146,147,148,149,153,156,],[-30,-5,71,-55,-56,-61,-63,-65,-67,-14,-15,-79,-80,-81,-9,-8,-10,89,-11,-54,-30,-69,-77,-78,-72,-45,-46,-47,118,-82,124,-57,-19,-84,-17,-21,-22,-68,-76,-64,-66,-70,-71,-73,-74,-75,-83,160,]),'PLUS':([32,33,44,45,53,56,57,58,59,60,61,62,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,98,99,102,103,105,106,107,108,109,110,111,112,113,114,115,117,119,124,128,129,130,131,132,136,142,147,148,149,],[54,54,-5,-16,-14,-15,-79,-80,-81,-9,-8,-10,54,-29,-11,54,-54,54,-20,-20,54,-18,-18,-18,-18,-18,-18,111,-77,-78,-72,-45,-46,-47,54,-82,54,54,-39,-40,-41,-42,-43,-44,-12,-12,-13,-13,-13,54,-29,-17,54,54,54,54,54,54,-76,-73,-74,-75,]),'MINUS':([32,33,44,45,53,56,57,58,59,60,61,62,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,98,99,102,103,105,106,107,108,109,110,111,112,113,114,115,117,119,124,128,129,130,131,132,136,142,147,148,149,],[55,55,-5,-16,-14,-15,-79,-80,-81,-9,-8,-10,55,-29,-11,55,-54,55,-20,-20,55,-18,-18,-18,-18,-18,-18,112,-77,-78,-72,-45,-46,-47,55,-82,55,55,-39,-40,-41,-42,-43,-44,-12,-12,-13,-13,-13,55,-29,-17,55,55,55,55,55,55,-76,-73,-74,-75,]),'FLOAT':([32,33,45,54,55,65,68,70,72,73,74,75,76,77,78,79,80,81,98,102,103,105,106,107,108,109,110,111,112,113,114,115,117,119,128,129,130,131,132,136,],[60,60,-16,60,60,60,-29,60,60,-20,-20,60,-18,-18,-18,-18,-18,-18,60,60,60,-39,-40,-41,-42,-43,-44,-12,-12,-13,-13,-13,60,-29,60,60,60,60,60,60,]),'INT':([32,33,45,54,55,65,68,70,72,73,74,75,76,77,78,79,80,81,98,102,103,105,106,107,108,109,110,111,112,113,114,115,117,119,128,129,130,131,132,136,],[61,61,-16,61,61,61,-29,61,61,-20,-20,61,-18,-18,-18,-18,-18,-18,61,61,61,-39,-40,-41,-42,-43,-44,-12,-12,-13,-13,-13,61,-29,61,61,61,61,61,61,]),'STRING':([32,33,45,54,55,65,68,70,72,73,74,75,76,77,78,79,80,81,98,102,103,105,106,107,108,109,110,111,112,113,114,115,117,119,128,129,130,131,132,136,],[62,62,-16,62,62,62,-29,62,62,-20,-20,62,-18,-18,-18,-18,-18,-18,62,62,62,-39,-40,-41,-42,-43,-44,-12,-12,-13,-13,-13,62,-29,62,62,62,62,62,62,]),'DOUBLEDOT':([42,44,50,51,52,53,56,57,58,59,60,61,62,67,69,71,82,83,84,85,86,87,88,90,94,95,96,99,104,121,122,123,124,125,126,127,134,140,141,142,143,144,145,146,147,148,149,153,],[-3,-5,-63,-65,-67,-14,-15,-79,-80,-81,-9,-8,-10,-30,-11,-54,-69,-77,-78,-72,-45,-46,-47,117,120,-58,-59,-82,-19,-30,-7,-84,-17,-21,-22,-68,151,-60,-62,-76,-64,-66,-70,-71,-73,-74,-75,-83,]),'TIMES':([44,56,57,58,59,60,61,62,69,71,83,84,85,86,87,88,99,124,142,],[-5,-15,-79,-80,-81,-9,-8,-10,-11,-54,-77,-78,113,-45,-46,-47,-82,-17,-76,]),'DIVIDE':([44,56,57,58,59,60,61,62,69,71,83,84,85,86,87,88,99,124,142,],[-5,-15,-79,-80,-81,-9,-8,-10,-11,-54,-77,-78,114,-45,-46,-47,-82,-17,-76,]),'MODULUS':([44,56,57,58,59,60,61,62,69,71,83,84,85,86,87,88,99,124,142,],[-5,-15,-79,-80,-81,-9,-8,-10,-11,-54,-77,-78,115,-45,-46,-47,-82,-17,-76,]),'GREATERTHAN':([44,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,124,142,145,146,147,148,149,],[-5,76,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-17,-76,-70,-71,-73,-74,-75,]),'LESSTHAN':([44,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,124,142,145,146,147,148,149,],[-5,77,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-17,-76,-70,-71,-73,-74,-75,]),'EQUALEQUAL':([44,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,124,142,145,146,147,148,149,],[-5,78,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-17,-76,-70,-71,-73,-74,-75,]),'LESSTHANOREQUAL':([44,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,124,142,145,146,147,148,149,],[-5,79,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-17,-76,-70,-71,-73,-74,-75,]),'GREATERTHANOREQUAL':([44,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,124,142,145,146,147,148,149,],[-5,80,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-17,-76,-70,-71,-73,-74,-75,]),'NOTEQUAL':([44,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,124,142,145,146,147,148,149,],[-5,81,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-17,-76,-70,-71,-73,-74,-75,]),'OR':([44,51,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,104,124,127,142,145,146,147,148,149,],[-5,74,-67,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-19,-17,-68,-76,-70,-71,-73,-74,-75,]),'AND':([44,50,51,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,99,104,124,126,127,142,144,145,146,147,148,149,],[-5,73,-65,-67,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,-82,-19,-17,-22,-68,-76,-66,-70,-71,-73,-74,-75,]),'COMMA':([44,48,49,50,51,52,53,56,57,58,59,60,61,62,69,71,82,83,84,85,86,87,88,96,99,104,122,124,125,126,127,141,142,143,144,145,146,147,148,149,],[-5,72,-61,-63,-65,-67,-14,-15,-79,-80,-81,-9,-8,-10,-11,-54,-69,-77,-78,-72,-45,-46,-47,121,-82,-19,-7,-17,-21,-22,-68,-62,-76,-64,-66,-70,-71,-73,-74,-75,]),'VOID':([120,],[139,]),'ELSE':([159,163,],[-4,168,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'codeblock':([2,7,150,157,158,164,180,],[5,28,155,161,162,170,181,]),'empty':([2,7,32,67,72,121,150,157,158,163,164,180,],[6,6,47,95,47,95,6,6,6,169,6,6,]),'codeblock_aux':([2,7,150,157,158,164,180,],[7,7,7,7,7,7,7,]),'statement':([2,7,150,157,158,164,180,],[8,8,8,8,8,8,8,]),'function_definition':([2,7,150,157,158,164,180,],[9,9,9,9,9,9,9,]),'condition_if':([2,7,150,157,158,164,180,],[10,10,10,10,10,10,10,]),'loop':([2,7,150,157,158,164,180,],[11,11,11,11,11,11,11,]),'statement_aux':([2,7,150,157,158,164,180,],[12,12,12,12,12,12,12,]),'n_before_function_definition':([2,7,150,157,158,164,180,],[13,13,13,13,13,13,13,]),'forloop':([2,7,150,157,158,164,180,],[16,16,16,16,16,16,16,]),'whileloop':([2,7,150,157,158,164,180,],[17,17,17,17,17,17,17,]),'assign':([2,7,64,150,151,157,158,164,180,],[18,18,90,18,156,18,18,18,18,]),'function_call':([2,7,32,33,54,55,65,70,72,75,98,102,103,117,128,129,130,131,132,136,150,157,158,164,180,],[19,19,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,19,19,19,19,19,]),'type':([2,7,64,67,120,121,150,151,157,158,164,180,],[22,22,22,97,138,97,22,22,22,22,22,22,]),'n_variable_reference':([14,44,91,],[31,69,31,]),'p_n_pre_condition_loop_1':([21,],[35,]),'n_seen_type':([23,24,25,26,27,],[37,38,39,40,41,]),'n_math_expression_1_name':([31,66,69,],[43,93,99,]),'arg_list':([32,72,],[46,101,]),'arg':([32,72,],[48,48,]),'expression':([32,33,65,70,72,98,102,117,136,],[49,63,92,100,49,123,125,134,153,]),'expression_or':([32,33,65,70,72,98,102,103,117,136,],[50,50,50,50,50,50,50,126,50,50,]),'expression_rel':([32,33,65,70,72,98,102,103,117,136,],[51,51,51,51,51,51,51,51,51,51,]),'exp':([32,33,65,70,72,75,98,102,103,117,128,129,136,],[52,52,52,52,52,104,52,52,52,52,145,146,52,]),'termino':([32,33,65,70,72,75,98,102,103,117,128,129,130,131,132,136,],[53,53,53,53,53,53,53,53,53,53,53,53,147,148,149,53,]),'factor':([32,33,65,70,72,75,98,102,103,117,128,129,130,131,132,136,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'value':([32,33,54,55,65,70,72,75,98,102,103,117,128,129,130,131,132,136,],[57,57,83,84,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'literal':([32,33,54,55,65,70,72,75,98,102,103,117,128,129,130,131,132,136,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'n_open_new_scope':([34,133,152,178,],[64,150,157,180,]),'n_variable_instantiate':([36,],[66,]),'n_open_new_scope_function':([42,],[67,]),'n_math_expression_6':([45,],[70,]),'relational_operator':([52,],[75,]),'n_math_expression_4':([53,],[82,]),'n_math_expression_5':([56,],[85,]),'n_math_expression_1_float':([60,],[86,]),'n_math_expression_1_int':([61,],[87,]),'n_math_expression_1_string':([62,],[88,]),'parameter_list':([67,121,],[94,140,]),'parameter':([67,121,],[96,96,]),'n_seen_equal_op':([68,119,],[98,136,]),'n_math_expression_10':([73,74,],[102,103,]),'n_math_expression_8':([76,77,78,79,80,81,],[105,106,107,108,109,110,]),'n_math_expression_9':([104,],[127,]),'n_math_expression_2':([111,112,],[128,129,]),'n_math_expression_3':([113,114,115,],[130,131,132,]),'n_two_way_conditional_1':([116,],[133,]),'p_n_pre_condition_loop_2':([118,],[135,]),'function_type':([120,],[137,]),'n_variable_instantiate_param':([122,],[141,]),'n_math_expression_7':([124,],[142,]),'n_math_expression_11':([125,],[143,]),'n_math_expression_12':([126,],[144,]),'n_function_block_start':([154,],[158,]),'n_close_scope':([159,166,171,175,182,],[163,172,176,179,183,]),'condition_else':([163,],[167,]),'p_n_pre_condition_loop_3':([165,],[171,]),'n_two_way_conditional_2':([167,],[173,]),'n_two_way_conditional_3':([168,],[174,]),'n_function_block_end':([172,],[177,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','lang.py',128),
  ('n_open_new_scope -> <empty>','n_open_new_scope',0,'p_n_open_new_scope','lang.py',135),
  ('n_open_new_scope_function -> <empty>','n_open_new_scope_function',0,'p_n_open_new_scope_function','lang.py',144),
  ('n_close_scope -> <empty>','n_close_scope',0,'p_n_close_scope','lang.py',161),
  ('n_variable_reference -> <empty>','n_variable_reference',0,'p_n_variable_reference','lang.py',168),
  ('n_variable_instantiate -> <empty>','n_variable_instantiate',0,'p_n_variable_instantiate','lang.py',184),
  ('n_variable_instantiate_param -> <empty>','n_variable_instantiate_param',0,'p_n_variable_instantiate_param','lang.py',191),
  ('n_math_expression_1_int -> <empty>','n_math_expression_1_int',0,'p_n_math_expression_1_int','lang.py',197),
  ('n_math_expression_1_float -> <empty>','n_math_expression_1_float',0,'p_n_math_expression_1_float','lang.py',202),
  ('n_math_expression_1_string -> <empty>','n_math_expression_1_string',0,'p_n_math_expression_1_string','lang.py',207),
  ('n_math_expression_1_name -> <empty>','n_math_expression_1_name',0,'p_n_math_expression_1_name','lang.py',212),
  ('n_math_expression_2 -> <empty>','n_math_expression_2',0,'p_n_math_expression_2','lang.py',223),
  ('n_math_expression_3 -> <empty>','n_math_expression_3',0,'p_n_math_expression_3','lang.py',228),
  ('n_math_expression_4 -> <empty>','n_math_expression_4',0,'p_n_math_expression_4','lang.py',233),
  ('n_math_expression_5 -> <empty>','n_math_expression_5',0,'p_n_math_expression_5','lang.py',240),
  ('n_math_expression_6 -> <empty>','n_math_expression_6',0,'p_n_math_expression_6','lang.py',247),
  ('n_math_expression_7 -> <empty>','n_math_expression_7',0,'p_n_math_expression_7','lang.py',252),
  ('n_math_expression_8 -> <empty>','n_math_expression_8',0,'p_n_math_expression_8','lang.py',257),
  ('n_math_expression_9 -> <empty>','n_math_expression_9',0,'p_n_math_expression_9','lang.py',262),
  ('n_math_expression_10 -> <empty>','n_math_expression_10',0,'p_n_math_expression_10','lang.py',277),
  ('n_math_expression_11 -> <empty>','n_math_expression_11',0,'p_n_math_expression_11','lang.py',283),
  ('n_math_expression_12 -> <empty>','n_math_expression_12',0,'p_n_math_expression_12','lang.py',291),
  ('n_two_way_conditional_1 -> <empty>','n_two_way_conditional_1',0,'p_n_two_way_conditional_1','lang.py',323),
  ('n_two_way_conditional_2 -> <empty>','n_two_way_conditional_2',0,'p_n_two_way_conditional_2','lang.py',336),
  ('n_two_way_conditional_3 -> <empty>','n_two_way_conditional_3',0,'p_n_two_way_conditional_3','lang.py',343),
  ('p_n_pre_condition_loop_1 -> <empty>','p_n_pre_condition_loop_1',0,'p_n_pre_condition_loop_1','lang.py',353),
  ('p_n_pre_condition_loop_2 -> <empty>','p_n_pre_condition_loop_2',0,'p_n_pre_condition_loop_2','lang.py',359),
  ('p_n_pre_condition_loop_3 -> <empty>','p_n_pre_condition_loop_3',0,'p_n_pre_condition_loop_3','lang.py',372),
  ('n_seen_equal_op -> <empty>','n_seen_equal_op',0,'p_n_seen_equal_op','lang.py',382),
  ('empty -> <empty>','empty',0,'p_empty','lang.py',415),
  ('program -> program_aux codeblock','program',2,'p_program','lang.py',421),
  ('program_aux -> IDK','program_aux',1,'p_program_aux','lang.py',427),
  ('program_aux -> OWO','program_aux',1,'p_program_aux','lang.py',428),
  ('type -> INT_TYPE n_seen_type','type',2,'p_type','lang.py',434),
  ('type -> STRING_TYPE n_seen_type','type',2,'p_type','lang.py',435),
  ('type -> DOUBLE_TYPE n_seen_type','type',2,'p_type','lang.py',436),
  ('type -> FLOAT_TYPE n_seen_type','type',2,'p_type','lang.py',437),
  ('type -> BOOL_TYPE n_seen_type','type',2,'p_type','lang.py',438),
  ('relational_operator -> GREATERTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',444),
  ('relational_operator -> LESSTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',445),
  ('relational_operator -> EQUALEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',446),
  ('relational_operator -> LESSTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',447),
  ('relational_operator -> GREATERTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',448),
  ('relational_operator -> NOTEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',449),
  ('literal -> FLOAT n_math_expression_1_float','literal',2,'p_literal','lang.py',455),
  ('literal -> INT n_math_expression_1_int','literal',2,'p_literal','lang.py',456),
  ('literal -> STRING n_math_expression_1_string','literal',2,'p_literal','lang.py',457),
  ('function_type -> type','function_type',1,'p_function_type','lang.py',463),
  ('function_type -> VOID','function_type',1,'p_function_type','lang.py',464),
  ('n_before_function_definition -> <empty>','n_before_function_definition',0,'p_n_before_function_definition','lang.py',469),
  ('n_function_block_start -> <empty>','n_function_block_start',0,'p_n_function_block_start','lang.py',475),
  ('n_function_block_end -> <empty>','n_function_block_end',0,'p_n_function_block_end','lang.py',480),
  ('function_definition -> n_before_function_definition FUNCTION NAME n_open_new_scope_function parameter_list DOUBLEDOT function_type LCURLY n_function_block_start codeblock RCURLY n_close_scope n_function_block_end','function_definition',13,'p_function_definition','lang.py',488),
  ('function_call -> NAME LPARENTHESIS arg_list RPARENTHESIS','function_call',4,'p_function_call','lang.py',494),
  ('arg_list -> empty','arg_list',1,'p_arg_list','lang.py',500),
  ('arg_list -> arg','arg_list',1,'p_arg_list','lang.py',501),
  ('arg_list -> arg COMMA arg_list','arg_list',3,'p_arg_list','lang.py',502),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','lang.py',508),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lang.py',509),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lang.py',510),
  ('arg -> expression','arg',1,'p_arg','lang.py',516),
  ('parameter -> type NAME n_variable_instantiate_param','parameter',3,'p_parameter','lang.py',522),
  ('expression -> expression_or','expression',1,'p_expression','lang.py',528),
  ('expression -> expression_or AND n_math_expression_10 expression n_math_expression_11','expression',5,'p_expression','lang.py',529),
  ('expression_or -> expression_rel','expression_or',1,'p_expression_or','lang.py',535),
  ('expression_or -> expression_rel OR n_math_expression_10 expression_or n_math_expression_12','expression_or',5,'p_expression_or','lang.py',536),
  ('expression_rel -> exp','expression_rel',1,'p_expression_rel','lang.py',542),
  ('expression_rel -> exp relational_operator exp n_math_expression_9','expression_rel',4,'p_expression_rel','lang.py',543),
  ('exp -> termino n_math_expression_4','exp',2,'p_exp','lang.py',549),
  ('exp -> termino n_math_expression_4 PLUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',550),
  ('exp -> termino n_math_expression_4 MINUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',551),
  ('termino -> factor n_math_expression_5','termino',2,'p_termino','lang.py',557),
  ('termino -> factor n_math_expression_5 TIMES n_math_expression_3 termino','termino',5,'p_termino','lang.py',558),
  ('termino -> factor n_math_expression_5 DIVIDE n_math_expression_3 termino','termino',5,'p_termino','lang.py',559),
  ('termino -> factor n_math_expression_5 MODULUS n_math_expression_3 termino','termino',5,'p_termino','lang.py',560),
  ('factor -> LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7','factor',5,'p_factor','lang.py',566),
  ('factor -> PLUS value','factor',2,'p_factor','lang.py',567),
  ('factor -> MINUS value','factor',2,'p_factor','lang.py',568),
  ('factor -> value','factor',1,'p_factor','lang.py',569),
  ('value -> function_call','value',1,'p_value','lang.py',576),
  ('value -> literal','value',1,'p_value','lang.py',577),
  ('value -> NAME n_variable_reference n_math_expression_1_name','value',3,'p_value','lang.py',578),
  ('assign -> type NAME n_variable_instantiate n_math_expression_1_name EQUAL n_seen_equal_op expression','assign',7,'p_assign','lang.py',584),
  ('assign -> NAME n_variable_reference n_math_expression_1_name EQUAL n_seen_equal_op expression','assign',6,'p_assign','lang.py',585),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','lang.py',594),
  ('statement_aux -> assign','statement_aux',1,'p_statement_aux','lang.py',600),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','lang.py',601),
  ('codeblock -> empty','codeblock',1,'p_codeblock','lang.py',608),
  ('codeblock -> codeblock_aux codeblock','codeblock',2,'p_codeblock','lang.py',609),
  ('codeblock_aux -> statement','codeblock_aux',1,'p_codeblock_aux','lang.py',615),
  ('codeblock_aux -> function_definition','codeblock_aux',1,'p_codeblock_aux','lang.py',616),
  ('codeblock_aux -> condition_if','codeblock_aux',1,'p_codeblock_aux','lang.py',617),
  ('codeblock_aux -> loop','codeblock_aux',1,'p_codeblock_aux','lang.py',618),
  ('loop -> forloop','loop',1,'p_loop','lang.py',624),
  ('loop -> whileloop','loop',1,'p_loop','lang.py',625),
  ('whileloop -> WHILE p_n_pre_condition_loop_1 LPARENTHESIS expression RPARENTHESIS p_n_pre_condition_loop_2 LCURLY n_open_new_scope codeblock RCURLY p_n_pre_condition_loop_3 n_close_scope','whileloop',12,'p_whileloop','lang.py',631),
  ('forloop -> FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope','forloop',13,'p_forloop','lang.py',637),
  ('condition_if -> IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2','condition_if',12,'p_condition_if','lang.py',643),
  ('condition_else -> ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope','condition_else',7,'p_condition_else','lang.py',649),
  ('condition_else -> empty','condition_else',1,'p_condition_else','lang.py',650),
]
