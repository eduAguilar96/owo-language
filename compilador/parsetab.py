
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND BOOL_TYPE COMMA DIVIDE DOT DOUBLEDOT DOUBLE_TYPE ELSE EQUAL EQUALEQUAL FLOAT FLOAT_TYPE FOR FUNCTION GREATERTHAN GREATERTHANOREQUAL IDK IF INT INT_TYPE LBRACKET LCURLY LESSTHAN LESSTHANOREQUAL LPARENTHESIS MINUS MODULUS NAME NOT NOTEQUAL OR OWO PLUS RBRACKET RCURLY RPARENTHESIS SEMICOLON STRING STRING_TYPE TIMES VOID WHILEn_seen_type : n_open_new_scope : n_close_scope : n_name : n_math_expression_1_int : n_math_expression_1_float : n_math_expression_1_string : n_math_expression_1_name : n_math_expression_2 : n_math_expression_3 : n_math_expression_4 : n_math_expression_5 : n_math_expression_6 : n_math_expression_7 : n_math_expression_8 : n_math_expression_9 : n_math_expression_10 : n_math_expression_11 : n_math_expression_12 : n_two_way_conditional_1 : n_two_way_conditional_2 : n_two_way_conditional_3 : \n    empty :\n    \n    program : program_aux codeblock\n    \n    program_aux : IDK\n    | OWO\n    \n    type : INT_TYPE n_seen_type\n    | STRING_TYPE n_seen_type\n    | DOUBLE_TYPE n_seen_type\n    | FLOAT_TYPE n_seen_type\n    | BOOL_TYPE n_seen_type\n    \n    relational_operator : GREATERTHAN n_math_expression_8\n    | LESSTHAN n_math_expression_8\n    | EQUALEQUAL n_math_expression_8\n    | LESSTHANOREQUAL n_math_expression_8\n    | GREATERTHANOREQUAL n_math_expression_8\n    | NOTEQUAL n_math_expression_8\n    \n    literal : FLOAT n_math_expression_1_float\n    | INT n_math_expression_1_int\n    | STRING n_math_expression_1_string\n    \n    function_type : type\n    | VOID\n    \n    function_definition : FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope\n    \n    function_call : NAME LPARENTHESIS parameter_list RPARENTHESIS\n    \n    parameter_list : empty\n    | parameter\n    | parameter COMMA parameter_list\n    \n    parameter : type NAME n_name\n    | assign\n    \n    expression : expression_or\n    | expression_or AND n_math_expression_10 expression n_math_expression_11\n    \n    expression_or : expression_rel\n    | expression_rel OR n_math_expression_10 expression_or n_math_expression_12\n    \n    expression_rel : exp\n    | exp relational_operator exp n_math_expression_9\n    \n    exp : termino n_math_expression_4\n    | termino n_math_expression_4 PLUS n_math_expression_2 exp\n    | termino n_math_expression_4 MINUS n_math_expression_2 exp\n    \n    termino : factor n_math_expression_5\n    | factor n_math_expression_5 TIMES n_math_expression_3 termino\n    | factor n_math_expression_5 DIVIDE n_math_expression_3 termino\n    | factor n_math_expression_5 MODULUS n_math_expression_3 termino\n    \n    factor : LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7\n    | PLUS value\n    | MINUS value\n    | value\n    \n    value : function_call\n    | literal\n    | NAME n_math_expression_1_name\n    \n    assign : type NAME n_name EQUAL expression\n    | NAME n_name EQUAL expression\n    \n    statement : statement_aux SEMICOLON\n    \n    statement_aux : assign\n    | function_call\n    \n    codeblock : empty\n    | codeblock_aux codeblock\n    \n    codeblock_aux : statement\n    | function_definition\n    | condition_if\n    | loop\n    \n    loop : forloop\n    | whileloop\n    \n    whileloop : WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    \n    forloop : FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope\n    \n    condition_if : IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2\n    \n    condition_else : ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    | empty\n    '
    
_lr_action_items = {'IDK':([0,],[3,]),'OWO':([0,],[4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,16,17,28,29,148,149,150,152,153,154,156,158,160,162,164,167,168,],[0,-23,-25,-26,-24,-75,-23,-77,-78,-79,-80,-81,-82,-76,-72,-3,-3,-3,-83,-43,-23,-21,-87,-85,-3,-84,-3,-86,]),'FUNCTION':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,135,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[13,-25,-26,13,-77,-78,-79,-80,-81,-82,-72,-20,-2,-2,13,13,13,-3,-3,-3,-83,-43,-23,13,-21,-87,-85,-3,-2,-84,13,-3,-86,]),'IF':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,135,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[15,-25,-26,15,-77,-78,-79,-80,-81,-82,-72,-20,-2,-2,15,15,15,-3,-3,-3,-83,-43,-23,15,-21,-87,-85,-3,-2,-84,15,-3,-86,]),'FOR':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,135,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[20,-25,-26,20,-77,-78,-79,-80,-81,-82,-72,-20,-2,-2,20,20,20,-3,-3,-3,-83,-43,-23,20,-21,-87,-85,-3,-2,-84,20,-3,-86,]),'WHILE':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,135,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[21,-25,-26,21,-77,-78,-79,-80,-81,-82,-72,-20,-2,-2,21,21,21,-3,-3,-3,-83,-43,-23,21,-21,-87,-85,-3,-2,-84,21,-3,-86,]),'NAME':([2,3,4,7,8,9,10,11,13,16,17,22,23,24,25,26,27,29,30,32,33,34,35,37,38,39,40,41,42,43,48,50,56,57,66,72,74,76,77,78,79,80,81,82,83,84,95,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,122,126,127,128,129,130,132,133,135,143,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[14,-25,-26,14,-77,-78,-79,-80,30,-81,-82,36,-1,-1,-1,-1,-1,-72,-2,44,62,-2,62,-27,-28,-29,-30,-31,44,62,73,-13,62,62,44,44,62,-17,-17,62,-15,-15,-15,-15,-15,-15,62,-20,62,62,-32,-33,-34,-35,-36,-37,-9,-9,-10,-10,-10,62,-2,-2,62,62,62,62,62,14,14,14,44,-3,-3,-3,-83,-43,-23,14,-21,-87,-85,-3,-2,-84,14,-3,-86,]),'INT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,135,143,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[23,-25,-26,23,-77,-78,-79,-80,-81,-82,-72,-2,23,-2,23,23,23,23,-20,-2,-2,23,23,23,23,-3,-3,-3,-83,-43,-23,23,-21,-87,-85,-3,-2,-84,23,-3,-86,]),'STRING_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,135,143,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[24,-25,-26,24,-77,-78,-79,-80,-81,-82,-72,-2,24,-2,24,24,24,24,-20,-2,-2,24,24,24,24,-3,-3,-3,-83,-43,-23,24,-21,-87,-85,-3,-2,-84,24,-3,-86,]),'DOUBLE_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,135,143,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[25,-25,-26,25,-77,-78,-79,-80,-81,-82,-72,-2,25,-2,25,25,25,25,-20,-2,-2,25,25,25,25,-3,-3,-3,-83,-43,-23,25,-21,-87,-85,-3,-2,-84,25,-3,-86,]),'FLOAT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,135,143,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[26,-25,-26,26,-77,-78,-79,-80,-81,-82,-72,-2,26,-2,26,26,26,26,-20,-2,-2,26,26,26,26,-3,-3,-3,-83,-43,-23,26,-21,-87,-85,-3,-2,-84,26,-3,-86,]),'BOOL_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,135,143,148,149,150,152,153,154,155,156,158,160,162,163,164,165,167,168,],[27,-25,-26,27,-77,-78,-79,-80,-81,-82,-72,-2,27,-2,27,27,27,27,-20,-2,-2,27,27,27,27,-3,-3,-3,-83,-43,-23,27,-21,-87,-85,-3,-2,-84,27,-3,-86,]),'RCURLY':([6,7,8,9,10,11,16,17,28,29,100,116,122,132,133,135,144,145,146,148,149,150,152,153,154,155,156,158,159,160,162,163,164,165,166,167,168,],[-75,-23,-77,-78,-79,-80,-81,-82,-76,-72,-20,-2,-2,-23,-23,-23,148,149,150,-3,-3,-3,-83,-43,-23,-23,-21,-87,162,-85,-3,-2,-84,-23,167,-3,-86,]),'SEMICOLON':([12,18,19,52,53,54,55,58,59,60,61,62,63,64,65,70,71,85,86,87,88,89,90,91,92,103,117,121,123,124,125,134,136,137,138,139,140,141,142,],[29,-73,-74,-50,-52,-54,-11,-12,-66,-67,-68,-8,-6,-5,-7,-71,-44,-56,-64,-65,-59,-69,-38,-39,-40,-16,-70,-14,-18,-19,-55,-63,-51,-53,-57,-58,-60,-61,-62,]),'LPARENTHESIS':([14,15,20,21,33,35,43,50,62,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[32,33,34,35,50,50,50,-13,32,50,-17,-17,50,-15,-15,-15,-15,-15,-15,50,50,50,-32,-33,-34,-35,-36,-37,-9,-9,-10,-10,-10,50,50,50,50,50,50,]),'EQUAL':([14,31,36,44,68,73,98,],[-4,43,-4,-4,95,-4,95,]),'LCURLY':([23,24,25,26,27,37,38,39,40,41,75,94,118,119,120,151,157,161,],[-1,-1,-1,-1,-1,-27,-28,-29,-30,-31,100,116,133,-41,-42,155,-22,163,]),'DOUBLEDOT':([30,42,46,47,49,52,53,54,55,58,59,60,61,62,63,64,65,69,70,71,72,73,85,86,87,88,89,90,91,92,93,97,98,103,117,121,123,124,125,131,134,136,137,138,139,140,141,142,],[-2,-23,-45,-46,-49,-50,-52,-54,-11,-12,-66,-67,-68,-8,-6,-5,-7,96,-71,-44,-23,-4,-56,-64,-65,-59,-69,-38,-39,-40,115,-47,-48,-16,-70,-14,-18,-19,-55,143,-63,-51,-53,-57,-58,-60,-61,-62,]),'RPARENTHESIS':([32,45,46,47,49,51,52,53,54,55,58,59,60,61,62,63,64,65,67,70,71,72,73,85,86,87,88,89,90,91,92,97,98,99,103,117,121,123,124,125,134,136,137,138,139,140,141,142,147,],[-23,71,-45,-46,-49,75,-50,-52,-54,-11,-12,-66,-67,-68,-8,-6,-5,-7,94,-71,-44,-23,-4,-56,-64,-65,-59,-69,-38,-39,-40,-47,-48,121,-16,-70,-14,-18,-19,-55,-63,-51,-53,-57,-58,-60,-61,-62,151,]),'PLUS':([33,35,43,50,55,58,59,60,61,62,63,64,65,71,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,121,126,127,128,129,130,134,140,141,142,],[56,56,56,-13,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,56,-17,-17,56,-15,-15,-15,-15,-15,-15,110,-64,-65,-59,-69,-38,-39,-40,56,56,56,-32,-33,-34,-35,-36,-37,-9,-9,-10,-10,-10,56,-14,56,56,56,56,56,-63,-60,-61,-62,]),'MINUS':([33,35,43,50,55,58,59,60,61,62,63,64,65,71,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,121,126,127,128,129,130,134,140,141,142,],[57,57,57,-13,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,57,-17,-17,57,-15,-15,-15,-15,-15,-15,111,-64,-65,-59,-69,-38,-39,-40,57,57,57,-32,-33,-34,-35,-36,-37,-9,-9,-10,-10,-10,57,-14,57,57,57,57,57,-63,-60,-61,-62,]),'FLOAT':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[63,63,63,-13,63,63,63,-17,-17,63,-15,-15,-15,-15,-15,-15,63,63,63,-32,-33,-34,-35,-36,-37,-9,-9,-10,-10,-10,63,63,63,63,63,63,]),'INT':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[64,64,64,-13,64,64,64,-17,-17,64,-15,-15,-15,-15,-15,-15,64,64,64,-32,-33,-34,-35,-36,-37,-9,-9,-10,-10,-10,64,64,64,64,64,64,]),'STRING':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[65,65,65,-13,65,65,65,-17,-17,65,-15,-15,-15,-15,-15,-15,65,65,65,-32,-33,-34,-35,-36,-37,-9,-9,-10,-10,-10,65,65,65,65,65,65,]),'COMMA':([47,49,52,53,54,55,58,59,60,61,62,63,64,65,70,71,73,85,86,87,88,89,90,91,92,98,103,117,121,123,124,125,134,136,137,138,139,140,141,142,],[72,-49,-50,-52,-54,-11,-12,-66,-67,-68,-8,-6,-5,-7,-71,-44,-4,-56,-64,-65,-59,-69,-38,-39,-40,-48,-16,-70,-14,-18,-19,-55,-63,-51,-53,-57,-58,-60,-61,-62,]),'AND':([52,53,54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,103,121,124,125,134,137,138,139,140,141,142,],[76,-52,-54,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-16,-14,-19,-55,-63,-53,-57,-58,-60,-61,-62,]),'OR':([53,54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,103,121,125,134,138,139,140,141,142,],[77,-54,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-16,-14,-55,-63,-57,-58,-60,-61,-62,]),'GREATERTHAN':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[79,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-14,-63,-57,-58,-60,-61,-62,]),'LESSTHAN':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[80,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-14,-63,-57,-58,-60,-61,-62,]),'EQUALEQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[81,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-14,-63,-57,-58,-60,-61,-62,]),'LESSTHANOREQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[82,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-14,-63,-57,-58,-60,-61,-62,]),'GREATERTHANOREQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[83,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-14,-63,-57,-58,-60,-61,-62,]),'NOTEQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[84,-11,-12,-66,-67,-68,-8,-6,-5,-7,-44,-56,-64,-65,-59,-69,-38,-39,-40,-14,-63,-57,-58,-60,-61,-62,]),'TIMES':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,121,134,],[-12,-66,-67,-68,-8,-6,-5,-7,-44,-64,-65,112,-69,-38,-39,-40,-14,-63,]),'DIVIDE':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,121,134,],[-12,-66,-67,-68,-8,-6,-5,-7,-44,-64,-65,113,-69,-38,-39,-40,-14,-63,]),'MODULUS':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,121,134,],[-12,-66,-67,-68,-8,-6,-5,-7,-44,-64,-65,114,-69,-38,-39,-40,-14,-63,]),'VOID':([96,],[120,]),'ELSE':([150,154,],[-3,157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'codeblock':([2,7,132,133,135,155,165,],[5,28,144,145,146,159,166,]),'empty':([2,7,32,42,72,132,133,135,154,155,165,],[6,6,46,46,46,6,6,6,158,6,6,]),'codeblock_aux':([2,7,132,133,135,155,165,],[7,7,7,7,7,7,7,]),'statement':([2,7,132,133,135,155,165,],[8,8,8,8,8,8,8,]),'function_definition':([2,7,132,133,135,155,165,],[9,9,9,9,9,9,9,]),'condition_if':([2,7,132,133,135,155,165,],[10,10,10,10,10,10,10,]),'loop':([2,7,132,133,135,155,165,],[11,11,11,11,11,11,11,]),'statement_aux':([2,7,132,133,135,155,165,],[12,12,12,12,12,12,12,]),'forloop':([2,7,132,133,135,155,165,],[16,16,16,16,16,16,16,]),'whileloop':([2,7,132,133,135,155,165,],[17,17,17,17,17,17,17,]),'assign':([2,7,32,42,66,72,132,133,135,143,155,165,],[18,18,49,49,93,49,18,18,18,147,18,18,]),'function_call':([2,7,33,35,43,56,57,74,78,95,101,102,115,126,127,128,129,130,132,133,135,155,165,],[19,19,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,19,19,19,19,19,]),'type':([2,7,32,42,66,72,96,132,133,135,143,155,165,],[22,22,48,48,22,48,119,22,22,22,22,22,22,]),'n_name':([14,36,44,73,],[31,68,31,98,]),'n_seen_type':([23,24,25,26,27,],[37,38,39,40,41,]),'n_open_new_scope':([30,34,116,122,163,],[42,66,132,135,165,]),'parameter_list':([32,42,72,],[45,69,97,]),'parameter':([32,42,72,],[47,47,47,]),'expression':([33,35,43,74,95,101,115,],[51,67,70,99,117,123,131,]),'expression_or':([33,35,43,74,95,101,102,115,],[52,52,52,52,52,52,124,52,]),'expression_rel':([33,35,43,74,95,101,102,115,],[53,53,53,53,53,53,53,53,]),'exp':([33,35,43,74,78,95,101,102,115,126,127,],[54,54,54,54,103,54,54,54,54,138,139,]),'termino':([33,35,43,74,78,95,101,102,115,126,127,128,129,130,],[55,55,55,55,55,55,55,55,55,55,55,140,141,142,]),'factor':([33,35,43,74,78,95,101,102,115,126,127,128,129,130,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'value':([33,35,43,56,57,74,78,95,101,102,115,126,127,128,129,130,],[59,59,59,86,87,59,59,59,59,59,59,59,59,59,59,59,]),'literal':([33,35,43,56,57,74,78,95,101,102,115,126,127,128,129,130,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'n_math_expression_6':([50,],[74,]),'relational_operator':([54,],[78,]),'n_math_expression_4':([55,],[85,]),'n_math_expression_5':([58,],[88,]),'n_math_expression_1_name':([62,],[89,]),'n_math_expression_1_float':([63,],[90,]),'n_math_expression_1_int':([64,],[91,]),'n_math_expression_1_string':([65,],[92,]),'n_math_expression_10':([76,77,],[101,102,]),'n_math_expression_8':([79,80,81,82,83,84,],[104,105,106,107,108,109,]),'function_type':([96,],[118,]),'n_two_way_conditional_1':([100,],[122,]),'n_math_expression_9':([103,],[125,]),'n_math_expression_2':([110,111,],[126,127,]),'n_math_expression_3':([112,113,114,],[128,129,130,]),'n_math_expression_7':([121,],[134,]),'n_math_expression_11':([123,],[136,]),'n_math_expression_12':([124,],[137,]),'n_close_scope':([148,149,150,162,167,],[152,153,154,164,168,]),'condition_else':([154,],[156,]),'n_two_way_conditional_2':([156,],[160,]),'n_two_way_conditional_3':([157,],[161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','lang.py',112),
  ('n_open_new_scope -> <empty>','n_open_new_scope',0,'p_n_open_new_scope','lang.py',119),
  ('n_close_scope -> <empty>','n_close_scope',0,'p_n_close_scope','lang.py',128),
  ('n_name -> <empty>','n_name',0,'p_n_name','lang.py',135),
  ('n_math_expression_1_int -> <empty>','n_math_expression_1_int',0,'p_n_math_expression_1_int','lang.py',154),
  ('n_math_expression_1_float -> <empty>','n_math_expression_1_float',0,'p_n_math_expression_1_float','lang.py',159),
  ('n_math_expression_1_string -> <empty>','n_math_expression_1_string',0,'p_n_math_expression_1_string','lang.py',164),
  ('n_math_expression_1_name -> <empty>','n_math_expression_1_name',0,'p_n_math_expression_1_name','lang.py',169),
  ('n_math_expression_2 -> <empty>','n_math_expression_2',0,'p_n_math_expression_2','lang.py',180),
  ('n_math_expression_3 -> <empty>','n_math_expression_3',0,'p_n_math_expression_3','lang.py',185),
  ('n_math_expression_4 -> <empty>','n_math_expression_4',0,'p_n_math_expression_4','lang.py',190),
  ('n_math_expression_5 -> <empty>','n_math_expression_5',0,'p_n_math_expression_5','lang.py',195),
  ('n_math_expression_6 -> <empty>','n_math_expression_6',0,'p_n_math_expression_6','lang.py',200),
  ('n_math_expression_7 -> <empty>','n_math_expression_7',0,'p_n_math_expression_7','lang.py',205),
  ('n_math_expression_8 -> <empty>','n_math_expression_8',0,'p_n_math_expression_8','lang.py',210),
  ('n_math_expression_9 -> <empty>','n_math_expression_9',0,'p_n_math_expression_9','lang.py',215),
  ('n_math_expression_10 -> <empty>','n_math_expression_10',0,'p_n_math_expression_10','lang.py',228),
  ('n_math_expression_11 -> <empty>','n_math_expression_11',0,'p_n_math_expression_11','lang.py',234),
  ('n_math_expression_12 -> <empty>','n_math_expression_12',0,'p_n_math_expression_12','lang.py',240),
  ('n_two_way_conditional_1 -> <empty>','n_two_way_conditional_1',0,'p_n_two_way_conditional_1','lang.py',269),
  ('n_two_way_conditional_2 -> <empty>','n_two_way_conditional_2',0,'p_n_two_way_conditional_2','lang.py',282),
  ('n_two_way_conditional_3 -> <empty>','n_two_way_conditional_3',0,'p_n_two_way_conditional_3','lang.py',289),
  ('empty -> <empty>','empty',0,'p_empty','lang.py',307),
  ('program -> program_aux codeblock','program',2,'p_program','lang.py',313),
  ('program_aux -> IDK','program_aux',1,'p_program_aux','lang.py',319),
  ('program_aux -> OWO','program_aux',1,'p_program_aux','lang.py',320),
  ('type -> INT_TYPE n_seen_type','type',2,'p_type','lang.py',326),
  ('type -> STRING_TYPE n_seen_type','type',2,'p_type','lang.py',327),
  ('type -> DOUBLE_TYPE n_seen_type','type',2,'p_type','lang.py',328),
  ('type -> FLOAT_TYPE n_seen_type','type',2,'p_type','lang.py',329),
  ('type -> BOOL_TYPE n_seen_type','type',2,'p_type','lang.py',330),
  ('relational_operator -> GREATERTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',336),
  ('relational_operator -> LESSTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',337),
  ('relational_operator -> EQUALEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',338),
  ('relational_operator -> LESSTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',339),
  ('relational_operator -> GREATERTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',340),
  ('relational_operator -> NOTEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',341),
  ('literal -> FLOAT n_math_expression_1_float','literal',2,'p_literal','lang.py',347),
  ('literal -> INT n_math_expression_1_int','literal',2,'p_literal','lang.py',348),
  ('literal -> STRING n_math_expression_1_string','literal',2,'p_literal','lang.py',349),
  ('function_type -> type','function_type',1,'p_function_type','lang.py',355),
  ('function_type -> VOID','function_type',1,'p_function_type','lang.py',356),
  ('function_definition -> FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope','function_definition',10,'p_function_definition','lang.py',362),
  ('function_call -> NAME LPARENTHESIS parameter_list RPARENTHESIS','function_call',4,'p_function_call','lang.py',368),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','lang.py',374),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lang.py',375),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lang.py',376),
  ('parameter -> type NAME n_name','parameter',3,'p_parameter','lang.py',382),
  ('parameter -> assign','parameter',1,'p_parameter','lang.py',383),
  ('expression -> expression_or','expression',1,'p_expression','lang.py',391),
  ('expression -> expression_or AND n_math_expression_10 expression n_math_expression_11','expression',5,'p_expression','lang.py',392),
  ('expression_or -> expression_rel','expression_or',1,'p_expression_or','lang.py',400),
  ('expression_or -> expression_rel OR n_math_expression_10 expression_or n_math_expression_12','expression_or',5,'p_expression_or','lang.py',401),
  ('expression_rel -> exp','expression_rel',1,'p_expression_rel','lang.py',409),
  ('expression_rel -> exp relational_operator exp n_math_expression_9','expression_rel',4,'p_expression_rel','lang.py',410),
  ('exp -> termino n_math_expression_4','exp',2,'p_exp','lang.py',418),
  ('exp -> termino n_math_expression_4 PLUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',419),
  ('exp -> termino n_math_expression_4 MINUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',420),
  ('termino -> factor n_math_expression_5','termino',2,'p_termino','lang.py',426),
  ('termino -> factor n_math_expression_5 TIMES n_math_expression_3 termino','termino',5,'p_termino','lang.py',427),
  ('termino -> factor n_math_expression_5 DIVIDE n_math_expression_3 termino','termino',5,'p_termino','lang.py',428),
  ('termino -> factor n_math_expression_5 MODULUS n_math_expression_3 termino','termino',5,'p_termino','lang.py',429),
  ('factor -> LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7','factor',5,'p_factor','lang.py',435),
  ('factor -> PLUS value','factor',2,'p_factor','lang.py',436),
  ('factor -> MINUS value','factor',2,'p_factor','lang.py',437),
  ('factor -> value','factor',1,'p_factor','lang.py',438),
  ('value -> function_call','value',1,'p_value','lang.py',445),
  ('value -> literal','value',1,'p_value','lang.py',446),
  ('value -> NAME n_math_expression_1_name','value',2,'p_value','lang.py',447),
  ('assign -> type NAME n_name EQUAL expression','assign',5,'p_assign','lang.py',453),
  ('assign -> NAME n_name EQUAL expression','assign',4,'p_assign','lang.py',454),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','lang.py',460),
  ('statement_aux -> assign','statement_aux',1,'p_statement_aux','lang.py',466),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','lang.py',467),
  ('codeblock -> empty','codeblock',1,'p_codeblock','lang.py',474),
  ('codeblock -> codeblock_aux codeblock','codeblock',2,'p_codeblock','lang.py',475),
  ('codeblock_aux -> statement','codeblock_aux',1,'p_codeblock_aux','lang.py',481),
  ('codeblock_aux -> function_definition','codeblock_aux',1,'p_codeblock_aux','lang.py',482),
  ('codeblock_aux -> condition_if','codeblock_aux',1,'p_codeblock_aux','lang.py',483),
  ('codeblock_aux -> loop','codeblock_aux',1,'p_codeblock_aux','lang.py',484),
  ('loop -> forloop','loop',1,'p_loop','lang.py',490),
  ('loop -> whileloop','loop',1,'p_loop','lang.py',491),
  ('whileloop -> WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope','whileloop',9,'p_whileloop','lang.py',497),
  ('forloop -> FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope','forloop',13,'p_forloop','lang.py',503),
  ('condition_if -> IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2','condition_if',12,'p_condition_if','lang.py',509),
  ('condition_else -> ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope','condition_else',7,'p_condition_else','lang.py',515),
  ('condition_else -> empty','condition_else',1,'p_condition_else','lang.py',516),
]
