
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND BOOL_TYPE COMMA DIVIDE DOT DOUBLEDOT DOUBLE_TYPE ELSE EQUAL EQUALEQUAL FLOAT FLOAT_TYPE FOR FUNCTION GREATERTHAN GREATERTHANOREQUAL IDK IF INT INT_TYPE LBRACKET LCURLY LESSTHAN LESSTHANOREQUAL LPARENTHESIS MINUS MODULUS NAME NOT NOTEQUAL OR OWO PLUS RBRACKET RCURLY RPARENTHESIS SEMICOLON STRING STRING_TYPE TIMES VOID WHILEn_seen_type : n_open_new_scope : n_close_scope : n_name : n_math_expression_1_int : n_math_expression_1_float : n_math_expression_1_string : n_math_expression_1_name : n_math_expression_2 : n_math_expression_3 : n_math_expression_4 : n_math_expression_5 : n_math_expression_6 : n_math_expression_7 : n_math_expression_8 : n_math_expression_9 : n_math_expression_10 : n_math_expression_11 : n_math_expression_12 : \n    empty :\n    \n    program : program_aux codeblock\n    \n    program_aux : IDK\n    | OWO\n    \n    type : INT_TYPE n_seen_type\n    | STRING_TYPE n_seen_type\n    | DOUBLE_TYPE n_seen_type\n    | FLOAT_TYPE n_seen_type\n    | BOOL_TYPE n_seen_type\n    \n    relational_operator : GREATERTHAN n_math_expression_8\n    | LESSTHAN n_math_expression_8\n    | EQUALEQUAL n_math_expression_8\n    | LESSTHANOREQUAL n_math_expression_8\n    | GREATERTHANOREQUAL n_math_expression_8\n    | NOTEQUAL n_math_expression_8\n    \n    literal : FLOAT n_math_expression_1_float\n    | INT n_math_expression_1_int\n    | STRING n_math_expression_1_string\n    \n    function_type : type\n    | VOID\n    \n    function_definition : FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope\n    \n    function_call : NAME LPARENTHESIS parameter_list RPARENTHESIS\n    \n    parameter_list : empty\n    | parameter\n    | parameter COMMA parameter_list\n    \n    parameter : type NAME n_name\n    | assign\n    \n    expression : expression_or\n    | expression_or AND n_math_expression_10 expression n_math_expression_11\n    \n    expression_or : expression_rel\n    | expression_rel OR n_math_expression_10 expression_or n_math_expression_12\n    \n    expression_rel : exp\n    | exp relational_operator exp n_math_expression_9\n    \n    exp : termino n_math_expression_4\n    | termino n_math_expression_4 PLUS n_math_expression_2 exp\n    | termino n_math_expression_4 MINUS n_math_expression_2 exp\n    \n    termino : factor n_math_expression_5\n    | factor n_math_expression_5 TIMES n_math_expression_3 termino\n    | factor n_math_expression_5 DIVIDE n_math_expression_3 termino\n    | factor n_math_expression_5 MODULUS n_math_expression_3 termino\n    \n    factor : LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7\n    | PLUS value\n    | MINUS value\n    | value\n    \n    value : function_call\n    | literal\n    | NAME n_math_expression_1_name\n    \n    assign : type NAME n_name EQUAL expression\n    | NAME n_name EQUAL expression\n    \n    statement : statement_aux SEMICOLON\n    \n    statement_aux : assign\n    | function_call\n    \n    codeblock : empty\n    | codeblock_aux codeblock\n    \n    codeblock_aux : statement\n    | function_definition\n    | condition_if\n    | loop\n    \n    loop : forloop\n    | whileloop\n    \n    whileloop : WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    \n    forloop : FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope\n    \n    condition_if : IF LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope condition_else\n    \n    condition_else : ELSE LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    | empty\n    '
    
_lr_action_items = {'IDK':([0,],[3,]),'OWO':([0,],[4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,16,17,28,29,146,148,149,150,152,153,154,156,161,163,164,165,],[0,-20,-22,-23,-21,-72,-20,-74,-75,-76,-77,-78,-79,-73,-69,-3,-3,-3,-20,-80,-40,-82,-84,-3,-81,-3,-83,]),'FUNCTION':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[13,-22,-23,13,-74,-75,-76,-77,-78,-79,-69,-2,-2,13,13,13,-3,-3,-3,-20,-80,-40,-82,-84,13,-2,13,-3,-81,-3,-83,]),'IF':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[15,-22,-23,15,-74,-75,-76,-77,-78,-79,-69,-2,-2,15,15,15,-3,-3,-3,-20,-80,-40,-82,-84,15,-2,15,-3,-81,-3,-83,]),'FOR':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[20,-22,-23,20,-74,-75,-76,-77,-78,-79,-69,-2,-2,20,20,20,-3,-3,-3,-20,-80,-40,-82,-84,20,-2,20,-3,-81,-3,-83,]),'WHILE':([2,3,4,7,8,9,10,11,16,17,29,100,116,122,132,133,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[21,-22,-23,21,-74,-75,-76,-77,-78,-79,-69,-2,-2,21,21,21,-3,-3,-3,-20,-80,-40,-82,-84,21,-2,21,-3,-81,-3,-83,]),'NAME':([2,3,4,7,8,9,10,11,13,16,17,22,23,24,25,26,27,29,30,32,33,34,35,37,38,39,40,41,42,43,48,50,56,57,66,72,74,76,77,78,79,80,81,82,83,84,95,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,122,126,127,128,129,130,132,133,143,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[14,-22,-23,14,-74,-75,-76,-77,30,-78,-79,36,-1,-1,-1,-1,-1,-69,-2,44,62,-2,62,-24,-25,-26,-27,-28,44,62,73,-13,62,62,44,44,62,-17,-17,62,-15,-15,-15,-15,-15,-15,62,-2,62,62,-29,-30,-31,-32,-33,-34,-9,-9,-10,-10,-10,62,-2,14,62,62,62,62,62,14,14,44,-3,-3,-3,-20,-80,-40,-82,-84,14,-2,14,-3,-81,-3,-83,]),'INT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,143,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[23,-22,-23,23,-74,-75,-76,-77,-78,-79,-69,-2,23,-2,23,23,23,23,-2,-2,23,23,23,23,-3,-3,-3,-20,-80,-40,-82,-84,23,-2,23,-3,-81,-3,-83,]),'STRING_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,143,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[24,-22,-23,24,-74,-75,-76,-77,-78,-79,-69,-2,24,-2,24,24,24,24,-2,-2,24,24,24,24,-3,-3,-3,-20,-80,-40,-82,-84,24,-2,24,-3,-81,-3,-83,]),'DOUBLE_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,143,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[25,-22,-23,25,-74,-75,-76,-77,-78,-79,-69,-2,25,-2,25,25,25,25,-2,-2,25,25,25,25,-3,-3,-3,-20,-80,-40,-82,-84,25,-2,25,-3,-81,-3,-83,]),'FLOAT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,143,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[26,-22,-23,26,-74,-75,-76,-77,-78,-79,-69,-2,26,-2,26,26,26,26,-2,-2,26,26,26,26,-3,-3,-3,-20,-80,-40,-82,-84,26,-2,26,-3,-81,-3,-83,]),'BOOL_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,66,72,96,100,116,122,132,133,143,146,148,149,150,152,153,154,156,157,158,160,161,163,164,165,],[27,-22,-23,27,-74,-75,-76,-77,-78,-79,-69,-2,27,-2,27,27,27,27,-2,-2,27,27,27,27,-3,-3,-3,-20,-80,-40,-82,-84,27,-2,27,-3,-81,-3,-83,]),'RCURLY':([6,7,8,9,10,11,16,17,28,29,100,116,122,132,133,135,144,145,146,148,149,150,152,153,154,156,157,158,159,160,161,162,163,164,165,],[-72,-20,-74,-75,-76,-77,-78,-79,-73,-69,-2,-2,-20,-20,-20,146,148,149,-3,-3,-3,-20,-80,-40,-82,-84,-20,-2,161,-20,-3,164,-81,-3,-83,]),'SEMICOLON':([12,18,19,52,53,54,55,58,59,60,61,62,63,64,65,70,71,85,86,87,88,89,90,91,92,103,117,121,123,124,125,134,136,137,138,139,140,141,142,],[29,-70,-71,-47,-49,-51,-11,-12,-63,-64,-65,-8,-6,-5,-7,-68,-41,-53,-61,-62,-56,-66,-35,-36,-37,-16,-67,-14,-18,-19,-52,-60,-48,-50,-54,-55,-57,-58,-59,]),'LPARENTHESIS':([14,15,20,21,33,35,43,50,62,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[32,33,34,35,50,50,50,-13,32,50,-17,-17,50,-15,-15,-15,-15,-15,-15,50,50,50,-29,-30,-31,-32,-33,-34,-9,-9,-10,-10,-10,50,50,50,50,50,50,]),'EQUAL':([14,31,36,44,68,73,98,],[-4,43,-4,-4,95,-4,95,]),'LCURLY':([23,24,25,26,27,37,38,39,40,41,75,94,118,119,120,151,155,],[-1,-1,-1,-1,-1,-24,-25,-26,-27,-28,100,116,133,-38,-39,157,158,]),'DOUBLEDOT':([30,42,46,47,49,52,53,54,55,58,59,60,61,62,63,64,65,69,70,71,72,73,85,86,87,88,89,90,91,92,93,97,98,103,117,121,123,124,125,131,134,136,137,138,139,140,141,142,],[-2,-20,-42,-43,-46,-47,-49,-51,-11,-12,-63,-64,-65,-8,-6,-5,-7,96,-68,-41,-20,-4,-53,-61,-62,-56,-66,-35,-36,-37,115,-44,-45,-16,-67,-14,-18,-19,-52,143,-60,-48,-50,-54,-55,-57,-58,-59,]),'RPARENTHESIS':([32,45,46,47,49,51,52,53,54,55,58,59,60,61,62,63,64,65,67,70,71,72,73,85,86,87,88,89,90,91,92,97,98,99,103,117,121,123,124,125,134,136,137,138,139,140,141,142,147,],[-20,71,-42,-43,-46,75,-47,-49,-51,-11,-12,-63,-64,-65,-8,-6,-5,-7,94,-68,-41,-20,-4,-53,-61,-62,-56,-66,-35,-36,-37,-44,-45,121,-16,-67,-14,-18,-19,-52,-60,-48,-50,-54,-55,-57,-58,-59,151,]),'PLUS':([33,35,43,50,55,58,59,60,61,62,63,64,65,71,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,121,126,127,128,129,130,134,140,141,142,],[56,56,56,-13,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,56,-17,-17,56,-15,-15,-15,-15,-15,-15,110,-61,-62,-56,-66,-35,-36,-37,56,56,56,-29,-30,-31,-32,-33,-34,-9,-9,-10,-10,-10,56,-14,56,56,56,56,56,-60,-57,-58,-59,]),'MINUS':([33,35,43,50,55,58,59,60,61,62,63,64,65,71,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,121,126,127,128,129,130,134,140,141,142,],[57,57,57,-13,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,57,-17,-17,57,-15,-15,-15,-15,-15,-15,111,-61,-62,-56,-66,-35,-36,-37,57,57,57,-29,-30,-31,-32,-33,-34,-9,-9,-10,-10,-10,57,-14,57,57,57,57,57,-60,-57,-58,-59,]),'FLOAT':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[63,63,63,-13,63,63,63,-17,-17,63,-15,-15,-15,-15,-15,-15,63,63,63,-29,-30,-31,-32,-33,-34,-9,-9,-10,-10,-10,63,63,63,63,63,63,]),'INT':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[64,64,64,-13,64,64,64,-17,-17,64,-15,-15,-15,-15,-15,-15,64,64,64,-29,-30,-31,-32,-33,-34,-9,-9,-10,-10,-10,64,64,64,64,64,64,]),'STRING':([33,35,43,50,56,57,74,76,77,78,79,80,81,82,83,84,95,101,102,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,],[65,65,65,-13,65,65,65,-17,-17,65,-15,-15,-15,-15,-15,-15,65,65,65,-29,-30,-31,-32,-33,-34,-9,-9,-10,-10,-10,65,65,65,65,65,65,]),'COMMA':([47,49,52,53,54,55,58,59,60,61,62,63,64,65,70,71,73,85,86,87,88,89,90,91,92,98,103,117,121,123,124,125,134,136,137,138,139,140,141,142,],[72,-46,-47,-49,-51,-11,-12,-63,-64,-65,-8,-6,-5,-7,-68,-41,-4,-53,-61,-62,-56,-66,-35,-36,-37,-45,-16,-67,-14,-18,-19,-52,-60,-48,-50,-54,-55,-57,-58,-59,]),'AND':([52,53,54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,103,121,124,125,134,137,138,139,140,141,142,],[76,-49,-51,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-16,-14,-19,-52,-60,-50,-54,-55,-57,-58,-59,]),'OR':([53,54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,103,121,125,134,138,139,140,141,142,],[77,-51,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-16,-14,-52,-60,-54,-55,-57,-58,-59,]),'GREATERTHAN':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[79,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-14,-60,-54,-55,-57,-58,-59,]),'LESSTHAN':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[80,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-14,-60,-54,-55,-57,-58,-59,]),'EQUALEQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[81,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-14,-60,-54,-55,-57,-58,-59,]),'LESSTHANOREQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[82,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-14,-60,-54,-55,-57,-58,-59,]),'GREATERTHANOREQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[83,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-14,-60,-54,-55,-57,-58,-59,]),'NOTEQUAL':([54,55,58,59,60,61,62,63,64,65,71,85,86,87,88,89,90,91,92,121,134,138,139,140,141,142,],[84,-11,-12,-63,-64,-65,-8,-6,-5,-7,-41,-53,-61,-62,-56,-66,-35,-36,-37,-14,-60,-54,-55,-57,-58,-59,]),'TIMES':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,121,134,],[-12,-63,-64,-65,-8,-6,-5,-7,-41,-61,-62,112,-66,-35,-36,-37,-14,-60,]),'DIVIDE':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,121,134,],[-12,-63,-64,-65,-8,-6,-5,-7,-41,-61,-62,113,-66,-35,-36,-37,-14,-60,]),'MODULUS':([58,59,60,61,62,63,64,65,71,86,87,88,89,90,91,92,121,134,],[-12,-63,-64,-65,-8,-6,-5,-7,-41,-61,-62,114,-66,-35,-36,-37,-14,-60,]),'VOID':([96,],[120,]),'ELSE':([146,150,],[-3,155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'codeblock':([2,7,122,132,133,157,160,],[5,28,135,144,145,159,162,]),'empty':([2,7,32,42,72,122,132,133,150,157,160,],[6,6,46,46,46,6,6,6,156,6,6,]),'codeblock_aux':([2,7,122,132,133,157,160,],[7,7,7,7,7,7,7,]),'statement':([2,7,122,132,133,157,160,],[8,8,8,8,8,8,8,]),'function_definition':([2,7,122,132,133,157,160,],[9,9,9,9,9,9,9,]),'condition_if':([2,7,122,132,133,157,160,],[10,10,10,10,10,10,10,]),'loop':([2,7,122,132,133,157,160,],[11,11,11,11,11,11,11,]),'statement_aux':([2,7,122,132,133,157,160,],[12,12,12,12,12,12,12,]),'forloop':([2,7,122,132,133,157,160,],[16,16,16,16,16,16,16,]),'whileloop':([2,7,122,132,133,157,160,],[17,17,17,17,17,17,17,]),'assign':([2,7,32,42,66,72,122,132,133,143,157,160,],[18,18,49,49,93,49,18,18,18,147,18,18,]),'function_call':([2,7,33,35,43,56,57,74,78,95,101,102,115,122,126,127,128,129,130,132,133,157,160,],[19,19,60,60,60,60,60,60,60,60,60,60,60,19,60,60,60,60,60,19,19,19,19,]),'type':([2,7,32,42,66,72,96,122,132,133,143,157,160,],[22,22,48,48,22,48,119,22,22,22,22,22,22,]),'n_name':([14,36,44,73,],[31,68,31,98,]),'n_seen_type':([23,24,25,26,27,],[37,38,39,40,41,]),'n_open_new_scope':([30,34,100,116,158,],[42,66,122,132,160,]),'parameter_list':([32,42,72,],[45,69,97,]),'parameter':([32,42,72,],[47,47,47,]),'expression':([33,35,43,74,95,101,115,],[51,67,70,99,117,123,131,]),'expression_or':([33,35,43,74,95,101,102,115,],[52,52,52,52,52,52,124,52,]),'expression_rel':([33,35,43,74,95,101,102,115,],[53,53,53,53,53,53,53,53,]),'exp':([33,35,43,74,78,95,101,102,115,126,127,],[54,54,54,54,103,54,54,54,54,138,139,]),'termino':([33,35,43,74,78,95,101,102,115,126,127,128,129,130,],[55,55,55,55,55,55,55,55,55,55,55,140,141,142,]),'factor':([33,35,43,74,78,95,101,102,115,126,127,128,129,130,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'value':([33,35,43,56,57,74,78,95,101,102,115,126,127,128,129,130,],[59,59,59,86,87,59,59,59,59,59,59,59,59,59,59,59,]),'literal':([33,35,43,56,57,74,78,95,101,102,115,126,127,128,129,130,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'n_math_expression_6':([50,],[74,]),'relational_operator':([54,],[78,]),'n_math_expression_4':([55,],[85,]),'n_math_expression_5':([58,],[88,]),'n_math_expression_1_name':([62,],[89,]),'n_math_expression_1_float':([63,],[90,]),'n_math_expression_1_int':([64,],[91,]),'n_math_expression_1_string':([65,],[92,]),'n_math_expression_10':([76,77,],[101,102,]),'n_math_expression_8':([79,80,81,82,83,84,],[104,105,106,107,108,109,]),'function_type':([96,],[118,]),'n_math_expression_9':([103,],[125,]),'n_math_expression_2':([110,111,],[126,127,]),'n_math_expression_3':([112,113,114,],[128,129,130,]),'n_math_expression_7':([121,],[134,]),'n_math_expression_11':([123,],[136,]),'n_math_expression_12':([124,],[137,]),'n_close_scope':([146,148,149,161,164,],[150,152,153,163,165,]),'condition_else':([150,],[154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','lang.py',131),
  ('n_open_new_scope -> <empty>','n_open_new_scope',0,'p_n_open_new_scope','lang.py',138),
  ('n_close_scope -> <empty>','n_close_scope',0,'p_n_close_scope','lang.py',147),
  ('n_name -> <empty>','n_name',0,'p_n_name','lang.py',154),
  ('n_math_expression_1_int -> <empty>','n_math_expression_1_int',0,'p_n_math_expression_1_int','lang.py',166),
  ('n_math_expression_1_float -> <empty>','n_math_expression_1_float',0,'p_n_math_expression_1_float','lang.py',171),
  ('n_math_expression_1_string -> <empty>','n_math_expression_1_string',0,'p_n_math_expression_1_string','lang.py',176),
  ('n_math_expression_1_name -> <empty>','n_math_expression_1_name',0,'p_n_math_expression_1_name','lang.py',181),
  ('n_math_expression_2 -> <empty>','n_math_expression_2',0,'p_n_math_expression_2','lang.py',193),
  ('n_math_expression_3 -> <empty>','n_math_expression_3',0,'p_n_math_expression_3','lang.py',198),
  ('n_math_expression_4 -> <empty>','n_math_expression_4',0,'p_n_math_expression_4','lang.py',203),
  ('n_math_expression_5 -> <empty>','n_math_expression_5',0,'p_n_math_expression_5','lang.py',208),
  ('n_math_expression_6 -> <empty>','n_math_expression_6',0,'p_n_math_expression_6','lang.py',238),
  ('n_math_expression_7 -> <empty>','n_math_expression_7',0,'p_n_math_expression_7','lang.py',243),
  ('n_math_expression_8 -> <empty>','n_math_expression_8',0,'p_n_math_expression_8','lang.py',248),
  ('n_math_expression_9 -> <empty>','n_math_expression_9',0,'p_n_math_expression_9','lang.py',253),
  ('n_math_expression_10 -> <empty>','n_math_expression_10',0,'p_n_math_expression_10','lang.py',266),
  ('n_math_expression_11 -> <empty>','n_math_expression_11',0,'p_n_math_expression_11','lang.py',272),
  ('n_math_expression_12 -> <empty>','n_math_expression_12',0,'p_n_math_expression_12','lang.py',278),
  ('empty -> <empty>','empty',0,'p_empty','lang.py',292),
  ('program -> program_aux codeblock','program',2,'p_program','lang.py',298),
  ('program_aux -> IDK','program_aux',1,'p_program_aux','lang.py',304),
  ('program_aux -> OWO','program_aux',1,'p_program_aux','lang.py',305),
  ('type -> INT_TYPE n_seen_type','type',2,'p_type','lang.py',311),
  ('type -> STRING_TYPE n_seen_type','type',2,'p_type','lang.py',312),
  ('type -> DOUBLE_TYPE n_seen_type','type',2,'p_type','lang.py',313),
  ('type -> FLOAT_TYPE n_seen_type','type',2,'p_type','lang.py',314),
  ('type -> BOOL_TYPE n_seen_type','type',2,'p_type','lang.py',315),
  ('relational_operator -> GREATERTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',321),
  ('relational_operator -> LESSTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',322),
  ('relational_operator -> EQUALEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',323),
  ('relational_operator -> LESSTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',324),
  ('relational_operator -> GREATERTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',325),
  ('relational_operator -> NOTEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','lang.py',326),
  ('literal -> FLOAT n_math_expression_1_float','literal',2,'p_literal','lang.py',351),
  ('literal -> INT n_math_expression_1_int','literal',2,'p_literal','lang.py',352),
  ('literal -> STRING n_math_expression_1_string','literal',2,'p_literal','lang.py',353),
  ('function_type -> type','function_type',1,'p_function_type','lang.py',359),
  ('function_type -> VOID','function_type',1,'p_function_type','lang.py',360),
  ('function_definition -> FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope','function_definition',10,'p_function_definition','lang.py',366),
  ('function_call -> NAME LPARENTHESIS parameter_list RPARENTHESIS','function_call',4,'p_function_call','lang.py',372),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','lang.py',378),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lang.py',379),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lang.py',380),
  ('parameter -> type NAME n_name','parameter',3,'p_parameter','lang.py',386),
  ('parameter -> assign','parameter',1,'p_parameter','lang.py',387),
  ('expression -> expression_or','expression',1,'p_expression','lang.py',395),
  ('expression -> expression_or AND n_math_expression_10 expression n_math_expression_11','expression',5,'p_expression','lang.py',396),
  ('expression_or -> expression_rel','expression_or',1,'p_expression_or','lang.py',404),
  ('expression_or -> expression_rel OR n_math_expression_10 expression_or n_math_expression_12','expression_or',5,'p_expression_or','lang.py',405),
  ('expression_rel -> exp','expression_rel',1,'p_expression_rel','lang.py',413),
  ('expression_rel -> exp relational_operator exp n_math_expression_9','expression_rel',4,'p_expression_rel','lang.py',414),
  ('exp -> termino n_math_expression_4','exp',2,'p_exp','lang.py',422),
  ('exp -> termino n_math_expression_4 PLUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',423),
  ('exp -> termino n_math_expression_4 MINUS n_math_expression_2 exp','exp',5,'p_exp','lang.py',424),
  ('termino -> factor n_math_expression_5','termino',2,'p_termino','lang.py',430),
  ('termino -> factor n_math_expression_5 TIMES n_math_expression_3 termino','termino',5,'p_termino','lang.py',431),
  ('termino -> factor n_math_expression_5 DIVIDE n_math_expression_3 termino','termino',5,'p_termino','lang.py',432),
  ('termino -> factor n_math_expression_5 MODULUS n_math_expression_3 termino','termino',5,'p_termino','lang.py',433),
  ('factor -> LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7','factor',5,'p_factor','lang.py',439),
  ('factor -> PLUS value','factor',2,'p_factor','lang.py',440),
  ('factor -> MINUS value','factor',2,'p_factor','lang.py',441),
  ('factor -> value','factor',1,'p_factor','lang.py',442),
  ('value -> function_call','value',1,'p_value','lang.py',449),
  ('value -> literal','value',1,'p_value','lang.py',450),
  ('value -> NAME n_math_expression_1_name','value',2,'p_value','lang.py',451),
  ('assign -> type NAME n_name EQUAL expression','assign',5,'p_assign','lang.py',457),
  ('assign -> NAME n_name EQUAL expression','assign',4,'p_assign','lang.py',458),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','lang.py',464),
  ('statement_aux -> assign','statement_aux',1,'p_statement_aux','lang.py',470),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','lang.py',471),
  ('codeblock -> empty','codeblock',1,'p_codeblock','lang.py',478),
  ('codeblock -> codeblock_aux codeblock','codeblock',2,'p_codeblock','lang.py',479),
  ('codeblock_aux -> statement','codeblock_aux',1,'p_codeblock_aux','lang.py',485),
  ('codeblock_aux -> function_definition','codeblock_aux',1,'p_codeblock_aux','lang.py',486),
  ('codeblock_aux -> condition_if','codeblock_aux',1,'p_codeblock_aux','lang.py',487),
  ('codeblock_aux -> loop','codeblock_aux',1,'p_codeblock_aux','lang.py',488),
  ('loop -> forloop','loop',1,'p_loop','lang.py',494),
  ('loop -> whileloop','loop',1,'p_loop','lang.py',495),
  ('whileloop -> WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope','whileloop',9,'p_whileloop','lang.py',501),
  ('forloop -> FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope','forloop',13,'p_forloop','lang.py',507),
  ('condition_if -> IF LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope condition_else','condition_if',10,'p_condition_if','lang.py',513),
  ('condition_else -> ELSE LCURLY n_open_new_scope codeblock RCURLY n_close_scope','condition_else',6,'p_condition_else','lang.py',519),
  ('condition_else -> empty','condition_else',1,'p_condition_else','lang.py',520),
]
