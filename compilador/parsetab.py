
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programBOOL_TYPE COMMA DIVIDE DOT DOUBLEDOT DOUBLE_TYPE ELSE EQUAL EQUALEQUAL FLOAT FLOAT_TYPE FOR FUNCTION GREATERTHAN GREATERTHANOREQUAL IDK IF INT INT_TYPE LBRACKET LCURLY LESSTHAN LESSTHANOREQUAL LPARENTHESIS MINUS MODULUS NAME NOTEQUAL OWO PLUS RBRACKET RCURLY RPARENTHESIS SEMICOLON STRING STRING_TYPE TIMES VOID WHILEn_seen_type : n_open_new_scope : n_close_scope : \n    empty :\n    \n    program : program_aux codeblock\n    \n    program_aux : IDK\n    | OWO\n    \n    type : INT_TYPE n_seen_type\n    | STRING_TYPE n_seen_type\n    | DOUBLE_TYPE n_seen_type\n    | FLOAT_TYPE n_seen_type\n    | BOOL_TYPE n_seen_type\n    \n    logic_operator : GREATERTHAN\n    | LESSTHAN\n    | EQUALEQUAL\n    | LESSTHANOREQUAL\n    | GREATERTHANOREQUAL\n    | NOTEQUAL\n    \n    arithmetic_operator : PLUS\n    | MINUS\n    | TIMES\n    | DIVIDE\n    | MODULUS\n    \n    literal : FLOAT\n    | INT\n    | STRING\n    \n    function_type : type\n    | VOID\n    \n    function_definition : FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope\n    \n    function_call : NAME LPARENTHESIS parameter_list RPARENTHESIS\n    \n    parameter_list : empty\n    | parameter\n    | parameter COMMA parameter_list\n    \n    parameter : type NAME n_name_assign\n    | assign\n    \n    expression : exp\n    | exp logic_operator exp\n    \n    exp : termino\n    | termino PLUS exp\n    | termino MINUS exp\n    \n    termino : factor\n    | factor TIMES termino\n    | factor DIVIDE termino\n    \n    factor : LPARENTHESIS expression RPARENTHESIS\n    | PLUS value\n    | MINUS value\n    | value\n    \n    value : function_call\n    | literal\n    | NAME\n    \n    assign : type NAME n_name_assign EQUAL expression\n    | NAME n_name_assign EQUAL expression\n    n_name_assign : \n    statement : statement_aux SEMICOLON\n    \n    statement_aux : assign\n    | function_call\n    \n    codeblock : empty\n    | codeblock_aux codeblock\n    \n    codeblock_aux : statement\n    | function_definition\n    | condition_if\n    | loop\n    \n    loop : forloop\n    | whileloop\n    \n    whileloop : WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    \n    forloop : FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope\n    \n    condition_if : IF LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope condition_else\n    \n    condition_else : ELSE LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    | empty\n    '
    
_lr_action_items = {'IDK':([0,],[3,]),'OWO':([0,],[4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,16,17,28,29,114,116,117,118,120,121,122,124,129,131,132,133,],[0,-4,-6,-7,-5,-57,-4,-59,-60,-61,-62,-63,-64,-58,-54,-3,-3,-3,-4,-65,-29,-67,-69,-3,-66,-3,-68,]),'FUNCTION':([2,3,4,7,8,9,10,11,16,17,29,94,101,106,108,109,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[13,-6,-7,13,-59,-60,-61,-62,-63,-64,-54,-2,-2,13,13,13,-3,-3,-3,-4,-65,-29,-67,-69,13,-2,13,-3,-66,-3,-68,]),'IF':([2,3,4,7,8,9,10,11,16,17,29,94,101,106,108,109,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[15,-6,-7,15,-59,-60,-61,-62,-63,-64,-54,-2,-2,15,15,15,-3,-3,-3,-4,-65,-29,-67,-69,15,-2,15,-3,-66,-3,-68,]),'FOR':([2,3,4,7,8,9,10,11,16,17,29,94,101,106,108,109,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[20,-6,-7,20,-59,-60,-61,-62,-63,-64,-54,-2,-2,20,20,20,-3,-3,-3,-4,-65,-29,-67,-69,20,-2,20,-3,-66,-3,-68,]),'WHILE':([2,3,4,7,8,9,10,11,16,17,29,94,101,106,108,109,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[21,-6,-7,21,-59,-60,-61,-62,-63,-64,-54,-2,-2,21,21,21,-3,-3,-3,-4,-65,-29,-67,-69,21,-2,21,-3,-66,-3,-68,]),'NAME':([2,3,4,7,8,9,10,11,13,16,17,22,23,24,25,26,27,29,30,32,33,34,35,37,38,39,40,41,42,43,48,50,54,55,64,70,74,75,76,77,78,79,80,81,82,85,86,89,94,100,101,106,108,109,111,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[14,-6,-7,14,-59,-60,-61,-62,30,-63,-64,36,-1,-1,-1,-1,-1,-54,-2,44,60,-2,60,-8,-9,-10,-11,-12,44,60,71,60,60,60,44,44,60,-13,-14,-15,-16,-17,-18,60,60,60,60,60,-2,60,-2,14,14,14,44,-3,-3,-3,-4,-65,-29,-67,-69,14,-2,14,-3,-66,-3,-68,]),'INT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,64,70,90,94,101,106,108,109,111,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[23,-6,-7,23,-59,-60,-61,-62,-63,-64,-54,-2,23,-2,23,23,23,23,-2,-2,23,23,23,23,-3,-3,-3,-4,-65,-29,-67,-69,23,-2,23,-3,-66,-3,-68,]),'STRING_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,64,70,90,94,101,106,108,109,111,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[24,-6,-7,24,-59,-60,-61,-62,-63,-64,-54,-2,24,-2,24,24,24,24,-2,-2,24,24,24,24,-3,-3,-3,-4,-65,-29,-67,-69,24,-2,24,-3,-66,-3,-68,]),'DOUBLE_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,64,70,90,94,101,106,108,109,111,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[25,-6,-7,25,-59,-60,-61,-62,-63,-64,-54,-2,25,-2,25,25,25,25,-2,-2,25,25,25,25,-3,-3,-3,-4,-65,-29,-67,-69,25,-2,25,-3,-66,-3,-68,]),'FLOAT_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,64,70,90,94,101,106,108,109,111,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[26,-6,-7,26,-59,-60,-61,-62,-63,-64,-54,-2,26,-2,26,26,26,26,-2,-2,26,26,26,26,-3,-3,-3,-4,-65,-29,-67,-69,26,-2,26,-3,-66,-3,-68,]),'BOOL_TYPE':([2,3,4,7,8,9,10,11,16,17,29,30,32,34,42,64,70,90,94,101,106,108,109,111,114,116,117,118,120,121,122,124,125,126,128,129,131,132,133,],[27,-6,-7,27,-59,-60,-61,-62,-63,-64,-54,-2,27,-2,27,27,27,27,-2,-2,27,27,27,27,-3,-3,-3,-4,-65,-29,-67,-69,27,-2,27,-3,-66,-3,-68,]),'RCURLY':([6,7,8,9,10,11,16,17,28,29,94,101,106,108,109,110,112,113,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,],[-57,-4,-59,-60,-61,-62,-63,-64,-58,-54,-2,-2,-4,-4,-4,114,116,117,-3,-3,-3,-4,-65,-29,-67,-69,-4,-2,129,-4,-3,132,-66,-3,-68,]),'SEMICOLON':([12,18,19,52,53,56,57,58,59,60,61,62,63,68,69,83,84,93,95,96,97,98,99,102,],[29,-55,-56,-36,-38,-41,-47,-48,-49,-50,-24,-25,-26,-52,-30,-45,-46,-44,-37,-39,-40,-42,-43,-51,]),'LPARENTHESIS':([14,15,20,21,33,35,43,50,60,74,75,76,77,78,79,80,81,82,85,86,89,100,],[32,33,34,35,50,50,50,50,32,50,-13,-14,-15,-16,-17,-18,50,50,50,50,50,50,]),'EQUAL':([14,31,36,44,66,71,92,],[-53,43,-53,-53,89,-53,89,]),'LCURLY':([23,24,25,26,27,37,38,39,40,41,73,88,103,104,105,119,123,],[-1,-1,-1,-1,-1,-8,-9,-10,-11,-12,94,101,109,-27,-28,125,126,]),'DOUBLEDOT':([30,42,46,47,49,52,53,56,57,58,59,60,61,62,63,67,68,69,70,71,83,84,87,91,92,93,95,96,97,98,99,102,107,],[-2,-4,-31,-32,-35,-36,-38,-41,-47,-48,-49,-50,-24,-25,-26,90,-52,-30,-4,-53,-45,-46,100,-33,-34,-44,-37,-39,-40,-42,-43,-51,111,]),'RPARENTHESIS':([32,45,46,47,49,51,52,53,56,57,58,59,60,61,62,63,65,68,69,70,71,72,83,84,91,92,93,95,96,97,98,99,102,115,],[-4,69,-31,-32,-35,73,-36,-38,-41,-47,-48,-49,-50,-24,-25,-26,88,-52,-30,-4,-53,93,-45,-46,-33,-34,-44,-37,-39,-40,-42,-43,-51,119,]),'PLUS':([33,35,43,50,53,56,57,58,59,60,61,62,63,69,74,75,76,77,78,79,80,81,82,83,84,85,86,89,93,98,99,100,],[54,54,54,54,81,-41,-47,-48,-49,-50,-24,-25,-26,-30,54,-13,-14,-15,-16,-17,-18,54,54,-45,-46,54,54,54,-44,-42,-43,54,]),'MINUS':([33,35,43,50,53,56,57,58,59,60,61,62,63,69,74,75,76,77,78,79,80,81,82,83,84,85,86,89,93,98,99,100,],[55,55,55,55,82,-41,-47,-48,-49,-50,-24,-25,-26,-30,55,-13,-14,-15,-16,-17,-18,55,55,-45,-46,55,55,55,-44,-42,-43,55,]),'FLOAT':([33,35,43,50,54,55,74,75,76,77,78,79,80,81,82,85,86,89,100,],[61,61,61,61,61,61,61,-13,-14,-15,-16,-17,-18,61,61,61,61,61,61,]),'INT':([33,35,43,50,54,55,74,75,76,77,78,79,80,81,82,85,86,89,100,],[62,62,62,62,62,62,62,-13,-14,-15,-16,-17,-18,62,62,62,62,62,62,]),'STRING':([33,35,43,50,54,55,74,75,76,77,78,79,80,81,82,85,86,89,100,],[63,63,63,63,63,63,63,-13,-14,-15,-16,-17,-18,63,63,63,63,63,63,]),'COMMA':([47,49,52,53,56,57,58,59,60,61,62,63,68,69,71,83,84,92,93,95,96,97,98,99,102,],[70,-35,-36,-38,-41,-47,-48,-49,-50,-24,-25,-26,-52,-30,-53,-45,-46,-34,-44,-37,-39,-40,-42,-43,-51,]),'GREATERTHAN':([52,53,56,57,58,59,60,61,62,63,69,83,84,93,96,97,98,99,],[75,-38,-41,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,-39,-40,-42,-43,]),'LESSTHAN':([52,53,56,57,58,59,60,61,62,63,69,83,84,93,96,97,98,99,],[76,-38,-41,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,-39,-40,-42,-43,]),'EQUALEQUAL':([52,53,56,57,58,59,60,61,62,63,69,83,84,93,96,97,98,99,],[77,-38,-41,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,-39,-40,-42,-43,]),'LESSTHANOREQUAL':([52,53,56,57,58,59,60,61,62,63,69,83,84,93,96,97,98,99,],[78,-38,-41,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,-39,-40,-42,-43,]),'GREATERTHANOREQUAL':([52,53,56,57,58,59,60,61,62,63,69,83,84,93,96,97,98,99,],[79,-38,-41,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,-39,-40,-42,-43,]),'NOTEQUAL':([52,53,56,57,58,59,60,61,62,63,69,83,84,93,96,97,98,99,],[80,-38,-41,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,-39,-40,-42,-43,]),'TIMES':([56,57,58,59,60,61,62,63,69,83,84,93,],[85,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,]),'DIVIDE':([56,57,58,59,60,61,62,63,69,83,84,93,],[86,-47,-48,-49,-50,-24,-25,-26,-30,-45,-46,-44,]),'VOID':([90,],[105,]),'ELSE':([114,118,],[-3,123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'codeblock':([2,7,106,108,109,125,128,],[5,28,110,112,113,127,130,]),'empty':([2,7,32,42,70,106,108,109,118,125,128,],[6,6,46,46,46,6,6,6,124,6,6,]),'codeblock_aux':([2,7,106,108,109,125,128,],[7,7,7,7,7,7,7,]),'statement':([2,7,106,108,109,125,128,],[8,8,8,8,8,8,8,]),'function_definition':([2,7,106,108,109,125,128,],[9,9,9,9,9,9,9,]),'condition_if':([2,7,106,108,109,125,128,],[10,10,10,10,10,10,10,]),'loop':([2,7,106,108,109,125,128,],[11,11,11,11,11,11,11,]),'statement_aux':([2,7,106,108,109,125,128,],[12,12,12,12,12,12,12,]),'forloop':([2,7,106,108,109,125,128,],[16,16,16,16,16,16,16,]),'whileloop':([2,7,106,108,109,125,128,],[17,17,17,17,17,17,17,]),'assign':([2,7,32,42,64,70,106,108,109,111,125,128,],[18,18,49,49,87,49,18,18,18,115,18,18,]),'function_call':([2,7,33,35,43,50,54,55,74,81,82,85,86,89,100,106,108,109,125,128,],[19,19,58,58,58,58,58,58,58,58,58,58,58,58,58,19,19,19,19,19,]),'type':([2,7,32,42,64,70,90,106,108,109,111,125,128,],[22,22,48,48,22,48,104,22,22,22,22,22,22,]),'n_name_assign':([14,36,44,71,],[31,66,31,92,]),'n_seen_type':([23,24,25,26,27,],[37,38,39,40,41,]),'n_open_new_scope':([30,34,94,101,126,],[42,64,106,108,128,]),'parameter_list':([32,42,70,],[45,67,91,]),'parameter':([32,42,70,],[47,47,47,]),'expression':([33,35,43,50,89,100,],[51,65,68,72,102,107,]),'exp':([33,35,43,50,74,81,82,89,100,],[52,52,52,52,95,96,97,52,52,]),'termino':([33,35,43,50,74,81,82,85,86,89,100,],[53,53,53,53,53,53,53,98,99,53,53,]),'factor':([33,35,43,50,74,81,82,85,86,89,100,],[56,56,56,56,56,56,56,56,56,56,56,]),'value':([33,35,43,50,54,55,74,81,82,85,86,89,100,],[57,57,57,57,83,84,57,57,57,57,57,57,57,]),'literal':([33,35,43,50,54,55,74,81,82,85,86,89,100,],[59,59,59,59,59,59,59,59,59,59,59,59,59,]),'logic_operator':([52,],[74,]),'function_type':([90,],[103,]),'n_close_scope':([114,116,117,129,132,],[118,120,121,131,133,]),'condition_else':([118,],[122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','lang.py',106),
  ('n_open_new_scope -> <empty>','n_open_new_scope',0,'p_n_open_new_scope','lang.py',112),
  ('n_close_scope -> <empty>','n_close_scope',0,'p_n_close_scope','lang.py',120),
  ('empty -> <empty>','empty',0,'p_empty','lang.py',133),
  ('program -> program_aux codeblock','program',2,'p_program','lang.py',139),
  ('program_aux -> IDK','program_aux',1,'p_program_aux','lang.py',145),
  ('program_aux -> OWO','program_aux',1,'p_program_aux','lang.py',146),
  ('type -> INT_TYPE n_seen_type','type',2,'p_type','lang.py',152),
  ('type -> STRING_TYPE n_seen_type','type',2,'p_type','lang.py',153),
  ('type -> DOUBLE_TYPE n_seen_type','type',2,'p_type','lang.py',154),
  ('type -> FLOAT_TYPE n_seen_type','type',2,'p_type','lang.py',155),
  ('type -> BOOL_TYPE n_seen_type','type',2,'p_type','lang.py',156),
  ('logic_operator -> GREATERTHAN','logic_operator',1,'p_logic_operator','lang.py',162),
  ('logic_operator -> LESSTHAN','logic_operator',1,'p_logic_operator','lang.py',163),
  ('logic_operator -> EQUALEQUAL','logic_operator',1,'p_logic_operator','lang.py',164),
  ('logic_operator -> LESSTHANOREQUAL','logic_operator',1,'p_logic_operator','lang.py',165),
  ('logic_operator -> GREATERTHANOREQUAL','logic_operator',1,'p_logic_operator','lang.py',166),
  ('logic_operator -> NOTEQUAL','logic_operator',1,'p_logic_operator','lang.py',167),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','lang.py',184),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','lang.py',185),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','lang.py',186),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','lang.py',187),
  ('arithmetic_operator -> MODULUS','arithmetic_operator',1,'p_arithmetic_operator','lang.py',188),
  ('literal -> FLOAT','literal',1,'p_literal','lang.py',194),
  ('literal -> INT','literal',1,'p_literal','lang.py',195),
  ('literal -> STRING','literal',1,'p_literal','lang.py',196),
  ('function_type -> type','function_type',1,'p_function_type','lang.py',202),
  ('function_type -> VOID','function_type',1,'p_function_type','lang.py',203),
  ('function_definition -> FUNCTION NAME n_open_new_scope parameter_list DOUBLEDOT function_type LCURLY codeblock RCURLY n_close_scope','function_definition',10,'p_function_definition','lang.py',209),
  ('function_call -> NAME LPARENTHESIS parameter_list RPARENTHESIS','function_call',4,'p_function_call','lang.py',215),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','lang.py',221),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','lang.py',222),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','lang.py',223),
  ('parameter -> type NAME n_name_assign','parameter',3,'p_parameter','lang.py',229),
  ('parameter -> assign','parameter',1,'p_parameter','lang.py',230),
  ('expression -> exp','expression',1,'p_expression','lang.py',236),
  ('expression -> exp logic_operator exp','expression',3,'p_expression','lang.py',237),
  ('exp -> termino','exp',1,'p_exp','lang.py',243),
  ('exp -> termino PLUS exp','exp',3,'p_exp','lang.py',244),
  ('exp -> termino MINUS exp','exp',3,'p_exp','lang.py',245),
  ('termino -> factor','termino',1,'p_termino','lang.py',251),
  ('termino -> factor TIMES termino','termino',3,'p_termino','lang.py',252),
  ('termino -> factor DIVIDE termino','termino',3,'p_termino','lang.py',253),
  ('factor -> LPARENTHESIS expression RPARENTHESIS','factor',3,'p_factor','lang.py',259),
  ('factor -> PLUS value','factor',2,'p_factor','lang.py',260),
  ('factor -> MINUS value','factor',2,'p_factor','lang.py',261),
  ('factor -> value','factor',1,'p_factor','lang.py',262),
  ('value -> function_call','value',1,'p_value','lang.py',268),
  ('value -> literal','value',1,'p_value','lang.py',269),
  ('value -> NAME','value',1,'p_value','lang.py',270),
  ('assign -> type NAME n_name_assign EQUAL expression','assign',5,'p_assign','lang.py',276),
  ('assign -> NAME n_name_assign EQUAL expression','assign',4,'p_assign','lang.py',277),
  ('n_name_assign -> <empty>','n_name_assign',0,'p_n_name_assign','lang.py',282),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','lang.py',288),
  ('statement_aux -> assign','statement_aux',1,'p_statement_aux','lang.py',294),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','lang.py',295),
  ('codeblock -> empty','codeblock',1,'p_codeblock','lang.py',302),
  ('codeblock -> codeblock_aux codeblock','codeblock',2,'p_codeblock','lang.py',303),
  ('codeblock_aux -> statement','codeblock_aux',1,'p_codeblock_aux','lang.py',309),
  ('codeblock_aux -> function_definition','codeblock_aux',1,'p_codeblock_aux','lang.py',310),
  ('codeblock_aux -> condition_if','codeblock_aux',1,'p_codeblock_aux','lang.py',311),
  ('codeblock_aux -> loop','codeblock_aux',1,'p_codeblock_aux','lang.py',312),
  ('loop -> forloop','loop',1,'p_loop','lang.py',318),
  ('loop -> whileloop','loop',1,'p_loop','lang.py',319),
  ('whileloop -> WHILE LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope','whileloop',9,'p_whileloop','lang.py',325),
  ('forloop -> FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope','forloop',13,'p_forloop','lang.py',331),
  ('condition_if -> IF LPARENTHESIS expression RPARENTHESIS LCURLY n_open_new_scope codeblock RCURLY n_close_scope condition_else','condition_if',10,'p_condition_if','lang.py',337),
  ('condition_else -> ELSE LCURLY n_open_new_scope codeblock RCURLY n_close_scope','condition_else',6,'p_condition_else','lang.py',343),
  ('condition_else -> empty','condition_else',1,'p_condition_else','lang.py',344),
]
