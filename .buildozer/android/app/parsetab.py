
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND BOOL_TYPE COMMA DIVIDE DOT DOUBLEDOT DOUBLE_TYPE ELSE EQUAL EQUALEQUAL FALSE FLOAT FLOAT_TYPE FOR FUNCTION GREATERTHAN GREATERTHANOREQUAL IDK IF INPUTFLOAT INPUTINT INPUTSTRING INT INT_TYPE LBRACKET LCURLY LESSTHAN LESSTHANOREQUAL LPARENTHESIS MINUS MODULUS NAME NOT NOTEQUAL OR OWO PLUS PRINT RBRACKET RCURLY RETURN RPARENTHESIS SEMICOLON STRING STRING_TYPE TIMES TRUE VOID WHILEn_seen_type : n_open_new_scope : n_open_new_scope_function : n_close_scope : n_variable_reference : n_variable_instantiate : n_variable_instantiate_param : n_math_expression_1_int : n_math_expression_1_float : n_math_expression_1_string : n_math_expression_1_bool : n_math_expression_1_name : n_math_expression_2 : n_math_expression_3 : n_math_expression_4 : n_math_expression_5 : n_math_expression_6 : n_math_expression_7 : n_math_expression_8 : n_math_expression_9 : n_math_expression_10 : n_math_expression_11 : n_math_expression_12 : n_two_way_conditional_1 : n_two_way_conditional_2 : n_two_way_conditional_3 : p_n_pre_condition_loop_1 : p_n_pre_condition_loop_2 : p_n_pre_condition_loop_3 : n_seen_equal_op : n_before_function_definition : n_function_block_start : n_function_block_end : n_function_type : n_function_call_1 : n_function_call_2 : n_function_call_3 : n_function_call_4 : n_function_call_5 : n_function_call_6 : n_return : n_return_void : n_print : n_end : \n    empty :\n    \n    program : program_aux codeblock n_end\n    \n    program_aux : IDK\n    | OWO\n    \n    type : INT_TYPE n_seen_type\n    | STRING_TYPE n_seen_type\n    | DOUBLE_TYPE n_seen_type\n    | FLOAT_TYPE n_seen_type\n    | BOOL_TYPE n_seen_type\n    \n    relational_operator : GREATERTHAN n_math_expression_8\n    | LESSTHAN n_math_expression_8\n    | EQUALEQUAL n_math_expression_8\n    | LESSTHANOREQUAL n_math_expression_8\n    | GREATERTHANOREQUAL n_math_expression_8\n    | NOTEQUAL n_math_expression_8\n    \n    literal : FLOAT n_math_expression_1_float\n    | INT n_math_expression_1_int\n    | STRING n_math_expression_1_string\n    | TRUE n_math_expression_1_bool\n    | FALSE n_math_expression_1_bool\n    \n    function_type : VOID n_function_type\n    | INT_TYPE n_function_type\n    | STRING_TYPE n_function_type\n    | DOUBLE_TYPE n_function_type\n    | FLOAT_TYPE n_function_type\n    | BOOL_TYPE n_function_type\n    \n    function_definition : n_before_function_definition FUNCTION NAME n_open_new_scope_function parameter_list DOUBLEDOT function_type LCURLY n_function_block_start codeblock return RCURLY n_close_scope n_function_block_end\n    \n    return : RETURN expression n_return SEMICOLON\n    | RETURN n_return_void SEMICOLON\n    | empty\n    \n    function_call : NAME n_function_call_1                   LPARENTHESIS n_function_call_2 arg_list RPARENTHESIS                   n_function_call_5 n_function_call_6\n                  | NAME n_function_call_1                   LPARENTHESIS RPARENTHESIS                   n_function_call_6\n    \n    arg_list : arg\n    | arg COMMA n_function_call_4 arg_list\n    \n    parameter_list : empty\n    | parameter\n    | parameter COMMA parameter_list\n    \n    arg : expression n_function_call_3\n    \n    parameter : type NAME n_variable_instantiate_param\n    \n    expression : expression_or\n    | expression_or AND n_math_expression_10 expression n_math_expression_11\n    \n    expression_or : expression_rel\n    | expression_rel OR n_math_expression_10 expression_or n_math_expression_12\n    \n    expression_rel : exp\n    | exp relational_operator exp n_math_expression_9\n    \n    exp : termino n_math_expression_4\n    | termino n_math_expression_4 PLUS n_math_expression_2 exp\n    | termino n_math_expression_4 MINUS n_math_expression_2 exp\n    \n    termino : factor n_math_expression_5\n    | factor n_math_expression_5 TIMES n_math_expression_3 termino\n    | factor n_math_expression_5 DIVIDE n_math_expression_3 termino\n    | factor n_math_expression_5 MODULUS n_math_expression_3 termino\n    \n    factor : LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7\n    | PLUS value\n    | MINUS value\n    | value\n    n_input_string : n_input_int : n_input_float : \n    input : INPUTSTRING LPARENTHESIS RPARENTHESIS n_input_string\n    | INPUTINT LPARENTHESIS RPARENTHESIS n_input_int\n    | INPUTFLOAT LPARENTHESIS RPARENTHESIS n_input_float\n    \n    value : function_call\n    | literal\n    | NAME n_variable_reference n_math_expression_1_name\n    | input\n    \n    declare : type NAME n_variable_instantiate\n    \n    assign : type NAME n_variable_instantiate n_math_expression_1_name EQUAL n_seen_equal_op expression\n    | NAME n_variable_reference n_math_expression_1_name EQUAL n_seen_equal_op expression\n    \n    print : PRINT LPARENTHESIS expression n_print RPARENTHESIS\n    \n    statement : statement_aux SEMICOLON\n    \n    statement_aux : assign\n    | declare\n    | function_call\n    | print\n    \n    function_codeblock : codeblock\n    | return\n    \n    codeblock : empty\n    | codeblock_aux codeblock\n    | return\n    \n    codeblock_aux : statement\n    | function_definition\n    | condition_if\n    | loop\n    \n    loop : forloop\n    | whileloop\n    \n    whileloop : WHILE p_n_pre_condition_loop_1 LPARENTHESIS expression RPARENTHESIS p_n_pre_condition_loop_2 LCURLY n_open_new_scope codeblock RCURLY p_n_pre_condition_loop_3 n_close_scope\n    \n    forloop : FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope\n    \n    condition_if : IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2\n    \n    condition_else : ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope\n    | empty\n    '
    
_lr_action_items = {'IDK':([0,],[3,]),'OWO':([0,],[4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,18,19,33,34,58,73,105,211,215,217,220,222,224,225,226,228,229,230,232,233,236,237,],[0,-45,-47,-48,-44,-74,-45,-124,-125,-126,-127,-128,-129,-130,-46,-123,-115,-73,-72,-4,-45,-29,-25,-135,-4,-4,-133,-4,-131,-33,-132,-71,-4,-134,]),'RETURN':([2,3,4,6,7,8,9,10,11,12,18,19,34,58,73,105,157,178,194,196,198,209,210,211,214,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[13,-47,-48,-74,13,-124,-125,-126,-127,-128,-129,-130,-123,-115,-73,-72,-24,-2,13,-2,-32,13,13,-4,13,-45,13,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,13,-4,-134,]),'IF':([2,3,4,7,9,10,11,12,18,19,58,157,178,194,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[17,-47,-48,17,-125,-126,-127,-128,-129,-130,-115,-24,-2,17,-2,-32,17,17,-4,-45,17,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,17,-4,-134,]),'FUNCTION':([2,3,4,7,9,10,11,12,15,18,19,58,157,178,194,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[-31,-47,-48,-31,-125,-126,-127,-128,59,-129,-130,-115,-24,-2,-31,-2,-32,-31,-31,-4,-45,-31,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,-31,-4,-134,]),'FOR':([2,3,4,7,9,10,11,12,18,19,58,157,178,194,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[24,-47,-48,24,-125,-126,-127,-128,-129,-130,-115,-24,-2,24,-2,-32,24,24,-4,-45,24,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,24,-4,-134,]),'WHILE':([2,3,4,7,9,10,11,12,18,19,58,157,178,194,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[25,-47,-48,25,-125,-126,-127,-128,-129,-130,-115,-24,-2,25,-2,-32,25,25,-4,-45,25,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,25,-4,-134,]),'NAME':([2,3,4,7,9,10,11,12,13,18,19,26,28,29,30,31,32,41,42,44,58,59,62,63,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,87,99,101,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,131,139,140,141,142,143,151,152,157,158,161,176,178,182,193,194,195,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[16,-47,-48,16,-125,-126,-127,-128,48,-129,-130,65,-1,-1,-1,-1,-1,48,48,-17,-115,97,48,-2,48,-49,-50,-51,-52,-53,-21,-21,48,-19,-19,-19,-19,-19,-19,48,-36,132,48,48,48,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,48,159,48,48,48,48,48,173,48,-24,48,-30,-38,-2,48,48,16,132,-2,-32,16,16,-4,-45,16,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,16,-4,-134,]),'PRINT':([2,3,4,7,9,10,11,12,18,19,58,157,178,194,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[27,-47,-48,27,-125,-126,-127,-128,-129,-130,-115,-24,-2,27,-2,-32,27,27,-4,-45,27,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,27,-4,-134,]),'INT_TYPE':([2,3,4,7,9,10,11,12,18,19,58,63,97,101,125,157,171,172,178,194,195,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[28,-47,-48,28,-125,-126,-127,-128,-129,-130,-115,-2,-3,28,28,-24,185,28,-2,28,28,-2,-32,28,28,-4,-45,28,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,28,-4,-134,]),'STRING_TYPE':([2,3,4,7,9,10,11,12,18,19,58,63,97,101,125,157,171,172,178,194,195,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[29,-47,-48,29,-125,-126,-127,-128,-129,-130,-115,-2,-3,29,29,-24,186,29,-2,29,29,-2,-32,29,29,-4,-45,29,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,29,-4,-134,]),'DOUBLE_TYPE':([2,3,4,7,9,10,11,12,18,19,58,63,97,101,125,157,171,172,178,194,195,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[30,-47,-48,30,-125,-126,-127,-128,-129,-130,-115,-2,-3,30,30,-24,187,30,-2,30,30,-2,-32,30,30,-4,-45,30,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,30,-4,-134,]),'FLOAT_TYPE':([2,3,4,7,9,10,11,12,18,19,58,63,97,101,125,157,171,172,178,194,195,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[31,-47,-48,31,-125,-126,-127,-128,-129,-130,-115,-2,-3,31,31,-24,188,31,-2,31,31,-2,-32,31,31,-4,-45,31,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,31,-4,-134,]),'BOOL_TYPE':([2,3,4,7,9,10,11,12,18,19,58,63,97,101,125,157,171,172,178,194,195,196,198,209,210,211,215,216,217,220,222,224,225,226,228,229,230,231,232,233,234,236,237,],[32,-47,-48,32,-125,-126,-127,-128,-129,-130,-115,-2,-3,32,32,-24,189,32,-2,32,32,-2,-32,32,32,-4,-45,32,-29,-25,-135,-4,-4,-133,-4,-131,-33,-2,-132,-71,32,-4,-134,]),'RCURLY':([6,7,8,9,10,11,12,18,19,34,58,73,105,157,178,194,196,198,207,209,210,211,213,214,215,216,217,218,219,220,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,],[-74,-45,-124,-125,-126,-127,-128,-129,-130,-123,-115,-73,-72,-24,-2,-45,-2,-32,211,-45,-45,-4,217,-45,-45,-45,-29,225,-74,-25,-135,228,-4,-4,-133,-4,-131,-33,-2,-132,-71,-45,236,-4,-134,]),'SEMICOLON':([13,14,20,21,22,23,35,36,37,38,39,40,43,45,46,47,48,49,50,51,52,53,54,65,72,83,84,85,86,88,89,90,91,92,93,103,108,121,122,123,124,128,136,137,138,144,145,146,147,156,162,163,164,165,166,167,168,169,170,174,175,192,197,205,],[-42,58,-116,-117,-118,-119,-41,73,-84,-86,-88,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-6,105,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-111,-20,-109,-101,-102,-103,-40,-22,-23,-89,-18,-104,-105,-106,-76,-114,-85,-87,-91,-92,-94,-95,-96,-97,-113,-39,-40,-112,-75,]),'LPARENTHESIS':([13,16,17,24,25,27,44,48,55,56,57,61,62,64,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[44,-35,62,63,-27,66,-17,-35,94,95,96,99,44,102,44,-21,-21,44,-19,-19,-19,-19,-19,-19,44,-36,44,44,44,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,44,44,44,44,44,44,44,44,-30,-38,44,44,]),'PLUS':([13,40,43,44,45,46,47,48,49,50,51,52,53,54,62,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,126,127,128,139,140,141,142,143,144,145,146,147,152,156,158,161,167,168,169,170,175,176,182,192,193,205,],[41,-15,-16,-17,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,41,41,-21,-21,41,-19,-19,-19,-19,-19,-19,115,-98,-99,-93,41,-12,-60,-61,-62,-63,-64,-36,41,41,41,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-109,-101,-102,-103,-30,41,-40,41,41,41,41,41,-18,-104,-105,-106,41,-76,41,-30,-94,-95,-96,-97,-39,-38,41,-40,41,-75,]),'MINUS':([13,40,43,44,45,46,47,48,49,50,51,52,53,54,62,66,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,126,127,128,139,140,141,142,143,144,145,146,147,152,156,158,161,167,168,169,170,175,176,182,192,193,205,],[42,-15,-16,-17,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,42,42,-21,-21,42,-19,-19,-19,-19,-19,-19,116,-98,-99,-93,42,-12,-60,-61,-62,-63,-64,-36,42,42,42,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-109,-101,-102,-103,-30,42,-40,42,42,42,42,42,-18,-104,-105,-106,42,-76,42,-30,-94,-95,-96,-97,-39,-38,42,-40,42,-75,]),'FLOAT':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[50,50,50,-17,50,50,-21,-21,50,-19,-19,-19,-19,-19,-19,50,-36,50,50,50,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,50,50,50,50,50,50,50,50,-30,-38,50,50,]),'INT':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[51,51,51,-17,51,51,-21,-21,51,-19,-19,-19,-19,-19,-19,51,-36,51,51,51,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,51,51,51,51,51,51,51,51,-30,-38,51,51,]),'STRING':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[52,52,52,-17,52,52,-21,-21,52,-19,-19,-19,-19,-19,-19,52,-36,52,52,52,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,52,52,52,52,52,52,52,52,-30,-38,52,52,]),'TRUE':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[53,53,53,-17,53,53,-21,-21,53,-19,-19,-19,-19,-19,-19,53,-36,53,53,53,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,53,53,53,53,53,53,53,53,-30,-38,53,53,]),'FALSE':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[54,54,54,-17,54,54,-21,-21,54,-19,-19,-19,-19,-19,-19,54,-36,54,54,54,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,54,54,54,54,54,54,54,54,-30,-38,54,54,]),'INPUTSTRING':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[55,55,55,-17,55,55,-21,-21,55,-19,-19,-19,-19,-19,-19,55,-36,55,55,55,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,55,55,55,55,55,55,55,55,-30,-38,55,55,]),'INPUTINT':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[56,56,56,-17,56,56,-21,-21,56,-19,-19,-19,-19,-19,-19,56,-36,56,56,56,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,56,56,56,56,56,56,56,56,-30,-38,56,56,]),'INPUTFLOAT':([13,41,42,44,62,66,74,75,76,77,78,79,80,81,82,87,99,102,106,107,109,110,111,112,113,114,115,116,117,118,119,126,127,139,140,141,142,143,152,158,161,176,182,193,],[57,57,57,-17,57,57,-21,-21,57,-19,-19,-19,-19,-19,-19,57,-36,57,57,57,-54,-55,-56,-57,-58,-59,-13,-13,-14,-14,-14,-30,57,57,57,57,57,57,57,57,-30,-38,57,57,]),'EQUAL':([16,60,65,98,103,132,134,159,180,],[-5,-12,-6,126,-12,-5,161,-6,-12,]),'RPARENTHESIS':([37,38,39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,94,95,96,99,100,104,108,120,121,122,123,124,128,133,135,136,137,138,144,145,146,147,153,154,155,156,163,164,165,166,167,168,169,170,174,175,177,192,197,205,206,208,],[-84,-86,-88,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,122,123,124,128,129,-43,-20,144,-109,-101,-102,-103,-40,160,162,-22,-23,-89,-18,-104,-105,-106,175,-77,-37,-76,-85,-87,-91,-92,-94,-95,-96,-97,-113,-39,-82,-40,-112,-75,-78,212,]),'COMMA':([37,38,39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,108,121,122,123,124,128,136,137,138,144,145,146,147,150,154,155,156,163,164,165,166,167,168,169,170,173,175,177,191,192,205,],[-84,-86,-88,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-20,-109,-101,-102,-103,-40,-22,-23,-89,-18,-104,-105,-106,172,176,-37,-76,-85,-87,-91,-92,-94,-95,-96,-97,-7,-39,-82,-83,-40,-75,]),'DOUBLEDOT':([37,38,39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,97,108,121,122,123,124,125,128,130,136,137,138,144,145,146,147,148,149,150,156,163,164,165,166,167,168,169,170,172,173,174,175,179,190,191,192,197,205,],[-84,-86,-88,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-3,-20,-109,-101,-102,-103,-45,-40,158,-22,-23,-89,-18,-104,-105,-106,171,-79,-80,-76,-85,-87,-91,-92,-94,-95,-96,-97,-45,-7,-113,-39,195,-81,-83,-40,-112,-75,]),'AND':([37,38,39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,108,121,122,123,124,128,137,138,144,145,146,147,156,164,165,166,167,168,169,170,175,192,205,],[74,-86,-88,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-20,-109,-101,-102,-103,-40,-23,-89,-18,-104,-105,-106,-76,-87,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'OR':([38,39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,108,121,122,123,124,128,138,144,145,146,147,156,165,166,167,168,169,170,175,192,205,],[75,-88,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-20,-109,-101,-102,-103,-40,-89,-18,-104,-105,-106,-76,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'GREATERTHAN':([39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,165,166,167,168,169,170,175,192,205,],[77,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'LESSTHAN':([39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,165,166,167,168,169,170,175,192,205,],[78,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'EQUALEQUAL':([39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,165,166,167,168,169,170,175,192,205,],[79,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'LESSTHANOREQUAL':([39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,165,166,167,168,169,170,175,192,205,],[80,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'GREATERTHANOREQUAL':([39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,165,166,167,168,169,170,175,192,205,],[81,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'NOTEQUAL':([39,40,43,45,46,47,48,49,50,51,52,53,54,83,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,165,166,167,168,169,170,175,192,205,],[82,-15,-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-90,-98,-99,-93,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-91,-92,-94,-95,-96,-97,-39,-40,-75,]),'TIMES':([43,45,46,47,48,49,50,51,52,53,54,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,170,175,192,205,],[-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-98,-99,117,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-97,-39,-40,-75,]),'DIVIDE':([43,45,46,47,48,49,50,51,52,53,54,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,170,175,192,205,],[-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-98,-99,118,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-97,-39,-40,-75,]),'MODULUS':([43,45,46,47,48,49,50,51,52,53,54,84,85,86,88,89,90,91,92,93,121,122,123,124,128,144,145,146,147,156,170,175,192,205,],[-16,-100,-107,-108,-5,-110,-9,-8,-10,-11,-11,-98,-99,119,-12,-60,-61,-62,-63,-64,-109,-101,-102,-103,-40,-18,-104,-105,-106,-76,-97,-39,-40,-75,]),'LCURLY':([129,160,181,183,184,185,186,187,188,189,199,200,201,202,203,204,212,221,227,],[157,-28,196,198,-34,-34,-34,-34,-34,-34,-65,-66,-67,-68,-69,-70,216,-26,231,]),'VOID':([171,],[184,]),'ELSE':([211,215,],[-4,221,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_aux':([0,],[2,]),'codeblock':([2,7,194,209,210,216,234,],[5,34,207,213,214,223,235,]),'empty':([2,7,125,172,194,209,210,214,215,216,234,],[6,6,149,149,6,6,6,219,222,6,6,]),'codeblock_aux':([2,7,194,209,210,216,234,],[7,7,7,7,7,7,7,]),'return':([2,7,194,209,210,214,216,234,],[8,8,8,8,8,218,8,8,]),'statement':([2,7,194,209,210,216,234,],[9,9,9,9,9,9,9,]),'function_definition':([2,7,194,209,210,216,234,],[10,10,10,10,10,10,10,]),'condition_if':([2,7,194,209,210,216,234,],[11,11,11,11,11,11,11,]),'loop':([2,7,194,209,210,216,234,],[12,12,12,12,12,12,12,]),'statement_aux':([2,7,194,209,210,216,234,],[14,14,14,14,14,14,14,]),'n_before_function_definition':([2,7,194,209,210,216,234,],[15,15,15,15,15,15,15,]),'forloop':([2,7,194,209,210,216,234,],[18,18,18,18,18,18,18,]),'whileloop':([2,7,194,209,210,216,234,],[19,19,19,19,19,19,19,]),'assign':([2,7,101,194,195,209,210,216,234,],[20,20,130,20,208,20,20,20,20,]),'declare':([2,7,194,209,210,216,234,],[21,21,21,21,21,21,21,]),'function_call':([2,7,13,41,42,62,66,76,87,102,106,107,127,139,140,141,142,143,152,158,182,193,194,209,210,216,234,],[22,22,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,22,22,22,22,22,]),'print':([2,7,194,209,210,216,234,],[23,23,23,23,23,23,23,]),'type':([2,7,101,125,172,194,195,209,210,216,234,],[26,26,131,151,151,26,131,26,26,26,26,]),'n_end':([5,],[33,]),'expression':([13,62,66,87,102,106,127,152,158,182,193,],[35,100,104,120,133,136,155,174,179,197,155,]),'n_return_void':([13,],[36,]),'expression_or':([13,62,66,87,102,106,107,127,152,158,182,193,],[37,37,37,37,37,37,137,37,37,37,37,37,]),'expression_rel':([13,62,66,87,102,106,107,127,152,158,182,193,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'exp':([13,62,66,76,87,102,106,107,127,139,140,152,158,182,193,],[39,39,39,108,39,39,39,39,39,165,166,39,39,39,39,]),'termino':([13,62,66,76,87,102,106,107,127,139,140,141,142,143,152,158,182,193,],[40,40,40,40,40,40,40,40,40,40,40,167,168,169,40,40,40,40,]),'factor':([13,62,66,76,87,102,106,107,127,139,140,141,142,143,152,158,182,193,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'value':([13,41,42,62,66,76,87,102,106,107,127,139,140,141,142,143,152,158,182,193,],[45,84,85,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'literal':([13,41,42,62,66,76,87,102,106,107,127,139,140,141,142,143,152,158,182,193,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'input':([13,41,42,62,66,76,87,102,106,107,127,139,140,141,142,143,152,158,182,193,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'n_variable_reference':([16,48,132,],[60,88,60,]),'n_function_call_1':([16,48,],[61,61,]),'p_n_pre_condition_loop_1':([25,],[64,]),'n_seen_type':([28,29,30,31,32,],[67,68,69,70,71,]),'n_return':([35,],[72,]),'relational_operator':([39,],[76,]),'n_math_expression_4':([40,],[83,]),'n_math_expression_5':([43,],[86,]),'n_math_expression_6':([44,],[87,]),'n_math_expression_1_float':([50,],[89,]),'n_math_expression_1_int':([51,],[90,]),'n_math_expression_1_string':([52,],[91,]),'n_math_expression_1_bool':([53,54,],[92,93,]),'n_math_expression_1_name':([60,88,103,180,],[98,121,134,134,]),'n_open_new_scope':([63,178,196,231,],[101,194,209,234,]),'n_variable_instantiate':([65,159,],[103,180,]),'n_math_expression_10':([74,75,],[106,107,]),'n_math_expression_8':([77,78,79,80,81,82,],[109,110,111,112,113,114,]),'n_open_new_scope_function':([97,],[125,]),'n_function_call_2':([99,],[127,]),'n_print':([104,],[135,]),'n_math_expression_9':([108,],[138,]),'n_math_expression_2':([115,116,],[139,140,]),'n_math_expression_3':([117,118,119,],[141,142,143,]),'n_input_string':([122,],[145,]),'n_input_int':([123,],[146,]),'n_input_float':([124,],[147,]),'parameter_list':([125,172,],[148,190,]),'parameter':([125,172,],[150,150,]),'n_seen_equal_op':([126,161,],[152,182,]),'arg_list':([127,193,],[153,206,]),'arg':([127,193,],[154,154,]),'n_function_call_6':([128,192,],[156,205,]),'n_math_expression_11':([136,],[163,]),'n_math_expression_12':([137,],[164,]),'n_math_expression_7':([144,],[170,]),'n_function_call_3':([155,],[177,]),'n_two_way_conditional_1':([157,],[178,]),'p_n_pre_condition_loop_2':([160,],[181,]),'function_type':([171,],[183,]),'n_variable_instantiate_param':([173,],[191,]),'n_function_call_5':([175,],[192,]),'n_function_call_4':([176,],[193,]),'n_function_type':([184,185,186,187,188,189,],[199,200,201,202,203,204,]),'n_function_block_start':([198,],[210,]),'n_close_scope':([211,224,225,228,236,],[215,229,230,232,237,]),'condition_else':([215,],[220,]),'p_n_pre_condition_loop_3':([217,],[224,]),'n_two_way_conditional_2':([220,],[226,]),'n_two_way_conditional_3':([221,],[227,]),'n_function_block_end':([230,],[233,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','codeinput.py',257),
  ('n_open_new_scope -> <empty>','n_open_new_scope',0,'p_n_open_new_scope','codeinput.py',264),
  ('n_open_new_scope_function -> <empty>','n_open_new_scope_function',0,'p_n_open_new_scope_function','codeinput.py',273),
  ('n_close_scope -> <empty>','n_close_scope',0,'p_n_close_scope','codeinput.py',293),
  ('n_variable_reference -> <empty>','n_variable_reference',0,'p_n_variable_reference','codeinput.py',300),
  ('n_variable_instantiate -> <empty>','n_variable_instantiate',0,'p_n_variable_instantiate','codeinput.py',316),
  ('n_variable_instantiate_param -> <empty>','n_variable_instantiate_param',0,'p_n_variable_instantiate_param','codeinput.py',324),
  ('n_math_expression_1_int -> <empty>','n_math_expression_1_int',0,'p_n_math_expression_1_int','codeinput.py',340),
  ('n_math_expression_1_float -> <empty>','n_math_expression_1_float',0,'p_n_math_expression_1_float','codeinput.py',347),
  ('n_math_expression_1_string -> <empty>','n_math_expression_1_string',0,'p_n_math_expression_1_string','codeinput.py',354),
  ('n_math_expression_1_bool -> <empty>','n_math_expression_1_bool',0,'p_n_math_expression_1_bool','codeinput.py',362),
  ('n_math_expression_1_name -> <empty>','n_math_expression_1_name',0,'p_n_math_expression_1_name','codeinput.py',368),
  ('n_math_expression_2 -> <empty>','n_math_expression_2',0,'p_n_math_expression_2','codeinput.py',379),
  ('n_math_expression_3 -> <empty>','n_math_expression_3',0,'p_n_math_expression_3','codeinput.py',384),
  ('n_math_expression_4 -> <empty>','n_math_expression_4',0,'p_n_math_expression_4','codeinput.py',389),
  ('n_math_expression_5 -> <empty>','n_math_expression_5',0,'p_n_math_expression_5','codeinput.py',396),
  ('n_math_expression_6 -> <empty>','n_math_expression_6',0,'p_n_math_expression_6','codeinput.py',403),
  ('n_math_expression_7 -> <empty>','n_math_expression_7',0,'p_n_math_expression_7','codeinput.py',408),
  ('n_math_expression_8 -> <empty>','n_math_expression_8',0,'p_n_math_expression_8','codeinput.py',413),
  ('n_math_expression_9 -> <empty>','n_math_expression_9',0,'p_n_math_expression_9','codeinput.py',418),
  ('n_math_expression_10 -> <empty>','n_math_expression_10',0,'p_n_math_expression_10','codeinput.py',434),
  ('n_math_expression_11 -> <empty>','n_math_expression_11',0,'p_n_math_expression_11','codeinput.py',440),
  ('n_math_expression_12 -> <empty>','n_math_expression_12',0,'p_n_math_expression_12','codeinput.py',448),
  ('n_two_way_conditional_1 -> <empty>','n_two_way_conditional_1',0,'p_n_two_way_conditional_1','codeinput.py',485),
  ('n_two_way_conditional_2 -> <empty>','n_two_way_conditional_2',0,'p_n_two_way_conditional_2','codeinput.py',502),
  ('n_two_way_conditional_3 -> <empty>','n_two_way_conditional_3',0,'p_n_two_way_conditional_3','codeinput.py',512),
  ('p_n_pre_condition_loop_1 -> <empty>','p_n_pre_condition_loop_1',0,'p_n_pre_condition_loop_1','codeinput.py',530),
  ('p_n_pre_condition_loop_2 -> <empty>','p_n_pre_condition_loop_2',0,'p_n_pre_condition_loop_2','codeinput.py',536),
  ('p_n_pre_condition_loop_3 -> <empty>','p_n_pre_condition_loop_3',0,'p_n_pre_condition_loop_3','codeinput.py',554),
  ('n_seen_equal_op -> <empty>','n_seen_equal_op',0,'p_n_seen_equal_op','codeinput.py',572),
  ('n_before_function_definition -> <empty>','n_before_function_definition',0,'p_n_before_function_definition','codeinput.py',601),
  ('n_function_block_start -> <empty>','n_function_block_start',0,'p_n_function_block_start','codeinput.py',610),
  ('n_function_block_end -> <empty>','n_function_block_end',0,'p_n_function_block_end','codeinput.py',615),
  ('n_function_type -> <empty>','n_function_type',0,'p_n_function_type','codeinput.py',629),
  ('n_function_call_1 -> <empty>','n_function_call_1',0,'p_n_function_call_1','codeinput.py',637),
  ('n_function_call_2 -> <empty>','n_function_call_2',0,'p_n_function_call_2','codeinput.py',659),
  ('n_function_call_3 -> <empty>','n_function_call_3',0,'p_n_function_call_3','codeinput.py',666),
  ('n_function_call_4 -> <empty>','n_function_call_4',0,'p_n_function_call_4','codeinput.py',698),
  ('n_function_call_5 -> <empty>','n_function_call_5',0,'p_n_function_call_5','codeinput.py',704),
  ('n_function_call_6 -> <empty>','n_function_call_6',0,'p_n_function_call_6','codeinput.py',723),
  ('n_return -> <empty>','n_return',0,'p_n_return','codeinput.py',764),
  ('n_return_void -> <empty>','n_return_void',0,'p_n_return_void','codeinput.py',806),
  ('n_print -> <empty>','n_print',0,'p_n_print','codeinput.py',813),
  ('n_end -> <empty>','n_end',0,'p_n_end','codeinput.py',825),
  ('empty -> <empty>','empty',0,'p_empty','codeinput.py',847),
  ('program -> program_aux codeblock n_end','program',3,'p_program','codeinput.py',853),
  ('program_aux -> IDK','program_aux',1,'p_program_aux','codeinput.py',859),
  ('program_aux -> OWO','program_aux',1,'p_program_aux','codeinput.py',860),
  ('type -> INT_TYPE n_seen_type','type',2,'p_type','codeinput.py',866),
  ('type -> STRING_TYPE n_seen_type','type',2,'p_type','codeinput.py',867),
  ('type -> DOUBLE_TYPE n_seen_type','type',2,'p_type','codeinput.py',868),
  ('type -> FLOAT_TYPE n_seen_type','type',2,'p_type','codeinput.py',869),
  ('type -> BOOL_TYPE n_seen_type','type',2,'p_type','codeinput.py',870),
  ('relational_operator -> GREATERTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','codeinput.py',876),
  ('relational_operator -> LESSTHAN n_math_expression_8','relational_operator',2,'p_relational_operator','codeinput.py',877),
  ('relational_operator -> EQUALEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','codeinput.py',878),
  ('relational_operator -> LESSTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','codeinput.py',879),
  ('relational_operator -> GREATERTHANOREQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','codeinput.py',880),
  ('relational_operator -> NOTEQUAL n_math_expression_8','relational_operator',2,'p_relational_operator','codeinput.py',881),
  ('literal -> FLOAT n_math_expression_1_float','literal',2,'p_literal','codeinput.py',887),
  ('literal -> INT n_math_expression_1_int','literal',2,'p_literal','codeinput.py',888),
  ('literal -> STRING n_math_expression_1_string','literal',2,'p_literal','codeinput.py',889),
  ('literal -> TRUE n_math_expression_1_bool','literal',2,'p_literal','codeinput.py',890),
  ('literal -> FALSE n_math_expression_1_bool','literal',2,'p_literal','codeinput.py',891),
  ('function_type -> VOID n_function_type','function_type',2,'p_function_type','codeinput.py',897),
  ('function_type -> INT_TYPE n_function_type','function_type',2,'p_function_type','codeinput.py',898),
  ('function_type -> STRING_TYPE n_function_type','function_type',2,'p_function_type','codeinput.py',899),
  ('function_type -> DOUBLE_TYPE n_function_type','function_type',2,'p_function_type','codeinput.py',900),
  ('function_type -> FLOAT_TYPE n_function_type','function_type',2,'p_function_type','codeinput.py',901),
  ('function_type -> BOOL_TYPE n_function_type','function_type',2,'p_function_type','codeinput.py',902),
  ('function_definition -> n_before_function_definition FUNCTION NAME n_open_new_scope_function parameter_list DOUBLEDOT function_type LCURLY n_function_block_start codeblock return RCURLY n_close_scope n_function_block_end','function_definition',14,'p_function_definition','codeinput.py',908),
  ('return -> RETURN expression n_return SEMICOLON','return',4,'p_return','codeinput.py',914),
  ('return -> RETURN n_return_void SEMICOLON','return',3,'p_return','codeinput.py',915),
  ('return -> empty','return',1,'p_return','codeinput.py',916),
  ('function_call -> NAME n_function_call_1 LPARENTHESIS n_function_call_2 arg_list RPARENTHESIS n_function_call_5 n_function_call_6','function_call',8,'p_function_call','codeinput.py',922),
  ('function_call -> NAME n_function_call_1 LPARENTHESIS RPARENTHESIS n_function_call_6','function_call',5,'p_function_call','codeinput.py',923),
  ('arg_list -> arg','arg_list',1,'p_arg_list','codeinput.py',933),
  ('arg_list -> arg COMMA n_function_call_4 arg_list','arg_list',4,'p_arg_list','codeinput.py',934),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','codeinput.py',940),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','codeinput.py',941),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','codeinput.py',942),
  ('arg -> expression n_function_call_3','arg',2,'p_arg','codeinput.py',948),
  ('parameter -> type NAME n_variable_instantiate_param','parameter',3,'p_parameter','codeinput.py',954),
  ('expression -> expression_or','expression',1,'p_expression','codeinput.py',960),
  ('expression -> expression_or AND n_math_expression_10 expression n_math_expression_11','expression',5,'p_expression','codeinput.py',961),
  ('expression_or -> expression_rel','expression_or',1,'p_expression_or','codeinput.py',967),
  ('expression_or -> expression_rel OR n_math_expression_10 expression_or n_math_expression_12','expression_or',5,'p_expression_or','codeinput.py',968),
  ('expression_rel -> exp','expression_rel',1,'p_expression_rel','codeinput.py',974),
  ('expression_rel -> exp relational_operator exp n_math_expression_9','expression_rel',4,'p_expression_rel','codeinput.py',975),
  ('exp -> termino n_math_expression_4','exp',2,'p_exp','codeinput.py',981),
  ('exp -> termino n_math_expression_4 PLUS n_math_expression_2 exp','exp',5,'p_exp','codeinput.py',982),
  ('exp -> termino n_math_expression_4 MINUS n_math_expression_2 exp','exp',5,'p_exp','codeinput.py',983),
  ('termino -> factor n_math_expression_5','termino',2,'p_termino','codeinput.py',989),
  ('termino -> factor n_math_expression_5 TIMES n_math_expression_3 termino','termino',5,'p_termino','codeinput.py',990),
  ('termino -> factor n_math_expression_5 DIVIDE n_math_expression_3 termino','termino',5,'p_termino','codeinput.py',991),
  ('termino -> factor n_math_expression_5 MODULUS n_math_expression_3 termino','termino',5,'p_termino','codeinput.py',992),
  ('factor -> LPARENTHESIS n_math_expression_6 expression RPARENTHESIS n_math_expression_7','factor',5,'p_factor','codeinput.py',998),
  ('factor -> PLUS value','factor',2,'p_factor','codeinput.py',999),
  ('factor -> MINUS value','factor',2,'p_factor','codeinput.py',1000),
  ('factor -> value','factor',1,'p_factor','codeinput.py',1001),
  ('n_input_string -> <empty>','n_input_string',0,'p_n_input_string','codeinput.py',1006),
  ('n_input_int -> <empty>','n_input_int',0,'p_n_input_int','codeinput.py',1011),
  ('n_input_float -> <empty>','n_input_float',0,'p_n_input_float','codeinput.py',1016),
  ('input -> INPUTSTRING LPARENTHESIS RPARENTHESIS n_input_string','input',4,'p_input','codeinput.py',1038),
  ('input -> INPUTINT LPARENTHESIS RPARENTHESIS n_input_int','input',4,'p_input','codeinput.py',1039),
  ('input -> INPUTFLOAT LPARENTHESIS RPARENTHESIS n_input_float','input',4,'p_input','codeinput.py',1040),
  ('value -> function_call','value',1,'p_value','codeinput.py',1046),
  ('value -> literal','value',1,'p_value','codeinput.py',1047),
  ('value -> NAME n_variable_reference n_math_expression_1_name','value',3,'p_value','codeinput.py',1048),
  ('value -> input','value',1,'p_value','codeinput.py',1049),
  ('declare -> type NAME n_variable_instantiate','declare',3,'p_declare','codeinput.py',1055),
  ('assign -> type NAME n_variable_instantiate n_math_expression_1_name EQUAL n_seen_equal_op expression','assign',7,'p_assign','codeinput.py',1060),
  ('assign -> NAME n_variable_reference n_math_expression_1_name EQUAL n_seen_equal_op expression','assign',6,'p_assign','codeinput.py',1061),
  ('print -> PRINT LPARENTHESIS expression n_print RPARENTHESIS','print',5,'p_print','codeinput.py',1070),
  ('statement -> statement_aux SEMICOLON','statement',2,'p_statement','codeinput.py',1076),
  ('statement_aux -> assign','statement_aux',1,'p_statement_aux','codeinput.py',1082),
  ('statement_aux -> declare','statement_aux',1,'p_statement_aux','codeinput.py',1083),
  ('statement_aux -> function_call','statement_aux',1,'p_statement_aux','codeinput.py',1084),
  ('statement_aux -> print','statement_aux',1,'p_statement_aux','codeinput.py',1085),
  ('function_codeblock -> codeblock','function_codeblock',1,'p_function_codeblock','codeinput.py',1092),
  ('function_codeblock -> return','function_codeblock',1,'p_function_codeblock','codeinput.py',1093),
  ('codeblock -> empty','codeblock',1,'p_codeblock','codeinput.py',1099),
  ('codeblock -> codeblock_aux codeblock','codeblock',2,'p_codeblock','codeinput.py',1100),
  ('codeblock -> return','codeblock',1,'p_codeblock','codeinput.py',1101),
  ('codeblock_aux -> statement','codeblock_aux',1,'p_codeblock_aux','codeinput.py',1107),
  ('codeblock_aux -> function_definition','codeblock_aux',1,'p_codeblock_aux','codeinput.py',1108),
  ('codeblock_aux -> condition_if','codeblock_aux',1,'p_codeblock_aux','codeinput.py',1109),
  ('codeblock_aux -> loop','codeblock_aux',1,'p_codeblock_aux','codeinput.py',1110),
  ('loop -> forloop','loop',1,'p_loop','codeinput.py',1116),
  ('loop -> whileloop','loop',1,'p_loop','codeinput.py',1117),
  ('whileloop -> WHILE p_n_pre_condition_loop_1 LPARENTHESIS expression RPARENTHESIS p_n_pre_condition_loop_2 LCURLY n_open_new_scope codeblock RCURLY p_n_pre_condition_loop_3 n_close_scope','whileloop',12,'p_whileloop','codeinput.py',1123),
  ('forloop -> FOR LPARENTHESIS n_open_new_scope assign DOUBLEDOT expression DOUBLEDOT assign RPARENTHESIS LCURLY codeblock RCURLY n_close_scope','forloop',13,'p_forloop','codeinput.py',1129),
  ('condition_if -> IF LPARENTHESIS expression RPARENTHESIS LCURLY n_two_way_conditional_1 n_open_new_scope codeblock RCURLY n_close_scope condition_else n_two_way_conditional_2','condition_if',12,'p_condition_if','codeinput.py',1135),
  ('condition_else -> ELSE n_two_way_conditional_3 LCURLY n_open_new_scope codeblock RCURLY n_close_scope','condition_else',7,'p_condition_else','codeinput.py',1141),
  ('condition_else -> empty','condition_else',1,'p_condition_else','codeinput.py',1142),
]
